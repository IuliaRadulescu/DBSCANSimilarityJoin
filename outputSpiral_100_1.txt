(312, 3)
quick len(objs), constSmallNumber 200 10
p1 = (7.35, 14.95) len objs = 200
r is 12.88
new r is 12.88
p1 = (7.35, 14.95)
startIdx = 0 obj (31.95, 7.95)
endIdx = 199 obj (16.55, 19.9)
startDIST = 25.576551761330144 obj (31.95, 7.95)
endDIST = 10.447128792161031 obj (16.55, 19.9)
Pentru (16.55, 19.9) endDist este 10.447128792161031 iar r-eps este 10.080000000000002
endDist Il apendeaza pe (16.55, 19.9) endDist 10.447128792161031
Before swap start end (31.95, 7.95) (16.55, 19.9) 0 199
After swap start end (16.55, 19.9) (31.95, 7.95) 0 199
p1 = (7.35, 14.95)
startIdx = 1 obj (31.15, 7.3)
endIdx = 198 obj (16.2, 19.9)
startDIST = 24.99924998874966 obj (31.15, 7.3)
endDIST = 10.140266268693342 obj (16.2, 19.9)
Pentru (16.2, 19.9) endDist este 10.140266268693342 iar r-eps este 10.080000000000002
endDist Il apendeaza pe (16.2, 19.9) endDist 10.140266268693342
Before swap start end (31.15, 7.3) (16.2, 19.9) 1 198
After swap start end (16.2, 19.9) (31.15, 7.3) 1 198
p1 = (7.35, 14.95)
startIdx = 2 obj (30.45, 6.65)
endIdx = 197 obj (15.95, 19.9)
startDIST = 24.545875417267155 obj (30.45, 6.65)
endDIST = 9.922827218086587 obj (15.95, 19.9)
Pentru (15.95, 19.9) endDist este 9.922827218086587 iar r-eps este 10.080000000000002
Before swap start end (30.45, 6.65) (15.95, 19.9) 2 197
After swap start end (15.95, 19.9) (30.45, 6.65) 2 197
p1 = (7.35, 14.95)
startIdx = 3 obj (29.7, 6.0)
endIdx = 196 obj (15.55, 19.85)
startDIST = 24.075402385006985 obj (29.7, 6.0)
endDIST = 9.552486587271403 obj (15.55, 19.85)
Pentru (15.55, 19.85) endDist este 9.552486587271403 iar r-eps este 10.080000000000002
Before swap start end (29.7, 6.0) (15.55, 19.85) 3 196
After swap start end (15.55, 19.85) (29.7, 6.0) 3 196
p1 = (7.35, 14.95)
startIdx = 4 obj (28.9, 5.55)
endIdx = 195 obj (15.25, 19.7)
startDIST = 23.510901726645873 obj (28.9, 5.55)
endDIST = 9.218052939748176 obj (15.25, 19.7)
Pentru (15.25, 19.7) endDist este 9.218052939748176 iar r-eps este 10.080000000000002
Before swap start end (28.9, 5.55) (15.25, 19.7) 4 195
After swap start end (15.25, 19.7) (28.9, 5.55) 4 195
p1 = (7.35, 14.95)
startIdx = 5 obj (28.05, 5.0)
endIdx = 194 obj (15.0, 19.7)
startDIST = 22.96720488000227 obj (28.05, 5.0)
endDIST = 9.004720984017217 obj (15.0, 19.7)
Pentru (15.0, 19.7) endDist este 9.004720984017217 iar r-eps este 10.080000000000002
Before swap start end (28.05, 5.0) (15.0, 19.7) 5 194
After swap start end (15.0, 19.7) (28.05, 5.0) 5 194
p1 = (7.35, 14.95)
startIdx = 6 obj (27.2, 4.55)
endIdx = 193 obj (14.85, 19.55)
startDIST = 22.409428819137716 obj (27.2, 4.55)
endDIST = 8.798295289429653 obj (14.85, 19.55)
Pentru (14.85, 19.55) endDist este 8.798295289429653 iar r-eps este 10.080000000000002
Before swap start end (27.2, 4.55) (14.85, 19.55) 6 193
After swap start end (14.85, 19.55) (27.2, 4.55) 6 193
p1 = (7.35, 14.95)
startIdx = 7 obj (26.35, 4.15)
endIdx = 192 obj (14.45, 19.5)
startDIST = 21.85497654997598 obj (26.35, 4.15)
endDIST = 8.432822777694312 obj (14.45, 19.5)
Pentru (14.45, 19.5) endDist este 8.432822777694312 iar r-eps este 10.080000000000002
Before swap start end (26.35, 4.15) (14.45, 19.5) 7 192
After swap start end (14.45, 19.5) (26.35, 4.15) 7 192
p1 = (7.35, 14.95)
startIdx = 8 obj (25.4, 3.85)
endIdx = 191 obj (14.15, 19.25)
startDIST = 21.189915054100616 obj (25.4, 3.85)
endDIST = 8.045495634204274 obj (14.15, 19.25)
Pentru (14.15, 19.25) endDist este 8.045495634204274 iar r-eps este 10.080000000000002
Before swap start end (25.4, 3.85) (14.15, 19.25) 8 191
After swap start end (14.15, 19.25) (25.4, 3.85) 8 191
p1 = (7.35, 14.95)
startIdx = 9 obj (24.6, 3.6)
endIdx = 190 obj (13.8, 19.05)
startDIST = 20.64909198972197 obj (24.6, 3.6)
endDIST = 7.642807075937481 obj (13.8, 19.05)
Pentru (13.8, 19.05) endDist este 7.642807075937481 iar r-eps este 10.080000000000002
Before swap start end (24.6, 3.6) (13.8, 19.05) 9 190
After swap start end (13.8, 19.05) (24.6, 3.6) 9 190
p1 = (7.35, 14.95)
startIdx = 10 obj (23.6, 3.3)
endIdx = 189 obj (13.55, 18.85)
startDIST = 19.9946242775402 obj (23.6, 3.3)
endDIST = 7.324616030891996 obj (13.55, 18.85)
Pentru (13.55, 18.85) endDist este 7.324616030891996 iar r-eps este 10.080000000000002
Before swap start end (23.6, 3.3) (13.55, 18.85) 10 189
After swap start end (13.55, 18.85) (23.6, 3.3) 10 189
p1 = (7.35, 14.95)
startIdx = 11 obj (22.75, 3.15)
endIdx = 188 obj (13.3, 18.6)
startDIST = 19.40103090044444 obj (22.75, 3.15)
endDIST = 6.980329505116504 obj (13.3, 18.6)
Pentru (13.3, 18.6) endDist este 6.980329505116504 iar r-eps este 10.080000000000002
Before swap start end (22.75, 3.15) (13.3, 18.6) 11 188
After swap start end (13.3, 18.6) (22.75, 3.15) 11 188
p1 = (7.35, 14.95)
startIdx = 12 obj (21.85, 3.05)
endIdx = 187 obj (13.1, 18.4)
startDIST = 18.757931655702343 obj (21.85, 3.05)
endDIST = 6.705594679072095 obj (13.1, 18.4)
Pentru (13.1, 18.4) endDist este 6.705594679072095 iar r-eps este 10.080000000000002
Before swap start end (21.85, 3.05) (13.1, 18.4) 12 187
After swap start end (13.1, 18.4) (21.85, 3.05) 12 187
p1 = (7.35, 14.95)
startIdx = 13 obj (20.9, 3.0)
endIdx = 186 obj (12.8, 18.05)
startDIST = 18.066682041813873 obj (20.9, 3.0)
endDIST = 6.2699681019922275 obj (12.8, 18.05)
Pentru (12.8, 18.05) endDist este 6.2699681019922275 iar r-eps este 10.080000000000002
Before swap start end (20.9, 3.0) (12.8, 18.05) 13 186
After swap start end (12.8, 18.05) (20.9, 3.0) 13 186
p1 = (7.35, 14.95)
startIdx = 14 obj (20.0, 2.9)
endIdx = 185 obj (12.55, 17.85)
startDIST = 17.470689740247806 obj (20.0, 2.9)
endDIST = 5.953990258641681 obj (12.55, 17.85)
Pentru (12.55, 17.85) endDist este 5.953990258641681 iar r-eps este 10.080000000000002
Before swap start end (20.0, 2.9) (12.55, 17.85) 14 185
After swap start end (12.55, 17.85) (20.0, 2.9) 14 185
p1 = (7.35, 14.95)
startIdx = 15 obj (19.1, 3.0)
endIdx = 184 obj (12.3, 17.6)
startDIST = 16.759027418081278 obj (19.1, 3.0)
endDIST = 5.61471281545192 obj (12.3, 17.6)
Pentru (12.3, 17.6) endDist este 5.61471281545192 iar r-eps este 10.080000000000002
Before swap start end (19.1, 3.0) (12.3, 17.6) 15 184
After swap start end (12.3, 17.6) (19.1, 3.0) 15 184
p1 = (7.35, 14.95)
startIdx = 16 obj (18.2, 3.2)
endIdx = 183 obj (12.15, 17.2)
startDIST = 15.993279838732267 obj (18.2, 3.2)
endDIST = 5.301179114121688 obj (12.15, 17.2)
Pentru (12.15, 17.2) endDist este 5.301179114121688 iar r-eps este 10.080000000000002
Before swap start end (18.2, 3.2) (12.15, 17.2) 16 183
After swap start end (12.15, 17.2) (18.2, 3.2) 16 183
p1 = (7.35, 14.95)
startIdx = 17 obj (17.3, 3.25)
endIdx = 182 obj (12.0, 16.75)
startDIST = 15.3587922702275 obj (17.3, 3.25)
endDIST = 4.986231041578399 obj (12.0, 16.75)
Pentru (12.0, 16.75) endDist este 4.986231041578399 iar r-eps este 10.080000000000002
startDist Il apendeaza pe (17.3, 3.25) startDist 15.3587922702275
Before swap start end (17.3, 3.25) (12.0, 16.75) 17 182
After swap start end (12.0, 16.75) (17.3, 3.25) 17 182
p1 = (7.35, 14.95)
startIdx = 18 obj (16.55, 3.5)
endIdx = 181 obj (11.85, 16.5)
startDIST = 14.688175516380515 obj (16.55, 3.5)
endDIST = 4.759464255564906 obj (11.85, 16.5)
Pentru (11.85, 16.5) endDist este 4.759464255564906 iar r-eps este 10.080000000000002
startDist Il apendeaza pe (16.55, 3.5) startDist 14.688175516380515
Before swap start end (16.55, 3.5) (11.85, 16.5) 18 181
After swap start end (11.85, 16.5) (16.55, 3.5) 18 181
p1 = (7.35, 14.95)
startIdx = 19 obj (15.7, 3.7)
endIdx = 180 obj (11.8, 16.05)
startDIST = 14.010174873997826 obj (15.7, 3.7)
endDIST = 4.5839393538745705 obj (11.8, 16.05)
Pentru (11.8, 16.05) endDist este 4.5839393538745705 iar r-eps este 10.080000000000002
startDist Il apendeaza pe (15.7, 3.7) startDist 14.010174873997826
Before swap start end (15.7, 3.7) (11.8, 16.05) 19 180
After swap start end (11.8, 16.05) (15.7, 3.7) 19 180
p1 = (7.35, 14.95)
startIdx = 20 obj (14.85, 4.1)
endIdx = 179 obj (11.65, 15.7)
startDIST = 13.189863532273561 obj (14.85, 4.1)
endDIST = 4.364916952245484 obj (11.65, 15.7)
Pentru (11.65, 15.7) endDist este 4.364916952245484 iar r-eps este 10.080000000000002
startDist Il apendeaza pe (14.85, 4.1) startDist 13.189863532273561
Before swap start end (14.85, 4.1) (11.65, 15.7) 20 179
After swap start end (11.65, 15.7) (14.85, 4.1) 20 179
p1 = (7.35, 14.95)
startIdx = 21 obj (14.15, 4.4)
endIdx = 178 obj (11.6, 15.25)
startDIST = 12.551593524329888 obj (14.15, 4.4)
endDIST = 4.260575078554537 obj (11.6, 15.25)
AL DOILEA WHILE startIdx = 21 obj (14.15, 4.4) start 12.551593524329888
startDist Il apendeaza pe (14.15, 4.4) endDist 12.551593524329888
AL DOILEA WHILE startIdx = 22 obj (13.4, 4.75) start 11.85927906746443
startDist Il apendeaza pe (13.4, 4.75) endDist 11.85927906746443
AL DOILEA WHILE startIdx = 23 obj (12.7, 5.2) start 11.121375814169756
startDist Il apendeaza pe (12.7, 5.2) endDist 11.121375814169756
AL DOILEA WHILE startIdx = 24 obj (12.05, 5.65) start 10.420172743289815
startDist Il apendeaza pe (12.05, 5.65) endDist 10.420172743289815
AL DOILEA WHILE startIdx = 25 obj (11.45, 6.15) start 9.708243919473798
AL DOILEA WHILE startIdx = 26 obj (10.9, 6.65) start 9.027319646495298
AL DOILEA WHILE startIdx = 27 obj (10.3, 7.25) start 8.245756484398505
AL DOILEA WHILE startIdx = 28 obj (9.7, 7.85) start 7.478803380220662
AL DOILEA WHILE startIdx = 29 obj (9.35, 8.35) start 6.896375859826667
AL DOILEA WHILE startIdx = 30 obj (8.9, 9.05) start 6.100204914590983
AL DOILEA WHILE startIdx = 31 obj (8.55, 9.65) start 5.434151267677409
AL DOILEA WHILE startIdx = 32 obj (8.15, 10.35) start 4.6690470119715
AL DOILEA WHILE startIdx = 33 obj (7.95, 10.95) start 4.044749683231337
AL DOILEA WHILE startIdx = 34 obj (7.75, 11.7) start 3.2745228660065884
AL DOILEA WHILE startIdx = 35 obj (7.55, 12.35) start 2.607680962081059
AL DOILEA WHILE startIdx = 36 obj (7.45, 13.0) start 1.9525624189766628
AL DOILEA WHILE startIdx = 37 obj (7.35, 13.75) start 1.1999999999999993
AL DOILEA WHILE startIdx = 38 obj (7.3, 14.35) start 0.6020797289396145
AL DOILEA WHILE startIdx = 39 obj (7.35, 14.95) start 0.0
AL DOILEA WHILE startIdx = 40 obj (7.35, 15.75) start 0.8000000000000007
AL DOILEA WHILE startIdx = 41 obj (7.55, 16.35) start 1.4142135623730971
AL DOILEA WHILE startIdx = 42 obj (7.7, 16.95) start 2.0303940504246953
AL DOILEA WHILE startIdx = 43 obj (7.8, 17.55) start 2.638654960391754
AL DOILEA WHILE startIdx = 44 obj (8.05, 18.15) start 3.2756678708318394
AL DOILEA WHILE startIdx = 45 obj (8.3, 18.75) start 3.916950344336778
AL DOILEA WHILE startIdx = 46 obj (8.65, 19.3) start 4.540099117860756
AL DOILEA WHILE startIdx = 47 obj (8.9, 19.85) start 5.139309292113097
AL DOILEA WHILE startIdx = 48 obj (9.3, 20.3) start 5.694295391003177
AL DOILEA WHILE startIdx = 49 obj (9.65, 20.8) start 6.285896912931362
AL DOILEA WHILE startIdx = 50 obj (10.2, 21.25) start 6.914658342969666
AL DOILEA WHILE startIdx = 51 obj (10.6, 21.65) start 7.446643539206103
AL DOILEA WHILE startIdx = 52 obj (11.1, 22.15) start 8.118035476640884
AL DOILEA WHILE startIdx = 53 obj (11.55, 22.45) start 8.595929269136642
AL DOILEA WHILE startIdx = 54 obj (11.95, 22.7) start 9.012352634024037
AL DOILEA WHILE startIdx = 55 obj (12.55, 23.0) start 9.583449274660978
AL DOILEA WHILE startIdx = 56 obj (13.05, 23.2) start 10.027586948014962
AL DOILEA WHILE startIdx = 57 obj (13.45, 23.4) start 10.421732101718984
startDist Il apendeaza pe (13.45, 23.4) endDist 10.421732101718984
AL DOILEA WHILE startIdx = 58 obj (14.0, 23.55) start 10.871177489122328
startDist Il apendeaza pe (14.0, 23.55) endDist 10.871177489122328
AL DOILEA WHILE startIdx = 59 obj (14.55, 23.6) start 11.254443566876153
startDist Il apendeaza pe (14.55, 23.6) endDist 11.254443566876153
AL DOILEA WHILE startIdx = 60 obj (15.1, 23.75) start 11.726145999432209
startDist Il apendeaza pe (15.1, 23.75) endDist 11.726145999432209
AL DOILEA WHILE startIdx = 61 obj (15.7, 23.75) start 12.131055189059195
startDist Il apendeaza pe (15.7, 23.75) endDist 12.131055189059195
AL DOILEA WHILE startIdx = 62 obj (16.15, 23.85) start 12.515989773086268
startDist Il apendeaza pe (16.15, 23.85) endDist 12.515989773086268
AL DOILEA WHILE startIdx = 63 obj (16.7, 23.8) start 12.874199004209933
startDist Il apendeaza pe (16.7, 23.8) endDist 12.874199004209933
Pentru (11.6, 15.25) endDist este 4.260575078554537 iar r-eps este 10.080000000000002
startDist Il apendeaza pe (17.15, 23.75) startDist 13.171180660821564
Before swap start end (17.15, 23.75) (11.6, 15.25) 64 178
After swap start end (11.6, 15.25) (17.15, 23.75) 64 178
p1 = (7.35, 14.95)
startIdx = 65 obj (17.75, 23.75)
endIdx = 177 obj (11.55, 14.7)
startDIST = 13.623509092741122 obj (17.75, 23.75)
endDIST = 4.207433897282286 obj (11.55, 14.7)
Pentru (11.55, 14.7) endDist este 4.207433897282286 iar r-eps este 10.080000000000002
startDist Il apendeaza pe (17.75, 23.75) startDist 13.623509092741122
Before swap start end (17.75, 23.75) (11.55, 14.7) 65 177
After swap start end (11.55, 14.7) (17.75, 23.75) 65 177
p1 = (7.35, 14.95)
startIdx = 66 obj (18.2, 23.6)
endIdx = 176 obj (11.55, 14.35)
startDIST = 13.876058518181596 obj (18.2, 23.6)
endDIST = 4.242640687119286 obj (11.55, 14.35)
Pentru (11.55, 14.35) endDist este 4.242640687119286 iar r-eps este 10.080000000000002
startDist Il apendeaza pe (18.2, 23.6) startDist 13.876058518181596
Before swap start end (18.2, 23.6) (11.55, 14.35) 66 176
After swap start end (11.55, 14.35) (18.2, 23.6) 66 176
p1 = (7.35, 14.95)
startIdx = 67 obj (18.65, 23.5)
endIdx = 175 obj (11.55, 14.0)
startDIST = 14.170127028364988 obj (18.65, 23.5)
endDIST = 4.306100323959024 obj (11.55, 14.0)
Pentru (11.55, 14.0) endDist este 4.306100323959024 iar r-eps este 10.080000000000002
startDist Il apendeaza pe (18.65, 23.5) startDist 14.170127028364988
Before swap start end (18.65, 23.5) (11.55, 14.0) 67 175
After swap start end (11.55, 14.0) (18.65, 23.5) 67 175
p1 = (7.35, 14.95)
startIdx = 68 obj (19.1, 23.35)
endIdx = 174 obj (11.55, 13.6)
startDIST = 14.443770283412848 obj (19.1, 23.35)
endDIST = 4.4116323509558235 obj (11.55, 13.6)
Pentru (11.55, 13.6) endDist este 4.4116323509558235 iar r-eps este 10.080000000000002
startDist Il apendeaza pe (19.1, 23.35) startDist 14.443770283412848
Before swap start end (19.1, 23.35) (11.55, 13.6) 68 174
After swap start end (11.55, 13.6) (19.1, 23.35) 68 174
p1 = (7.35, 14.95)
startIdx = 69 obj (19.6, 23.15)
endIdx = 173 obj (11.75, 13.05)
startDIST = 14.741183805922782 obj (19.6, 23.15)
endDIST = 4.792702786528704 obj (11.75, 13.05)
Pentru (11.75, 13.05) endDist este 4.792702786528704 iar r-eps este 10.080000000000002
startDist Il apendeaza pe (19.6, 23.15) startDist 14.741183805922782
Before swap start end (19.6, 23.15) (11.75, 13.05) 69 173
After swap start end (11.75, 13.05) (19.6, 23.15) 69 173
p1 = (7.35, 14.95)
startIdx = 70 obj (20.0, 22.95)
endIdx = 172 obj (11.8, 12.65)
startDIST = 14.967381200463894 obj (20.0, 22.95)
endDIST = 5.009241459542553 obj (11.8, 12.65)
Pentru (11.8, 12.65) endDist este 5.009241459542553 iar r-eps este 10.080000000000002
startDist Il apendeaza pe (20.0, 22.95) startDist 14.967381200463894
Before swap start end (20.0, 22.95) (11.8, 12.65) 70 172
After swap start end (11.8, 12.65) (20.0, 22.95) 70 172
p1 = (7.35, 14.95)
startIdx = 71 obj (20.4, 22.7)
endIdx = 171 obj (11.95, 12.2)
startDIST = 15.177779811289923 obj (20.4, 22.7)
endDIST = 5.359337645642416 obj (11.95, 12.2)
Pentru (11.95, 12.2) endDist este 5.359337645642416 iar r-eps este 10.080000000000002
startDist Il apendeaza pe (20.4, 22.7) startDist 15.177779811289923
Before swap start end (20.4, 22.7) (11.95, 12.2) 71 171
After swap start end (11.95, 12.2) (20.4, 22.7) 71 171
p1 = (7.35, 14.95)
startIdx = 72 obj (20.7, 22.55)
endIdx = 170 obj (12.2, 11.75)
startDIST = 15.361721908692399 obj (20.7, 22.55)
endDIST = 5.810550748423077 obj (12.2, 11.75)
Pentru (12.2, 11.75) endDist este 5.810550748423077 iar r-eps este 10.080000000000002
startDist Il apendeaza pe (20.7, 22.55) startDist 15.361721908692399
Before swap start end (20.7, 22.55) (12.2, 11.75) 72 170
After swap start end (12.2, 11.75) (20.7, 22.55) 72 170
p1 = (7.35, 14.95)
startIdx = 73 obj (21.0, 22.15)
endIdx = 169 obj (12.35, 11.4)
startDIST = 15.432514377119498 obj (21.0, 22.15)
endDIST = 6.132087735836792 obj (12.35, 11.4)
Pentru (12.35, 11.4) endDist este 6.132087735836792 iar r-eps este 10.080000000000002
startDist Il apendeaza pe (21.0, 22.15) startDist 15.432514377119498
Before swap start end (21.0, 22.15) (12.35, 11.4) 73 169
After swap start end (12.35, 11.4) (21.0, 22.15) 73 169
p1 = (7.35, 14.95)
startIdx = 74 obj (21.45, 21.95)
endIdx = 168 obj (12.65, 10.9)
startDIST = 15.741982086128798 obj (21.45, 21.95)
endDIST = 6.67026985960838 obj (12.65, 10.9)
Pentru (12.65, 10.9) endDist este 6.67026985960838 iar r-eps este 10.080000000000002
Before swap start end (21.45, 21.95) (12.65, 10.9) 74 168
After swap start end (12.65, 10.9) (21.45, 21.95) 74 168
p1 = (7.35, 14.95)
startIdx = 75 obj (21.75, 21.55)
endIdx = 167 obj (12.95, 10.55)
startDIST = 15.840454538932903 obj (21.75, 21.55)
endDIST = 7.121797525905941 obj (12.95, 10.55)
Pentru (12.95, 10.55) endDist este 7.121797525905941 iar r-eps este 10.080000000000002
Before swap start end (21.75, 21.55) (12.95, 10.55) 75 167
After swap start end (12.95, 10.55) (21.75, 21.55) 75 167
p1 = (7.35, 14.95)
startIdx = 76 obj (22.0, 21.25)
endIdx = 166 obj (13.25, 10.1)
startDIST = 15.947178433817061 obj (22.0, 21.25)
endDIST = 7.637571603592336 obj (13.25, 10.1)
Pentru (13.25, 10.1) endDist este 7.637571603592336 iar r-eps este 10.080000000000002
Before swap start end (22.0, 21.25) (13.25, 10.1) 76 166
After swap start end (13.25, 10.1) (22.0, 21.25) 76 166
p1 = (7.35, 14.95)
startIdx = 77 obj (22.25, 21.0)
endIdx = 165 obj (13.6, 9.65)
startDIST = 16.08143339382407 obj (22.25, 21.0)
endDIST = 8.194662897276494 obj (13.6, 9.65)
Pentru (13.6, 9.65) endDist este 8.194662897276494 iar r-eps este 10.080000000000002
Before swap start end (22.25, 21.0) (13.6, 9.65) 77 165
After swap start end (13.6, 9.65) (22.25, 21.0) 77 165
p1 = (7.35, 14.95)
startIdx = 78 obj (22.5, 20.7)
endIdx = 164 obj (13.95, 9.3)
startDIST = 16.20447469065258 obj (22.5, 20.7)
endDIST = 8.688066528290399 obj (13.95, 9.3)
Pentru (13.95, 9.3) endDist este 8.688066528290399 iar r-eps este 10.080000000000002
Before swap start end (22.5, 20.7) (13.95, 9.3) 78 164
After swap start end (13.95, 9.3) (22.5, 20.7) 78 164
p1 = (7.35, 14.95)
startIdx = 79 obj (22.65, 20.35)
endIdx = 163 obj (14.45, 8.9)
startDIST = 16.224980739587952 obj (22.65, 20.35)
endDIST = 9.328049099356198 obj (14.45, 8.9)
Pentru (14.45, 8.9) endDist este 9.328049099356198 iar r-eps este 10.080000000000002
Before swap start end (22.65, 20.35) (14.45, 8.9) 79 163
After swap start end (14.45, 8.9) (22.65, 20.35) 79 163
p1 = (7.35, 14.95)
startIdx = 80 obj (22.75, 20.05)
endIdx = 162 obj (14.9, 8.7)
startDIST = 16.2225152180542 obj (22.75, 20.05)
endDIST = 9.801275427208441 obj (14.9, 8.7)
Pentru (14.9, 8.7) endDist este 9.801275427208441 iar r-eps este 10.080000000000002
Before swap start end (22.75, 20.05) (14.9, 8.7) 80 162
After swap start end (14.9, 8.7) (22.75, 20.05) 80 162
p1 = (7.35, 14.95)
startIdx = 81 obj (22.9, 19.65)
endIdx = 161 obj (15.4, 8.35)
startDIST = 16.24476838862284 obj (22.9, 19.65)
endDIST = 10.409731024382907 obj (15.4, 8.35)
Pentru (15.4, 8.35) endDist este 10.409731024382907 iar r-eps este 10.080000000000002
endDist Il apendeaza pe (15.4, 8.35) endDist 10.409731024382907
Before swap start end (22.9, 19.65) (15.4, 8.35) 81 161
After swap start end (15.4, 8.35) (22.9, 19.65) 81 161
p1 = (7.35, 14.95)
startIdx = 82 obj (23.0, 19.35)
endIdx = 160 obj (15.8, 8.05)
startDIST = 16.256767821433634 obj (23.0, 19.35)
endDIST = 10.909285036151545 obj (15.8, 8.05)
Pentru (15.8, 8.05) endDist este 10.909285036151545 iar r-eps este 10.080000000000002
endDist Il apendeaza pe (15.8, 8.05) endDist 10.909285036151545
Before swap start end (23.0, 19.35) (15.8, 8.05) 82 160
After swap start end (15.8, 8.05) (23.0, 19.35) 82 160
p1 = (7.35, 14.95)
startIdx = 83 obj (23.1, 19.0)
endIdx = 159 obj (16.35, 7.8)
startDIST = 16.26237989963339 obj (23.1, 19.0)
endDIST = 11.49445518500116 obj (16.35, 7.8)
Pentru (16.35, 7.8) endDist este 11.49445518500116 iar r-eps este 10.080000000000002
endDist Il apendeaza pe (16.35, 7.8) endDist 11.49445518500116
Before swap start end (23.1, 19.0) (16.35, 7.8) 83 159
After swap start end (16.35, 7.8) (23.1, 19.0) 83 159
p1 = (7.35, 14.95)
startIdx = 84 obj (23.15, 18.65)
endIdx = 158 obj (16.9, 7.6)
startDIST = 16.227445886522005 obj (23.15, 18.65)
endDIST = 12.050933573794188 obj (16.9, 7.6)
Pentru (16.9, 7.6) endDist este 12.050933573794188 iar r-eps este 10.080000000000002
endDist Il apendeaza pe (16.9, 7.6) endDist 12.050933573794188
Before swap start end (23.15, 18.65) (16.9, 7.6) 84 158
After swap start end (16.9, 7.6) (23.15, 18.65) 84 158
p1 = (7.35, 14.95)
startIdx = 85 obj (23.2, 18.25)
endIdx = 157 obj (17.5, 7.35)
startDIST = 16.18988881987767 obj (23.2, 18.25)
endDIST = 12.680003943217052 obj (17.5, 7.35)
Pentru (17.5, 7.35) endDist este 12.680003943217052 iar r-eps este 10.080000000000002
endDist Il apendeaza pe (17.5, 7.35) endDist 12.680003943217052
Before swap start end (23.2, 18.25) (17.5, 7.35) 85 157
After swap start end (17.5, 7.35) (23.2, 18.25) 85 157
p1 = (7.35, 14.95)
startIdx = 86 obj (23.2, 18.05)
endIdx = 156 obj (18.05, 7.25)
startDIST = 16.150309594555765 obj (23.2, 18.05)
endDIST = 13.18256424221024 obj (18.05, 7.25)
PRIMUL WHILE endIdx = 156 obj (18.05, 7.25) endDist 13.18256424221024
endDist Il apendeaza pe (18.05, 7.25) endDist 13.18256424221024
PRIMUL WHILE endIdx = 155 obj (18.75, 7.1) endDist 13.841333028288858
endDist Il apendeaza pe (18.75, 7.1) endDist 13.841333028288858
PRIMUL WHILE endIdx = 154 obj (19.25, 7.05) endDist 14.28355697996826
endDist Il apendeaza pe (19.25, 7.05) endDist 14.28355697996826
PRIMUL WHILE endIdx = 153 obj (19.9, 6.95) endDist 14.882960055042812
endDist Il apendeaza pe (19.9, 6.95) endDist 14.882960055042812
PRIMUL WHILE endIdx = 152 obj (20.5, 7.0) endDist 15.366359360629309
endDist Il apendeaza pe (20.5, 7.0) endDist 15.366359360629309
PRIMUL WHILE endIdx = 151 obj (21.25, 7.05) endDist 15.988120589988055
PRIMUL WHILE endIdx = 150 obj (21.9, 7.1) endDist 16.5325436639375
PRIMUL WHILE endIdx = 149 obj (22.5, 7.3) endDist 16.971888521905864
PRIMUL WHILE endIdx = 148 obj (23.15, 7.4) endDist 17.5112106948663
PRIMUL WHILE endIdx = 147 obj (23.9, 7.65) endDist 18.08846317407866
PRIMUL WHILE endIdx = 146 obj (24.5, 7.75) endDist 18.600067204179666
PRIMUL WHILE endIdx = 145 obj (25.15, 8.05) endDist 19.09057359012557
PRIMUL WHILE endIdx = 144 obj (25.7, 8.4) endDist 19.483967768398713
PRIMUL WHILE endIdx = 143 obj (26.25, 8.8) endDist 19.875424523768036
PRIMUL WHILE endIdx = 142 obj (26.9, 9.1) endDist 20.40649406439038
PRIMUL WHILE endIdx = 141 obj (27.55, 9.65) endDist 20.883725721240452
PRIMUL WHILE endIdx = 140 obj (28.0, 10.1) endDist 21.211907033550755
PRIMUL WHILE endIdx = 139 obj (28.5, 10.6) endDist 21.59270710216762
PRIMUL WHILE endIdx = 138 obj (29.0, 11.15) endDist 21.980957667945223
PRIMUL WHILE endIdx = 137 obj (29.5, 11.75) endDist 22.37995755134491
PRIMUL WHILE endIdx = 136 obj (29.9, 12.3) endDist 22.705175621430456
PRIMUL WHILE endIdx = 135 obj (30.3, 13.0) endDist 23.032694154180057
PRIMUL WHILE endIdx = 134 obj (30.6, 13.65) endDist 23.28631572404703
PRIMUL WHILE endIdx = 133 obj (30.9, 14.35) endDist 23.557642072159936
PRIMUL WHILE endIdx = 132 obj (31.15, 15.05) endDist 23.800210083106407
PRIMUL WHILE endIdx = 131 obj (31.3, 15.8) endDist 23.96507876056326
PRIMUL WHILE endIdx = 130 obj (31.45, 16.55) endDist 24.153053637169776
PRIMUL WHILE endIdx = 129 obj (31.6, 17.35) endDist 24.368473485222662
PRIMUL WHILE endIdx = 128 obj (31.65, 18.15) endDist 24.50979396078229
PRIMUL WHILE endIdx = 127 obj (31.55, 18.9) endDist 24.52024673611585
PRIMUL WHILE endIdx = 126 obj (31.5, 19.7) endDist 24.612699973794015
PRIMUL WHILE endIdx = 125 obj (31.35, 20.55) endDist 24.64467488119898
PRIMUL WHILE endIdx = 124 obj (31.25, 21.3) endDist 24.72918316483583
PRIMUL WHILE endIdx = 123 obj (30.9, 22.1) endDist 24.611481060675725
PRIMUL WHILE endIdx = 122 obj (30.6, 22.9) endDist 24.571629982563223
PRIMUL WHILE endIdx = 121 obj (30.4, 23.7) endDist 24.654918373419935
PRIMUL WHILE endIdx = 120 obj (29.95, 24.45) endDist 24.51550529766825
PRIMUL WHILE endIdx = 119 obj (29.5, 25.15) endDist 24.38570277847247
PRIMUL WHILE endIdx = 118 obj (28.95, 25.85) endDist 24.194420844483965
PRIMUL WHILE endIdx = 117 obj (28.3, 26.6) endDist 23.971337050736246
PRIMUL WHILE endIdx = 116 obj (27.75, 27.35) endDist 23.87299729820284
PRIMUL WHILE endIdx = 115 obj (27.15, 27.9) endDist 23.658877826304437
PRIMUL WHILE endIdx = 114 obj (26.35, 28.5) endDist 23.336719992321115
PRIMUL WHILE endIdx = 113 obj (25.6, 29.05) endDist 23.062361110692894
PRIMUL WHILE endIdx = 112 obj (24.9, 29.65) endDist 22.89306663599265
PRIMUL WHILE endIdx = 111 obj (23.95, 30.05) endDist 22.440365415919594
PRIMUL WHILE endIdx = 110 obj (23.2, 30.45) endDist 22.16917905561683
PRIMUL WHILE endIdx = 109 obj (22.25, 30.9) endDist 21.82687563532628
PRIMUL WHILE endIdx = 108 obj (21.35, 31.1) endDist 21.37340637334162
PRIMUL WHILE endIdx = 107 obj (20.35, 31.45) endDist 21.005951537600005
PRIMUL WHILE endIdx = 106 obj (19.35, 31.65) endDist 20.56428943581567
PRIMUL WHILE endIdx = 105 obj (21.5, 14.9) endDist 14.150088338946864
endDist Il apendeaza pe (21.5, 14.9) endDist 14.150088338946864
PRIMUL WHILE endIdx = 104 obj (21.55, 15.0) endDist 14.200088027896166
endDist Il apendeaza pe (21.55, 15.0) endDist 14.200088027896166
PRIMUL WHILE endIdx = 103 obj (21.65, 15.05) endDist 14.300349646075091
endDist Il apendeaza pe (21.65, 15.05) endDist 14.300349646075091
PRIMUL WHILE endIdx = 102 obj (21.75, 15.15) endDist 14.401388821915754
endDist Il apendeaza pe (21.75, 15.15) endDist 14.401388821915754
PRIMUL WHILE endIdx = 101 obj (21.85, 15.25) endDist 14.50310311622999
endDist Il apendeaza pe (21.85, 15.25) endDist 14.50310311622999
PRIMUL WHILE endIdx = 100 obj (21.9, 15.3) endDist 14.554209013203018
endDist Il apendeaza pe (21.9, 15.3) endDist 14.554209013203018
PRIMUL WHILE endIdx = 99 obj (22.0, 15.4) endDist 14.656909633343586
endDist Il apendeaza pe (22.0, 15.4) endDist 14.656909633343586
PRIMUL WHILE endIdx = 98 obj (22.15, 15.55) endDist 14.812157169028419
endDist Il apendeaza pe (22.15, 15.55) endDist 14.812157169028419
PRIMUL WHILE endIdx = 97 obj (22.2, 15.65) endDist 14.866489161870062
endDist Il apendeaza pe (22.2, 15.65) endDist 14.866489161870062
PRIMUL WHILE endIdx = 96 obj (22.35, 15.8) endDist 15.024064030747475
endDist Il apendeaza pe (22.35, 15.8) endDist 15.024064030747475
PRIMUL WHILE endIdx = 95 obj (22.4, 15.95) endDist 15.083186002963696
endDist Il apendeaza pe (22.4, 15.95) endDist 15.083186002963696
PRIMUL WHILE endIdx = 94 obj (22.55, 16.05) endDist 15.239750654128171
endDist Il apendeaza pe (22.55, 16.05) endDist 15.239750654128171
PRIMUL WHILE endIdx = 93 obj (22.6, 16.2) endDist 15.301143748099358
endDist Il apendeaza pe (22.6, 16.2) endDist 15.301143748099358
PRIMUL WHILE endIdx = 92 obj (22.7, 16.4) endDist 15.418333243252981
endDist Il apendeaza pe (22.7, 16.4) endDist 15.418333243252981
PRIMUL WHILE endIdx = 91 obj (22.85, 16.6) endDist 15.58757518025174
endDist Il apendeaza pe (22.85, 16.6) endDist 15.58757518025174
PRIMUL WHILE endIdx = 90 obj (22.9, 16.9) endDist 15.671789942441164
endDist Il apendeaza pe (22.9, 16.9) endDist 15.671789942441164
PRIMUL WHILE endIdx = 89 obj (23.05, 17.15) endDist 15.85339080449353
PRIMUL WHILE endIdx = 88 obj (23.1, 17.45) endDist 15.947178433817063
PRIMUL WHILE endIdx = 87 obj (23.2, 17.8) endDist 16.104192000842513
sunt egale 86 86
========================= WIN L ===================
[(16.55, 19.9), (16.2, 19.9), (14.15, 4.4), (13.4, 4.75), (12.7, 5.2), (12.05, 5.65), (13.45, 23.4), (14.0, 23.55), (14.55, 23.6), (15.1, 23.75), (15.7, 23.75), (16.15, 23.85), (16.7, 23.8), (15.4, 8.35), (15.8, 8.05), (16.35, 7.8), (16.9, 7.6), (17.5, 7.35)]
========================= WIN L END ===================
========================= WIN G ===================
[(17.3, 3.25), (16.55, 3.5), (15.7, 3.7), (14.85, 4.1), (17.15, 23.75), (17.75, 23.75), (18.2, 23.6), (18.65, 23.5), (19.1, 23.35), (19.6, 23.15), (20.0, 22.95), (20.4, 22.7), (20.7, 22.55), (21.0, 22.15), (18.05, 7.25), (18.75, 7.1), (19.25, 7.05), (19.9, 6.95), (20.5, 7.0), (21.5, 14.9), (21.55, 15.0), (21.65, 15.05), (21.75, 15.15), (21.85, 15.25), (21.9, 15.3), (22.0, 15.4), (22.15, 15.55), (22.2, 15.65), (22.35, 15.8), (22.4, 15.95), (22.55, 16.05), (22.6, 16.2), (22.7, 16.4), (22.85, 16.6), (22.9, 16.9)]
========================= WIN G END ===================
========================= OBJS first half ===================
[(16.55, 19.9), (16.2, 19.9), (15.95, 19.9), (15.55, 19.85), (15.25, 19.7), (15.0, 19.7), (14.85, 19.55), (14.45, 19.5), (14.15, 19.25), (13.8, 19.05), (13.55, 18.85), (13.3, 18.6), (13.1, 18.4), (12.8, 18.05), (12.55, 17.85), (12.3, 17.6), (12.15, 17.2), (12.0, 16.75), (11.85, 16.5), (11.8, 16.05), (11.65, 15.7), (14.15, 4.4), (13.4, 4.75), (12.7, 5.2), (12.05, 5.65), (11.45, 6.15), (10.9, 6.65), (10.3, 7.25), (9.7, 7.85), (9.35, 8.35), (8.9, 9.05), (8.55, 9.65), (8.15, 10.35), (7.95, 10.95), (7.75, 11.7), (7.55, 12.35), (7.45, 13.0), (7.35, 13.75), (7.3, 14.35), (7.35, 14.95), (7.35, 15.75), (7.55, 16.35), (7.7, 16.95), (7.8, 17.55), (8.05, 18.15), (8.3, 18.75), (8.65, 19.3), (8.9, 19.85), (9.3, 20.3), (9.65, 20.8), (10.2, 21.25), (10.6, 21.65), (11.1, 22.15), (11.55, 22.45), (11.95, 22.7), (12.55, 23.0), (13.05, 23.2), (13.45, 23.4), (14.0, 23.55), (14.55, 23.6), (15.1, 23.75), (15.7, 23.75), (16.15, 23.85), (16.7, 23.8), (11.6, 15.25), (11.55, 14.7), (11.55, 14.35), (11.55, 14.0), (11.55, 13.6), (11.75, 13.05), (11.8, 12.65), (11.95, 12.2), (12.2, 11.75), (12.35, 11.4), (12.65, 10.9), (12.95, 10.55), (13.25, 10.1), (13.6, 9.65), (13.95, 9.3), (14.45, 8.9), (14.9, 8.7), (15.4, 8.35), (15.8, 8.05), (16.35, 7.8), (16.9, 7.6)]
========================= OBJS first half END ===================
========================= OBJS last half ===================
[(17.5, 7.35), (23.2, 18.05), (23.2, 17.8), (23.1, 17.45), (23.05, 17.15), (22.9, 16.9), (22.85, 16.6), (22.7, 16.4), (22.6, 16.2), (22.55, 16.05), (22.4, 15.95), (22.35, 15.8), (22.2, 15.65), (22.15, 15.55), (22.0, 15.4), (21.9, 15.3), (21.85, 15.25), (21.75, 15.15), (21.65, 15.05), (21.55, 15.0), (21.5, 14.9), (19.35, 31.65), (20.35, 31.45), (21.35, 31.1), (22.25, 30.9), (23.2, 30.45), (23.95, 30.05), (24.9, 29.65), (25.6, 29.05), (26.35, 28.5), (27.15, 27.9), (27.75, 27.35), (28.3, 26.6), (28.95, 25.85), (29.5, 25.15), (29.95, 24.45), (30.4, 23.7), (30.6, 22.9), (30.9, 22.1), (31.25, 21.3), (31.35, 20.55), (31.5, 19.7), (31.55, 18.9), (31.65, 18.15), (31.6, 17.35), (31.45, 16.55), (31.3, 15.8), (31.15, 15.05), (30.9, 14.35), (30.6, 13.65), (30.3, 13.0), (29.9, 12.3), (29.5, 11.75), (29.0, 11.15), (28.5, 10.6), (28.0, 10.1), (27.55, 9.65), (26.9, 9.1), (26.25, 8.8), (25.7, 8.4), (25.15, 8.05), (24.5, 7.75), (23.9, 7.65), (23.15, 7.4), (22.5, 7.3), (21.9, 7.1), (21.25, 7.05), (20.5, 7.0), (19.9, 6.95), (19.25, 7.05), (18.75, 7.1), (18.05, 7.25), (23.2, 18.25), (23.15, 18.65), (23.1, 19.0), (23.0, 19.35), (22.9, 19.65), (22.75, 20.05), (22.65, 20.35), (22.5, 20.7), (22.25, 21.0), (22.0, 21.25), (21.75, 21.55), (21.45, 21.95), (21.0, 22.15), (20.7, 22.55), (20.4, 22.7), (20.0, 22.95), (19.6, 23.15), (19.1, 23.35), (18.65, 23.5), (18.2, 23.6), (17.75, 23.75), (17.15, 23.75), (14.85, 4.1), (15.7, 3.7), (16.55, 3.5), (17.3, 3.25), (18.2, 3.2), (19.1, 3.0), (20.0, 2.9), (20.9, 3.0), (21.85, 3.05), (22.75, 3.15), (23.6, 3.3), (24.6, 3.6), (25.4, 3.85), (26.35, 4.15), (27.2, 4.55), (28.05, 5.0), (28.9, 5.55), (29.7, 6.0), (30.45, 6.65), (31.15, 7.3), (31.95, 7.95)]
========================= OBJS last half END ===================
Intra in win
win len(objs), len(objs1), len(objs2), constSmallNumber 53 | [(16.55, 19.9), (16.2, 19.9), (14.15, 4.4), (13.4, 4.75), (12.7, 5.2), (12.05, 5.65), (13.45, 23.4), (14.0, 23.55), (14.55, 23.6), (15.1, 23.75), (15.7, 23.75), (16.15, 23.85), (16.7, 23.8), (15.4, 8.35), (15.8, 8.05), (16.35, 7.8), (16.9, 7.6), (17.5, 7.35)] | [(17.3, 3.25), (16.55, 3.5), (15.7, 3.7), (14.85, 4.1), (17.15, 23.75), (17.75, 23.75), (18.2, 23.6), (18.65, 23.5), (19.1, 23.35), (19.6, 23.15), (20.0, 22.95), (20.4, 22.7), (20.7, 22.55), (21.0, 22.15), (18.05, 7.25), (18.75, 7.1), (19.25, 7.05), (19.9, 6.95), (20.5, 7.0), (21.5, 14.9), (21.55, 15.0), (21.65, 15.05), (21.75, 15.15), (21.85, 15.25), (21.9, 15.3), (22.0, 15.4), (22.15, 15.55), (22.2, 15.65), (22.35, 15.8), (22.4, 15.95), (22.55, 16.05), (22.6, 16.2), (22.7, 16.4), (22.85, 16.6), (22.9, 16.9)] | 10
p1 = (14.15, 4.4) len objs = 18
r is 9.98
new r is 9.98
p1 = (14.15, 4.4)
startIdx = 0 obj (16.55, 19.9)
endIdx = 17 obj (17.5, 7.35)
startDIST = 15.684705926474999 obj (16.55, 19.9)
endDIST = 4.463742824133128 obj (17.5, 7.35)
Pentru (17.5, 7.35) endDist este 4.463742824133128 iar r-eps este 7.180000000000001
Before swap start end (16.55, 19.9) (17.5, 7.35) 0 17
After swap start end (17.5, 7.35) (16.55, 19.9) 0 17
p1 = (14.15, 4.4)
startIdx = 1 obj (16.2, 19.9)
endIdx = 16 obj (16.9, 7.6)
startDIST = 15.63497681482131 obj (16.2, 19.9)
endDIST = 4.219300889957954 obj (16.9, 7.6)
Pentru (16.9, 7.6) endDist este 4.219300889957954 iar r-eps este 7.180000000000001
Before swap start end (16.2, 19.9) (16.9, 7.6) 1 16
After swap start end (16.9, 7.6) (16.2, 19.9) 1 16
p1 = (14.15, 4.4)
startIdx = 2 obj (14.15, 4.4)
endIdx = 15 obj (16.35, 7.8)
startDIST = 0.0 obj (14.15, 4.4)
endDIST = 4.049691346263318 obj (16.35, 7.8)
AL DOILEA WHILE startIdx = 2 obj (14.15, 4.4) start 0.0
AL DOILEA WHILE startIdx = 3 obj (13.4, 4.75) start 0.8276472678623422
AL DOILEA WHILE startIdx = 4 obj (12.7, 5.2) start 1.6560495161679203
AL DOILEA WHILE startIdx = 5 obj (12.05, 5.65) start 2.443869881969987
Pentru (16.35, 7.8) endDist este 4.049691346263318 iar r-eps este 7.180000000000001
Before swap start end (13.45, 23.4) (16.35, 7.8) 6 15
After swap start end (16.35, 7.8) (13.45, 23.4) 6 15
p1 = (14.15, 4.4)
startIdx = 7 obj (14.0, 23.55)
endIdx = 14 obj (15.8, 8.05)
startDIST = 19.150587458352287 obj (14.0, 23.55)
endDIST = 4.0056210504739465 obj (15.8, 8.05)
Pentru (15.8, 8.05) endDist este 4.0056210504739465 iar r-eps este 7.180000000000001
Before swap start end (14.0, 23.55) (15.8, 8.05) 7 14
After swap start end (15.8, 8.05) (14.0, 23.55) 7 14
p1 = (14.15, 4.4)
startIdx = 8 obj (14.55, 23.6)
endIdx = 13 obj (15.4, 8.35)
startDIST = 19.20416621465249 obj (14.55, 23.6)
endDIST = 4.143066497173319 obj (15.4, 8.35)
Pentru (15.4, 8.35) endDist este 4.143066497173319 iar r-eps este 7.180000000000001
Before swap start end (14.55, 23.6) (15.4, 8.35) 8 13
After swap start end (15.4, 8.35) (14.55, 23.6) 8 13
p1 = (14.15, 4.4)
startIdx = 9 obj (15.1, 23.75)
endIdx = 12 obj (16.7, 23.8)
startDIST = 19.37330637759079 obj (15.1, 23.75)
endDIST = 19.566872514533333 obj (16.7, 23.8)
PRIMUL WHILE endIdx = 12 obj (16.7, 23.8) endDist 19.566872514533333
PRIMUL WHILE endIdx = 11 obj (16.15, 23.85) endDist 19.552557377489016
PRIMUL WHILE endIdx = 10 obj (15.7, 23.75) endDist 19.411980836586462
sunt egale 9 9
========================= WIN L ===================
[]
========================= WIN L END ===================
========================= WIN G ===================
[]
========================= WIN G END ===================
========================= OBJS first half ===================
[(17.5, 7.35), (16.9, 7.6), (14.15, 4.4), (13.4, 4.75), (12.7, 5.2), (12.05, 5.65), (16.35, 7.8), (15.8, 8.05)]
========================= OBJS first half END ===================
========================= OBJS last half ===================
[(15.4, 8.35), (15.1, 23.75), (15.7, 23.75), (16.15, 23.85), (16.7, 23.8), (14.55, 23.6), (14.0, 23.55), (13.45, 23.4), (16.2, 19.9), (16.55, 19.9)]
========================= OBJS last half END ===================
p1 = (14.15, 4.4) len objs = 35
r is 8.06
new r is 8.06
p1 = (14.15, 4.4)
startIdx = 0 obj (17.3, 3.25)
endIdx = 34 obj (22.9, 16.9)
startDIST = 3.3533565274214436 obj (17.3, 3.25)
endDIST = 15.258194519667127 obj (22.9, 16.9)
PRIMUL WHILE endIdx = 34 obj (22.9, 16.9) endDist 15.258194519667127
PRIMUL WHILE endIdx = 33 obj (22.85, 16.6) endDist 14.984325143295578
PRIMUL WHILE endIdx = 32 obj (22.7, 16.4) endDist 14.734398528613239
PRIMUL WHILE endIdx = 31 obj (22.6, 16.2) endDist 14.513528172019372
PRIMUL WHILE endIdx = 30 obj (22.55, 16.05) endDist 14.362538076537865
PRIMUL WHILE endIdx = 29 obj (22.4, 15.95) endDist 14.193836690620332
PRIMUL WHILE endIdx = 28 obj (22.35, 15.8) endDist 14.042791745233568
PRIMUL WHILE endIdx = 27 obj (22.2, 15.65) endDist 13.8334738948682
PRIMUL WHILE endIdx = 26 obj (22.15, 15.55) endDist 13.723064526555284
PRIMUL WHILE endIdx = 25 obj (22.0, 15.4) endDist 13.513789253943544
PRIMUL WHILE endIdx = 24 obj (21.9, 15.3) endDist 13.374322412743009
PRIMUL WHILE endIdx = 23 obj (21.85, 15.25) endDist 13.304604466123749
PRIMUL WHILE endIdx = 22 obj (21.75, 15.15) endDist 13.165200340291065
PRIMUL WHILE endIdx = 21 obj (21.65, 15.05) endDist 13.025839704218688
PRIMUL WHILE endIdx = 20 obj (21.55, 15.0) endDist 12.92749008895385
PRIMUL WHILE endIdx = 19 obj (21.5, 14.9) endDist 12.816883396520387
AL DOILEA WHILE startIdx = 0 obj (17.3, 3.25) start 3.3533565274214436
AL DOILEA WHILE startIdx = 1 obj (16.55, 3.5) start 2.5632011235952596
AL DOILEA WHILE startIdx = 2 obj (15.7, 3.7) start 1.700735135169494
AL DOILEA WHILE startIdx = 3 obj (14.85, 4.1) start 0.7615773105863904
Pentru (20.5, 7.0) endDist este 6.861668893206666 iar r-eps este 5.260000000000001
endDist Il apendeaza pe (20.5, 7.0) endDist 6.861668893206666
Before swap start end (17.15, 23.75) (20.5, 7.0) 4 18
After swap start end (20.5, 7.0) (17.15, 23.75) 4 18
p1 = (14.15, 4.4)
startIdx = 5 obj (17.75, 23.75)
endIdx = 17 obj (19.9, 6.95)
startDIST = 19.682034955766134 obj (17.75, 23.75)
endDIST = 6.29007154172351 obj (19.9, 6.95)
Pentru (19.9, 6.95) endDist este 6.29007154172351 iar r-eps este 5.260000000000001
endDist Il apendeaza pe (19.9, 6.95) endDist 6.29007154172351
Before swap start end (17.75, 23.75) (19.9, 6.95) 5 17
After swap start end (19.9, 6.95) (17.75, 23.75) 5 17
p1 = (14.15, 4.4)
startIdx = 6 obj (18.2, 23.6)
endIdx = 16 obj (19.25, 7.05)
startDIST = 19.622499840744045 obj (18.2, 23.6)
endDIST = 5.747390712314589 obj (19.25, 7.05)
Pentru (19.25, 7.05) endDist este 5.747390712314589 iar r-eps este 5.260000000000001
endDist Il apendeaza pe (19.25, 7.05) endDist 5.747390712314589
Before swap start end (18.2, 23.6) (19.25, 7.05) 6 16
After swap start end (19.25, 7.05) (18.2, 23.6) 6 16
p1 = (14.15, 4.4)
startIdx = 7 obj (18.65, 23.5)
endIdx = 15 obj (18.75, 7.1)
startDIST = 19.622945752358387 obj (18.65, 23.5)
endDIST = 5.333854141237834 obj (18.75, 7.1)
Pentru (18.75, 7.1) endDist este 5.333854141237834 iar r-eps este 5.260000000000001
endDist Il apendeaza pe (18.75, 7.1) endDist 5.333854141237834
Before swap start end (18.65, 23.5) (18.75, 7.1) 7 15
After swap start end (18.75, 7.1) (18.65, 23.5) 7 15
p1 = (14.15, 4.4)
startIdx = 8 obj (19.1, 23.35)
endIdx = 14 obj (18.05, 7.25)
startDIST = 19.5858367194256 obj (19.1, 23.35)
endDIST = 4.830372656431386 obj (18.05, 7.25)
Pentru (18.05, 7.25) endDist este 4.830372656431386 iar r-eps este 5.260000000000001
Before swap start end (19.1, 23.35) (18.05, 7.25) 8 14
After swap start end (18.05, 7.25) (19.1, 23.35) 8 14
p1 = (14.15, 4.4)
startIdx = 9 obj (19.6, 23.15)
endIdx = 13 obj (21.0, 22.15)
startDIST = 19.526008296628373 obj (19.6, 23.15)
endDIST = 19.02590339510847 obj (21.0, 22.15)
PRIMUL WHILE endIdx = 13 obj (21.0, 22.15) endDist 19.02590339510847
PRIMUL WHILE endIdx = 12 obj (20.7, 22.55) endDist 19.295724915120445
PRIMUL WHILE endIdx = 11 obj (20.4, 22.7) endDist 19.337851483554214
PRIMUL WHILE endIdx = 10 obj (20.0, 22.95) endDist 19.45057839756957
sunt egale 9 9
========================= WIN L ===================
[(20.5, 7.0), (19.9, 6.95), (19.25, 7.05), (18.75, 7.1)]
========================= WIN L END ===================
========================= WIN G ===================
[]
========================= WIN G END ===================
========================= OBJS first half ===================
[(17.3, 3.25), (16.55, 3.5), (15.7, 3.7), (14.85, 4.1), (20.5, 7.0), (19.9, 6.95), (19.25, 7.05), (18.75, 7.1)]
========================= OBJS first half END ===================
========================= OBJS last half ===================
[(18.05, 7.25), (19.6, 23.15), (20.0, 22.95), (20.4, 22.7), (20.7, 22.55), (21.0, 22.15), (19.1, 23.35), (18.65, 23.5), (18.2, 23.6), (17.75, 23.75), (17.15, 23.75), (21.5, 14.9), (21.55, 15.0), (21.65, 15.05), (21.75, 15.15), (21.85, 15.25), (21.9, 15.3), (22.0, 15.4), (22.15, 15.55), (22.2, 15.65), (22.35, 15.8), (22.4, 15.95), (22.55, 16.05), (22.6, 16.2), (22.7, 16.4), (22.85, 16.6), (22.9, 16.9)]
========================= OBJS last half END ===================
nested loop vine din 
nested loop objs1, objs2 [][]
nested loop vine din 
nested loop objs1, objs2 [][(20.5, 7.0), (19.9, 6.95), (19.25, 7.05), (18.75, 7.1)]
nested loop vine din 
nested loop objs1, objs2 [(17.5, 7.35), (16.9, 7.6), (14.15, 4.4), (13.4, 4.75), (12.7, 5.2), (12.05, 5.65), (16.35, 7.8), (15.8, 8.05), (15.4, 8.35)][(17.3, 3.25), (16.55, 3.5), (15.7, 3.7), (14.85, 4.1), (20.5, 7.0), (19.9, 6.95), (19.25, 7.05), (18.75, 7.1), (18.05, 7.25)]
nested loop vine din 
nested loop objs1, objs2 [(15.1, 23.75), (15.7, 23.75), (16.15, 23.85), (16.7, 23.8), (14.55, 23.6), (14.0, 23.55), (13.45, 23.4), (16.2, 19.9), (16.55, 19.9)][(19.6, 23.15), (20.0, 22.95), (20.4, 22.7), (20.7, 22.55), (21.0, 22.15), (19.1, 23.35), (18.65, 23.5), (18.2, 23.6), (17.75, 23.75), (17.15, 23.75), (21.5, 14.9), (21.55, 15.0), (21.65, 15.05), (21.75, 15.15), (21.85, 15.25), (21.9, 15.3), (22.0, 15.4), (22.15, 15.55), (22.2, 15.65), (22.35, 15.8), (22.4, 15.95), (22.55, 16.05), (22.6, 16.2), (22.7, 16.4), (22.85, 16.6), (22.9, 16.9)]
quick len(objs), constSmallNumber 86 10
p1 = (7.95, 10.95) len objs = 86
r is 7.77
new r is 7.77
p1 = (7.95, 10.95)
startIdx = 0 obj (16.55, 19.9)
endIdx = 85 obj (17.5, 7.35)
startDIST = 12.41219158730641 obj (16.55, 19.9)
endDIST = 10.20600313541006 obj (17.5, 7.35)
PRIMUL WHILE endIdx = 85 obj (17.5, 7.35) endDist 10.20600313541006
endDist Il apendeaza pe (17.5, 7.35) endDist 10.20600313541006
PRIMUL WHILE endIdx = 84 obj (16.9, 7.6) endDist 9.556411460375699
endDist Il apendeaza pe (16.9, 7.6) endDist 9.556411460375699
PRIMUL WHILE endIdx = 83 obj (16.35, 7.8) endDist 8.971203932583409
endDist Il apendeaza pe (16.35, 7.8) endDist 8.971203932583409
PRIMUL WHILE endIdx = 82 obj (15.8, 8.05) endDist 8.368542286443917
endDist Il apendeaza pe (15.8, 8.05) endDist 8.368542286443917
PRIMUL WHILE endIdx = 81 obj (15.4, 8.35) endDist 7.890659034580065
endDist Il apendeaza pe (15.4, 8.35) endDist 7.890659034580065
Pentru (14.9, 8.7) endDist este 7.305135180131851 iar r-eps este 4.97
endDist Il apendeaza pe (14.9, 8.7) endDist 7.305135180131851
Before swap start end (16.55, 19.9) (14.9, 8.7) 0 80
After swap start end (14.9, 8.7) (16.55, 19.9) 0 80
p1 = (7.95, 10.95)
startIdx = 1 obj (16.2, 19.9)
endIdx = 79 obj (14.45, 8.9)
startDIST = 12.17230462977328 obj (16.2, 19.9)
endDIST = 6.815607089614247 obj (14.45, 8.9)
Pentru (14.45, 8.9) endDist este 6.815607089614247 iar r-eps este 4.97
endDist Il apendeaza pe (14.45, 8.9) endDist 6.815607089614247
Before swap start end (16.2, 19.9) (14.45, 8.9) 1 79
After swap start end (14.45, 8.9) (16.2, 19.9) 1 79
p1 = (7.95, 10.95)
startIdx = 2 obj (15.95, 19.9)
endIdx = 78 obj (13.95, 9.3)
startDIST = 12.004270073602974 obj (15.95, 19.9)
endDIST = 6.222740553807461 obj (13.95, 9.3)
Pentru (13.95, 9.3) endDist este 6.222740553807461 iar r-eps este 4.97
endDist Il apendeaza pe (13.95, 9.3) endDist 6.222740553807461
Before swap start end (15.95, 19.9) (13.95, 9.3) 2 78
After swap start end (13.95, 9.3) (15.95, 19.9) 2 78
p1 = (7.95, 10.95)
startIdx = 3 obj (15.55, 19.85)
endIdx = 77 obj (13.6, 9.65)
startDIST = 11.703418304068261 obj (15.55, 19.85)
endDIST = 5.797628825649326 obj (13.6, 9.65)
Pentru (13.6, 9.65) endDist este 5.797628825649326 iar r-eps este 4.97
endDist Il apendeaza pe (13.6, 9.65) endDist 5.797628825649326
Before swap start end (15.55, 19.85) (13.6, 9.65) 3 77
After swap start end (13.6, 9.65) (15.55, 19.85) 3 77
p1 = (7.95, 10.95)
startIdx = 4 obj (15.25, 19.7)
endIdx = 76 obj (13.25, 10.1)
startDIST = 11.395284112298384 obj (15.25, 19.7)
endDIST = 5.367727638395972 obj (13.25, 10.1)
Pentru (13.25, 10.1) endDist este 5.367727638395972 iar r-eps este 4.97
endDist Il apendeaza pe (13.25, 10.1) endDist 5.367727638395972
Before swap start end (15.25, 19.7) (13.25, 10.1) 4 76
After swap start end (13.25, 10.1) (15.25, 19.7) 4 76
p1 = (7.95, 10.95)
startIdx = 5 obj (15.0, 19.7)
endIdx = 75 obj (12.95, 10.55)
startDIST = 11.236769998536056 obj (15.0, 19.7)
endDIST = 5.01597448159378 obj (12.95, 10.55)
Pentru (12.95, 10.55) endDist este 5.01597448159378 iar r-eps este 4.97
endDist Il apendeaza pe (12.95, 10.55) endDist 5.01597448159378
Before swap start end (15.0, 19.7) (12.95, 10.55) 5 75
After swap start end (12.95, 10.55) (15.0, 19.7) 5 75
p1 = (7.95, 10.95)
startIdx = 6 obj (14.85, 19.55)
endIdx = 74 obj (12.65, 10.9)
startDIST = 11.025878649794764 obj (14.85, 19.55)
endDIST = 4.700265949922409 obj (12.65, 10.9)
Pentru (12.65, 10.9) endDist este 4.700265949922409 iar r-eps este 4.97
Before swap start end (14.85, 19.55) (12.65, 10.9) 6 74
After swap start end (12.65, 10.9) (14.85, 19.55) 6 74
p1 = (7.95, 10.95)
startIdx = 7 obj (14.45, 19.5)
endIdx = 73 obj (12.35, 11.4)
startDIST = 10.740228116758042 obj (14.45, 19.5)
endDIST = 4.422951503238533 obj (12.35, 11.4)
Pentru (12.35, 11.4) endDist este 4.422951503238533 iar r-eps este 4.97
Before swap start end (14.45, 19.5) (12.35, 11.4) 7 73
After swap start end (12.35, 11.4) (14.45, 19.5) 7 73
p1 = (7.95, 10.95)
startIdx = 8 obj (14.15, 19.25)
endIdx = 72 obj (12.2, 11.75)
startDIST = 10.36001930500132 obj (14.15, 19.25)
endDIST = 4.324638713233742 obj (12.2, 11.75)
Pentru (12.2, 11.75) endDist este 4.324638713233742 iar r-eps este 4.97
startDist Il apendeaza pe (14.15, 19.25) startDist 10.36001930500132
Before swap start end (14.15, 19.25) (12.2, 11.75) 8 72
After swap start end (12.2, 11.75) (14.15, 19.25) 8 72
p1 = (7.95, 10.95)
startIdx = 9 obj (13.8, 19.05)
endIdx = 71 obj (11.95, 12.2)
startDIST = 9.991621490028535 obj (13.8, 19.05)
endDIST = 4.190763653560052 obj (11.95, 12.2)
Pentru (11.95, 12.2) endDist este 4.190763653560052 iar r-eps este 4.97
startDist Il apendeaza pe (13.8, 19.05) startDist 9.991621490028535
Before swap start end (13.8, 19.05) (11.95, 12.2) 9 71
After swap start end (11.95, 12.2) (13.8, 19.05) 9 71
p1 = (7.95, 10.95)
startIdx = 10 obj (13.55, 18.85)
endIdx = 70 obj (11.8, 12.65)
startDIST = 9.683491106000977 obj (13.55, 18.85)
endDIST = 4.208622102303794 obj (11.8, 12.65)
Pentru (11.8, 12.65) endDist este 4.208622102303794 iar r-eps este 4.97
startDist Il apendeaza pe (13.55, 18.85) startDist 9.683491106000977
Before swap start end (13.55, 18.85) (11.8, 12.65) 10 70
After swap start end (11.8, 12.65) (13.55, 18.85) 10 70
p1 = (7.95, 10.95)
startIdx = 11 obj (13.3, 18.6)
endIdx = 69 obj (11.75, 13.05)
startDIST = 9.335148632989196 obj (13.3, 18.6)
endDIST = 4.341658669218482 obj (11.75, 13.05)
Pentru (11.75, 13.05) endDist este 4.341658669218482 iar r-eps este 4.97
startDist Il apendeaza pe (13.3, 18.6) startDist 9.335148632989196
Before swap start end (13.3, 18.6) (11.75, 13.05) 11 69
After swap start end (11.75, 13.05) (13.3, 18.6) 11 69
p1 = (7.95, 10.95)
startIdx = 12 obj (13.1, 18.4)
endIdx = 68 obj (11.55, 13.6)
startDIST = 9.056765427016423 obj (13.1, 18.4)
endDIST = 4.4701789673345305 obj (11.55, 13.6)
Pentru (11.55, 13.6) endDist este 4.4701789673345305 iar r-eps este 4.97
startDist Il apendeaza pe (13.1, 18.4) startDist 9.056765427016423
Before swap start end (13.1, 18.4) (11.55, 13.6) 12 68
After swap start end (11.55, 13.6) (13.1, 18.4) 12 68
p1 = (7.95, 10.95)
startIdx = 13 obj (12.8, 18.05)
endIdx = 67 obj (11.55, 14.0)
startDIST = 8.598401014142107 obj (12.8, 18.05)
endDIST = 4.718315377335433 obj (11.55, 14.0)
Pentru (11.55, 14.0) endDist este 4.718315377335433 iar r-eps este 4.97
startDist Il apendeaza pe (12.8, 18.05) startDist 8.598401014142107
Before swap start end (12.8, 18.05) (11.55, 14.0) 13 67
After swap start end (11.55, 14.0) (12.8, 18.05) 13 67
p1 = (7.95, 10.95)
startIdx = 14 obj (12.55, 17.85)
endIdx = 66 obj (11.55, 14.35)
startDIST = 8.292767933567177 obj (12.55, 17.85)
endDIST = 4.951767361255979 obj (11.55, 14.35)
Pentru (11.55, 14.35) endDist este 4.951767361255979 iar r-eps este 4.97
startDist Il apendeaza pe (12.55, 17.85) startDist 8.292767933567177
Before swap start end (12.55, 17.85) (11.55, 14.35) 14 66
After swap start end (11.55, 14.35) (12.55, 17.85) 14 66
p1 = (7.95, 10.95)
startIdx = 15 obj (12.3, 17.6)
endIdx = 65 obj (11.55, 14.7)
startDIST = 7.946382824908452 obj (12.3, 17.6)
endDIST = 5.198317035349037 obj (11.55, 14.7)
Pentru (11.55, 14.7) endDist este 5.198317035349037 iar r-eps este 4.97
endDist Il apendeaza pe (11.55, 14.7) endDist 5.198317035349037
startDist Il apendeaza pe (12.3, 17.6) startDist 7.946382824908452
Before swap start end (12.3, 17.6) (11.55, 14.7) 15 65
After swap start end (11.55, 14.7) (12.3, 17.6) 15 65
p1 = (7.95, 10.95)
startIdx = 16 obj (12.15, 17.2)
endIdx = 64 obj (11.6, 15.25)
startDIST = 7.530106240950389 obj (12.15, 17.2)
endDIST = 5.640257086339239 obj (11.6, 15.25)
AL DOILEA WHILE startIdx = 16 obj (12.15, 17.2) start 7.530106240950389
startDist Il apendeaza pe (12.15, 17.2) endDist 7.530106240950389
AL DOILEA WHILE startIdx = 17 obj (12.0, 16.75) start 7.07407237735097
startDist Il apendeaza pe (12.0, 16.75) endDist 7.07407237735097
AL DOILEA WHILE startIdx = 18 obj (11.85, 16.5) start 6.783251432757008
startDist Il apendeaza pe (11.85, 16.5) endDist 6.783251432757008
AL DOILEA WHILE startIdx = 19 obj (11.8, 16.05) start 6.390031298827887
startDist Il apendeaza pe (11.8, 16.05) endDist 6.390031298827887
AL DOILEA WHILE startIdx = 20 obj (11.65, 15.7) start 6.021004899516359
startDist Il apendeaza pe (11.65, 15.7) endDist 6.021004899516359
Pentru (11.6, 15.25) endDist este 5.640257086339239 iar r-eps este 4.97
endDist Il apendeaza pe (11.6, 15.25) endDist 5.640257086339239
startDist Il apendeaza pe (14.15, 4.4) startDist 9.019007705950806
Before swap start end (14.15, 4.4) (11.6, 15.25) 21 64
After swap start end (11.6, 15.25) (14.15, 4.4) 21 64
p1 = (7.95, 10.95)
startIdx = 22 obj (13.4, 4.75)
endIdx = 63 obj (16.7, 23.8)
startDIST = 8.254847060969693 obj (13.4, 4.75)
endDIST = 15.546221405859368 obj (16.7, 23.8)
PRIMUL WHILE endIdx = 63 obj (16.7, 23.8) endDist 15.546221405859368
PRIMUL WHILE endIdx = 62 obj (16.15, 23.85) endDist 15.28561415187496
PRIMUL WHILE endIdx = 61 obj (15.7, 23.75) endDist 14.963371946189135
PRIMUL WHILE endIdx = 60 obj (15.1, 23.75) endDist 14.661599503464826
PRIMUL WHILE endIdx = 59 obj (14.55, 23.6) endDist 14.268233948180134
PRIMUL WHILE endIdx = 58 obj (14.0, 23.55) endDist 13.977213599283658
PRIMUL WHILE endIdx = 57 obj (13.45, 23.4) endDist 13.610749428301146
PRIMUL WHILE endIdx = 56 obj (13.05, 23.2) endDist 13.269231326644357
PRIMUL WHILE endIdx = 55 obj (12.55, 23.0) endDist 12.89815878333028
PRIMUL WHILE endIdx = 54 obj (11.95, 22.7) endDist 12.41219158730641
PRIMUL WHILE endIdx = 53 obj (11.55, 22.45) endDist 12.050311199301037
PRIMUL WHILE endIdx = 52 obj (11.1, 22.15) endDist 11.634539097016262
PRIMUL WHILE endIdx = 51 obj (10.6, 21.65) endDist 11.023270839455954
PRIMUL WHILE endIdx = 50 obj (10.2, 21.25) endDist 10.542888598481918
endDist Il apendeaza pe (10.2, 21.25) endDist 10.542888598481918
PRIMUL WHILE endIdx = 49 obj (9.65, 20.8) endDist 9.99562404254982
endDist Il apendeaza pe (9.65, 20.8) endDist 9.99562404254982
PRIMUL WHILE endIdx = 48 obj (9.3, 20.3) endDist 9.446957182077202
endDist Il apendeaza pe (9.3, 20.3) endDist 9.446957182077202
PRIMUL WHILE endIdx = 47 obj (8.9, 19.85) endDist 8.950558641783207
endDist Il apendeaza pe (8.9, 19.85) endDist 8.950558641783207
PRIMUL WHILE endIdx = 46 obj (8.65, 19.3) endDist 8.379289946051516
endDist Il apendeaza pe (8.65, 19.3) endDist 8.379289946051516
PRIMUL WHILE endIdx = 45 obj (8.3, 18.75) endDist 7.807848615335726
endDist Il apendeaza pe (8.3, 18.75) endDist 7.807848615335726
Pentru (8.05, 18.15) endDist este 7.200694410957875 iar r-eps este 4.97
endDist Il apendeaza pe (8.05, 18.15) endDist 7.200694410957875
startDist Il apendeaza pe (13.4, 4.75) startDist 8.254847060969693
Before swap start end (13.4, 4.75) (8.05, 18.15) 22 44
After swap start end (8.05, 18.15) (13.4, 4.75) 22 44
p1 = (7.95, 10.95)
startIdx = 23 obj (12.7, 5.2)
endIdx = 43 obj (7.8, 17.55)
startDIST = 7.458216945088148 obj (12.7, 5.2)
endDIST = 6.601704325399617 obj (7.8, 17.55)
AL DOILEA WHILE startIdx = 23 obj (12.7, 5.2) start 7.458216945088148
startDist Il apendeaza pe (12.7, 5.2) endDist 7.458216945088148
AL DOILEA WHILE startIdx = 24 obj (12.05, 5.65) start 6.700746227100381
startDist Il apendeaza pe (12.05, 5.65) endDist 6.700746227100381
AL DOILEA WHILE startIdx = 25 obj (11.45, 6.15) start 5.940538696111657
startDist Il apendeaza pe (11.45, 6.15) endDist 5.940538696111657
AL DOILEA WHILE startIdx = 26 obj (10.9, 6.65) start 5.214642844912774
startDist Il apendeaza pe (10.9, 6.65) endDist 5.214642844912774
AL DOILEA WHILE startIdx = 27 obj (10.3, 7.25) start 4.383206588788624
AL DOILEA WHILE startIdx = 28 obj (9.7, 7.85) start 3.559845502265512
AL DOILEA WHILE startIdx = 29 obj (9.35, 8.35) start 2.9529646120466797
AL DOILEA WHILE startIdx = 30 obj (8.9, 9.05) start 2.124264578624799
AL DOILEA WHILE startIdx = 31 obj (8.55, 9.65) start 1.4317821063276346
AL DOILEA WHILE startIdx = 32 obj (8.15, 10.35) start 0.6324555320336757
AL DOILEA WHILE startIdx = 33 obj (7.95, 10.95) start 0.0
AL DOILEA WHILE startIdx = 34 obj (7.75, 11.7) start 0.7762087348130012
AL DOILEA WHILE startIdx = 35 obj (7.55, 12.35) start 1.456021977856104
AL DOILEA WHILE startIdx = 36 obj (7.45, 13.0) start 2.11009478460092
AL DOILEA WHILE startIdx = 37 obj (7.35, 13.75) start 2.8635642126552714
AL DOILEA WHILE startIdx = 38 obj (7.3, 14.35) start 3.4615747861341957
AL DOILEA WHILE startIdx = 39 obj (7.35, 14.95) start 4.044749683231337
AL DOILEA WHILE startIdx = 40 obj (7.35, 15.75) start 4.83735464897913
AL DOILEA WHILE startIdx = 41 obj (7.55, 16.35) start 5.414794548272355
startDist Il apendeaza pe (7.55, 16.35) endDist 5.414794548272355
AL DOILEA WHILE startIdx = 42 obj (7.7, 16.95) start 6.005206074732157
startDist Il apendeaza pe (7.7, 16.95) endDist 6.005206074732157
sunt egale 43 43
========================= WIN L ===================
[(14.9, 8.7), (14.45, 8.9), (13.95, 9.3), (13.6, 9.65), (13.25, 10.1), (12.95, 10.55), (11.55, 14.7), (12.15, 17.2), (12.0, 16.75), (11.85, 16.5), (11.8, 16.05), (11.65, 15.7), (11.6, 15.25), (8.05, 18.15), (12.7, 5.2), (12.05, 5.65), (11.45, 6.15), (10.9, 6.65), (7.55, 16.35), (7.7, 16.95), (7.8, 17.55)]
========================= WIN L END ===================
========================= WIN G ===================
[(17.5, 7.35), (16.9, 7.6), (16.35, 7.8), (15.8, 8.05), (15.4, 8.35), (14.15, 19.25), (13.8, 19.05), (13.55, 18.85), (13.3, 18.6), (13.1, 18.4), (12.8, 18.05), (12.55, 17.85), (12.3, 17.6), (14.15, 4.4), (10.2, 21.25), (9.65, 20.8), (9.3, 20.3), (8.9, 19.85), (8.65, 19.3), (8.3, 18.75), (13.4, 4.75)]
========================= WIN G END ===================
========================= OBJS first half ===================
[(14.9, 8.7), (14.45, 8.9), (13.95, 9.3), (13.6, 9.65), (13.25, 10.1), (12.95, 10.55), (12.65, 10.9), (12.35, 11.4), (12.2, 11.75), (11.95, 12.2), (11.8, 12.65), (11.75, 13.05), (11.55, 13.6), (11.55, 14.0), (11.55, 14.35), (11.55, 14.7), (12.15, 17.2), (12.0, 16.75), (11.85, 16.5), (11.8, 16.05), (11.65, 15.7), (11.6, 15.25), (8.05, 18.15), (12.7, 5.2), (12.05, 5.65), (11.45, 6.15), (10.9, 6.65), (10.3, 7.25), (9.7, 7.85), (9.35, 8.35), (8.9, 9.05), (8.55, 9.65), (8.15, 10.35), (7.95, 10.95), (7.75, 11.7), (7.55, 12.35), (7.45, 13.0), (7.35, 13.75), (7.3, 14.35), (7.35, 14.95), (7.35, 15.75), (7.55, 16.35), (7.7, 16.95)]
========================= OBJS first half END ===================
========================= OBJS last half ===================
[(7.8, 17.55), (13.4, 4.75), (8.3, 18.75), (8.65, 19.3), (8.9, 19.85), (9.3, 20.3), (9.65, 20.8), (10.2, 21.25), (10.6, 21.65), (11.1, 22.15), (11.55, 22.45), (11.95, 22.7), (12.55, 23.0), (13.05, 23.2), (13.45, 23.4), (14.0, 23.55), (14.55, 23.6), (15.1, 23.75), (15.7, 23.75), (16.15, 23.85), (16.7, 23.8), (14.15, 4.4), (12.3, 17.6), (12.55, 17.85), (12.8, 18.05), (13.1, 18.4), (13.3, 18.6), (13.55, 18.85), (13.8, 19.05), (14.15, 19.25), (14.45, 19.5), (14.85, 19.55), (15.0, 19.7), (15.25, 19.7), (15.55, 19.85), (15.95, 19.9), (16.2, 19.9), (16.55, 19.9), (15.4, 8.35), (15.8, 8.05), (16.35, 7.8), (16.9, 7.6), (17.5, 7.35)]
========================= OBJS last half END ===================
Intra in win
win len(objs), len(objs1), len(objs2), constSmallNumber 42 | [(14.9, 8.7), (14.45, 8.9), (13.95, 9.3), (13.6, 9.65), (13.25, 10.1), (12.95, 10.55), (11.55, 14.7), (12.15, 17.2), (12.0, 16.75), (11.85, 16.5), (11.8, 16.05), (11.65, 15.7), (11.6, 15.25), (8.05, 18.15), (12.7, 5.2), (12.05, 5.65), (11.45, 6.15), (10.9, 6.65), (7.55, 16.35), (7.7, 16.95), (7.8, 17.55)] | [(17.5, 7.35), (16.9, 7.6), (16.35, 7.8), (15.8, 8.05), (15.4, 8.35), (14.15, 19.25), (13.8, 19.05), (13.55, 18.85), (13.3, 18.6), (13.1, 18.4), (12.8, 18.05), (12.55, 17.85), (12.3, 17.6), (14.15, 4.4), (10.2, 21.25), (9.65, 20.8), (9.3, 20.3), (8.9, 19.85), (8.65, 19.3), (8.3, 18.75), (13.4, 4.75)] | 10
p1 = (13.3, 18.6) len objs = 21
r is 6.1
new r is 6.1
p1 = (13.3, 18.6)
startIdx = 0 obj (14.9, 8.7)
endIdx = 20 obj (7.8, 17.55)
startDIST = 10.028459502834922 obj (14.9, 8.7)
endDIST = 5.599330317100431 obj (7.8, 17.55)
Pentru (7.8, 17.55) endDist este 5.599330317100431 iar r-eps este 3.3
endDist Il apendeaza pe (7.8, 17.55) endDist 5.599330317100431
Before swap start end (14.9, 8.7) (7.8, 17.55) 0 20
After swap start end (7.8, 17.55) (14.9, 8.7) 0 20
p1 = (13.3, 18.6)
startIdx = 1 obj (14.45, 8.9)
endIdx = 19 obj (7.7, 16.95)
startDIST = 9.767932227447117 obj (14.45, 8.9)
endDIST = 5.838021925275719 obj (7.7, 16.95)
Pentru (7.7, 16.95) endDist este 5.838021925275719 iar r-eps este 3.3
endDist Il apendeaza pe (7.7, 16.95) endDist 5.838021925275719
Before swap start end (14.45, 8.9) (7.7, 16.95) 1 19
After swap start end (7.7, 16.95) (14.45, 8.9) 1 19
p1 = (13.3, 18.6)
startIdx = 2 obj (13.95, 9.3)
endIdx = 18 obj (7.55, 16.35)
startDIST = 9.322687380793159 obj (13.95, 9.3)
endDIST = 6.174544517614235 obj (7.55, 16.35)
PRIMUL WHILE endIdx = 18 obj (7.55, 16.35) endDist 6.174544517614235
endDist Il apendeaza pe (7.55, 16.35) endDist 6.174544517614235
PRIMUL WHILE endIdx = 17 obj (10.9, 6.65) endDist 12.188621743248907
PRIMUL WHILE endIdx = 16 obj (11.45, 6.15) endDist 12.586699329053667
PRIMUL WHILE endIdx = 15 obj (12.05, 5.65) endDist 13.010188315316578
PRIMUL WHILE endIdx = 14 obj (12.7, 5.2) endDist 13.413426109685775
Pentru (8.05, 18.15) endDist este 5.269250421075089 iar r-eps este 3.3
endDist Il apendeaza pe (8.05, 18.15) endDist 5.269250421075089
Before swap start end (13.95, 9.3) (8.05, 18.15) 2 13
After swap start end (8.05, 18.15) (13.95, 9.3) 2 13
p1 = (13.3, 18.6)
startIdx = 3 obj (13.6, 9.65)
endIdx = 12 obj (11.6, 15.25)
startDIST = 8.955026521457098 obj (13.6, 9.65)
endDIST = 3.756660751252369 obj (11.6, 15.25)
Pentru (11.6, 15.25) endDist este 3.756660751252369 iar r-eps este 3.3
endDist Il apendeaza pe (11.6, 15.25) endDist 3.756660751252369
Before swap start end (13.6, 9.65) (11.6, 15.25) 3 12
After swap start end (11.6, 15.25) (13.6, 9.65) 3 12
p1 = (13.3, 18.6)
startIdx = 4 obj (13.25, 10.1)
endIdx = 11 obj (11.65, 15.7)
startDIST = 8.500147057551418 obj (13.25, 10.1)
endDIST = 3.3365401241405768 obj (11.65, 15.7)
Pentru (11.65, 15.7) endDist este 3.3365401241405768 iar r-eps este 3.3
endDist Il apendeaza pe (11.65, 15.7) endDist 3.3365401241405768
startDist Il apendeaza pe (13.25, 10.1) startDist 8.500147057551418
Before swap start end (13.25, 10.1) (11.65, 15.7) 4 11
After swap start end (11.65, 15.7) (13.25, 10.1) 4 11
p1 = (13.3, 18.6)
startIdx = 5 obj (12.95, 10.55)
endIdx = 10 obj (11.8, 16.05)
startDIST = 8.057605103254938 obj (12.95, 10.55)
endDIST = 2.9584624384974036 obj (11.8, 16.05)
Pentru (11.8, 16.05) endDist este 2.9584624384974036 iar r-eps este 3.3
startDist Il apendeaza pe (12.95, 10.55) startDist 8.057605103254938
Before swap start end (12.95, 10.55) (11.8, 16.05) 5 10
After swap start end (11.8, 16.05) (12.95, 10.55) 5 10
p1 = (13.3, 18.6)
startIdx = 6 obj (11.55, 14.7)
endIdx = 9 obj (11.85, 16.5)
startDIST = 4.274634487298302 obj (11.55, 14.7)
endDIST = 2.551960031034971 obj (11.85, 16.5)
AL DOILEA WHILE startIdx = 6 obj (11.55, 14.7) start 4.274634487298302
startDist Il apendeaza pe (11.55, 14.7) endDist 4.274634487298302
AL DOILEA WHILE startIdx = 7 obj (12.15, 17.2) start 1.8117670931993457
AL DOILEA WHILE startIdx = 8 obj (12.0, 16.75) start 2.261083810919004
sunt egale 9 9
========================= WIN L ===================
[(7.8, 17.55), (7.7, 16.95), (8.05, 18.15), (11.6, 15.25), (11.65, 15.7), (11.55, 14.7)]
========================= WIN L END ===================
========================= WIN G ===================
[(7.55, 16.35), (13.25, 10.1), (12.95, 10.55)]
========================= WIN G END ===================
========================= OBJS first half ===================
[(7.8, 17.55), (7.7, 16.95), (8.05, 18.15), (11.6, 15.25), (11.65, 15.7), (11.8, 16.05), (11.55, 14.7), (12.15, 17.2), (12.0, 16.75)]
========================= OBJS first half END ===================
========================= OBJS last half ===================
[(11.85, 16.5), (12.95, 10.55), (13.25, 10.1), (13.6, 9.65), (13.95, 9.3), (12.7, 5.2), (12.05, 5.65), (11.45, 6.15), (10.9, 6.65), (7.55, 16.35), (14.45, 8.9), (14.9, 8.7)]
========================= OBJS last half END ===================
p1 = (13.3, 18.6) len objs = 21
r is 7.68
new r is 7.68
p1 = (13.3, 18.6)
startIdx = 0 obj (17.5, 7.35)
endIdx = 20 obj (13.4, 4.75)
startDIST = 12.008434535775262 obj (17.5, 7.35)
endDIST = 13.850361006125437 obj (13.4, 4.75)
PRIMUL WHILE endIdx = 20 obj (13.4, 4.75) endDist 13.850361006125437
Pentru (8.3, 18.75) endDist este 5.0022494939776845 iar r-eps este 4.88
endDist Il apendeaza pe (8.3, 18.75) endDist 5.0022494939776845
Before swap start end (17.5, 7.35) (8.3, 18.75) 0 19
After swap start end (8.3, 18.75) (17.5, 7.35) 0 19
p1 = (13.3, 18.6)
startIdx = 1 obj (16.9, 7.6)
endIdx = 18 obj (8.65, 19.3)
startDIST = 11.57410903698423 obj (16.9, 7.6)
endDIST = 4.702393007820593 obj (8.65, 19.3)
Pentru (8.65, 19.3) endDist este 4.702393007820593 iar r-eps este 4.88
Before swap start end (16.9, 7.6) (8.65, 19.3) 1 18
After swap start end (8.65, 19.3) (16.9, 7.6) 1 18
p1 = (13.3, 18.6)
startIdx = 2 obj (16.35, 7.8)
endIdx = 17 obj (8.9, 19.85)
startDIST = 11.222410614480296 obj (16.35, 7.8)
endDIST = 4.574111935665764 obj (8.9, 19.85)
Pentru (8.9, 19.85) endDist este 4.574111935665764 iar r-eps este 4.88
Before swap start end (16.35, 7.8) (8.9, 19.85) 2 17
After swap start end (8.9, 19.85) (16.35, 7.8) 2 17
p1 = (13.3, 18.6)
startIdx = 3 obj (15.8, 8.05)
endIdx = 16 obj (9.3, 20.3)
startDIST = 10.842163068318056 obj (15.8, 8.05)
endDIST = 4.346262762420146 obj (9.3, 20.3)
Pentru (9.3, 20.3) endDist este 4.346262762420146 iar r-eps este 4.88
Before swap start end (15.8, 8.05) (9.3, 20.3) 3 16
After swap start end (9.3, 20.3) (15.8, 8.05) 3 16
p1 = (13.3, 18.6)
startIdx = 4 obj (15.4, 8.35)
endIdx = 15 obj (9.65, 20.8)
startDIST = 10.462910684890703 obj (15.4, 8.35)
endDIST = 4.261748467472007 obj (9.65, 20.8)
Pentru (9.65, 20.8) endDist este 4.261748467472007 iar r-eps este 4.88
startDist Il apendeaza pe (15.4, 8.35) startDist 10.462910684890703
Before swap start end (15.4, 8.35) (9.65, 20.8) 4 15
After swap start end (9.65, 20.8) (15.4, 8.35) 4 15
p1 = (13.3, 18.6)
startIdx = 5 obj (14.15, 19.25)
endIdx = 14 obj (10.2, 21.25)
startDIST = 1.0700467279516337 obj (14.15, 19.25)
endDIST = 4.07829621288106 obj (10.2, 21.25)
AL DOILEA WHILE startIdx = 5 obj (14.15, 19.25) start 1.0700467279516337
AL DOILEA WHILE startIdx = 6 obj (13.8, 19.05) start 0.672681202353685
AL DOILEA WHILE startIdx = 7 obj (13.55, 18.85) start 0.3535533905932738
AL DOILEA WHILE startIdx = 8 obj (13.3, 18.6) start 0.0
AL DOILEA WHILE startIdx = 9 obj (13.1, 18.4) start 0.2828427124746218
AL DOILEA WHILE startIdx = 10 obj (12.8, 18.05) start 0.7433034373659257
AL DOILEA WHILE startIdx = 11 obj (12.55, 17.85) start 1.0606601717798212
AL DOILEA WHILE startIdx = 12 obj (12.3, 17.6) start 1.4142135623730951
Pentru (10.2, 21.25) endDist este 4.07829621288106 iar r-eps este 4.88
Before swap start end (14.15, 4.4) (10.2, 21.25) 13 14
After swap start end (10.2, 21.25) (14.15, 4.4) 13 14
========================= WIN L ===================
[(8.3, 18.75)]
========================= WIN L END ===================
========================= WIN G ===================
[(15.4, 8.35)]
========================= WIN G END ===================
========================= OBJS first half ===================
[(8.3, 18.75), (8.65, 19.3), (8.9, 19.85), (9.3, 20.3), (9.65, 20.8), (14.15, 19.25), (13.8, 19.05), (13.55, 18.85), (13.3, 18.6), (13.1, 18.4), (12.8, 18.05), (12.55, 17.85), (12.3, 17.6)]
========================= OBJS first half END ===================
========================= OBJS last half ===================
[(10.2, 21.25), (14.15, 4.4), (15.4, 8.35), (15.8, 8.05), (16.35, 7.8), (16.9, 7.6), (17.5, 7.35), (13.4, 4.75)]
========================= OBJS last half END ===================
Intra in win
win len(objs), len(objs1), len(objs2), constSmallNumber 7 | [(7.8, 17.55), (7.7, 16.95), (8.05, 18.15), (11.6, 15.25), (11.65, 15.7), (11.55, 14.7)] | [(15.4, 8.35)] | 10
nested loop vine din 
nested loop objs1, objs2 [(7.8, 17.55), (7.7, 16.95), (8.05, 18.15), (11.6, 15.25), (11.65, 15.7), (11.55, 14.7)][(15.4, 8.35)]
Intra in win
win len(objs), len(objs1), len(objs2), constSmallNumber 4 | [(7.55, 16.35), (13.25, 10.1), (12.95, 10.55)] | [(8.3, 18.75)] | 10
nested loop vine din 
nested loop objs1, objs2 [(7.55, 16.35), (13.25, 10.1), (12.95, 10.55)][(8.3, 18.75)]
Intra in win
win len(objs), len(objs1), len(objs2), constSmallNumber 24 | [(7.8, 17.55), (7.7, 16.95), (8.05, 18.15), (11.6, 15.25), (11.65, 15.7), (11.8, 16.05), (11.55, 14.7), (12.15, 17.2), (12.0, 16.75), (11.85, 16.5)] | [(8.3, 18.75), (8.65, 19.3), (8.9, 19.85), (9.3, 20.3), (9.65, 20.8), (14.15, 19.25), (13.8, 19.05), (13.55, 18.85), (13.3, 18.6), (13.1, 18.4), (12.8, 18.05), (12.55, 17.85), (12.3, 17.6), (10.2, 21.25)] | 10
p1 = (11.8, 16.05) len objs = 10
r is 2.6
new r is 2.6
p1 = (11.8, 16.05)
startIdx = 0 obj (7.8, 17.55)
endIdx = 9 obj (11.85, 16.5)
startDIST = 4.272001872658766 obj (7.8, 17.55)
endDIST = 0.45276925690687 obj (11.85, 16.5)
Pentru (11.85, 16.5) endDist este 0.45276925690687 iar r-eps este -0.19999999999999973
endDist Il apendeaza pe (11.85, 16.5) endDist 0.45276925690687
startDist Il apendeaza pe (7.8, 17.55) startDist 4.272001872658766
Before swap start end (7.8, 17.55) (11.85, 16.5) 0 9
After swap start end (11.85, 16.5) (7.8, 17.55) 0 9
p1 = (11.8, 16.05)
startIdx = 1 obj (7.7, 16.95)
endIdx = 8 obj (12.0, 16.75)
startDIST = 4.197618372363072 obj (7.7, 16.95)
endDIST = 0.7280109889280509 obj (12.0, 16.75)
Pentru (12.0, 16.75) endDist este 0.7280109889280509 iar r-eps este -0.19999999999999973
endDist Il apendeaza pe (12.0, 16.75) endDist 0.7280109889280509
startDist Il apendeaza pe (7.7, 16.95) startDist 4.197618372363072
Before swap start end (7.7, 16.95) (12.0, 16.75) 1 8
After swap start end (12.0, 16.75) (7.7, 16.95) 1 8
p1 = (11.8, 16.05)
startIdx = 2 obj (8.05, 18.15)
endIdx = 7 obj (12.15, 17.2)
startDIST = 4.29796463456832 obj (8.05, 18.15)
endDIST = 1.2020815280171293 obj (12.15, 17.2)
Pentru (12.15, 17.2) endDist este 1.2020815280171293 iar r-eps este -0.19999999999999973
endDist Il apendeaza pe (12.15, 17.2) endDist 1.2020815280171293
startDist Il apendeaza pe (8.05, 18.15) startDist 4.29796463456832
Before swap start end (8.05, 18.15) (12.15, 17.2) 2 7
After swap start end (12.15, 17.2) (8.05, 18.15) 2 7
p1 = (11.8, 16.05)
startIdx = 3 obj (11.6, 15.25)
endIdx = 6 obj (11.55, 14.7)
startDIST = 0.824621125123533 obj (11.6, 15.25)
endDIST = 1.3729530217745995 obj (11.55, 14.7)
AL DOILEA WHILE startIdx = 3 obj (11.6, 15.25) start 0.824621125123533
startDist Il apendeaza pe (11.6, 15.25) endDist 0.824621125123533
AL DOILEA WHILE startIdx = 4 obj (11.65, 15.7) start 0.38078865529319683
startDist Il apendeaza pe (11.65, 15.7) endDist 0.38078865529319683
AL DOILEA WHILE startIdx = 5 obj (11.8, 16.05) start 0.0
startDist Il apendeaza pe (11.8, 16.05) endDist 0.0
sunt egale 6 6
========================= WIN L ===================
[(11.85, 16.5), (12.0, 16.75), (12.15, 17.2), (11.6, 15.25), (11.65, 15.7), (11.8, 16.05), (11.55, 14.7)]
========================= WIN L END ===================
========================= WIN G ===================
[(7.8, 17.55), (7.7, 16.95), (8.05, 18.15)]
========================= WIN G END ===================
========================= OBJS first half ===================
[(11.85, 16.5), (12.0, 16.75), (12.15, 17.2), (11.6, 15.25), (11.65, 15.7), (11.8, 16.05)]
========================= OBJS first half END ===================
========================= OBJS last half ===================
[(11.55, 14.7), (8.05, 18.15), (7.7, 16.95), (7.8, 17.55)]
========================= OBJS last half END ===================
p1 = (11.8, 16.05) len objs = 14
r is 2.94
new r is 2.94
p1 = (11.8, 16.05)
startIdx = 0 obj (8.3, 18.75)
endIdx = 13 obj (10.2, 21.25)
startDIST = 4.420407221060068 obj (8.3, 18.75)
endDIST = 5.440588203494177 obj (10.2, 21.25)
PRIMUL WHILE endIdx = 13 obj (10.2, 21.25) endDist 5.440588203494177
endDist Il apendeaza pe (10.2, 21.25) endDist 5.440588203494177
Pentru (12.3, 17.6) endDist este 1.6286497474902337 iar r-eps este 0.14000000000000012
endDist Il apendeaza pe (12.3, 17.6) endDist 1.6286497474902337
startDist Il apendeaza pe (8.3, 18.75) startDist 4.420407221060068
Before swap start end (8.3, 18.75) (12.3, 17.6) 0 12
After swap start end (12.3, 17.6) (8.3, 18.75) 0 12
p1 = (11.8, 16.05)
startIdx = 1 obj (8.65, 19.3)
endIdx = 11 obj (12.55, 17.85)
startDIST = 4.526035793053343 obj (8.65, 19.3)
endDIST = 1.9500000000000006 obj (12.55, 17.85)
Pentru (12.55, 17.85) endDist este 1.9500000000000006 iar r-eps este 0.14000000000000012
endDist Il apendeaza pe (12.55, 17.85) endDist 1.9500000000000006
startDist Il apendeaza pe (8.65, 19.3) startDist 4.526035793053343
Before swap start end (8.65, 19.3) (12.55, 17.85) 1 11
After swap start end (12.55, 17.85) (8.65, 19.3) 1 11
p1 = (11.8, 16.05)
startIdx = 2 obj (8.9, 19.85)
endIdx = 10 obj (12.8, 18.05)
startDIST = 4.780167361086849 obj (8.9, 19.85)
endDIST = 2.23606797749979 obj (12.8, 18.05)
Pentru (12.8, 18.05) endDist este 2.23606797749979 iar r-eps este 0.14000000000000012
endDist Il apendeaza pe (12.8, 18.05) endDist 2.23606797749979
startDist Il apendeaza pe (8.9, 19.85) startDist 4.780167361086849
Before swap start end (8.9, 19.85) (12.8, 18.05) 2 10
After swap start end (12.8, 18.05) (8.9, 19.85) 2 10
p1 = (11.8, 16.05)
startIdx = 3 obj (9.3, 20.3)
endIdx = 9 obj (13.1, 18.4)
startDIST = 4.930770730829005 obj (9.3, 20.3)
endDIST = 2.685609800399155 obj (13.1, 18.4)
Pentru (13.1, 18.4) endDist este 2.685609800399155 iar r-eps este 0.14000000000000012
endDist Il apendeaza pe (13.1, 18.4) endDist 2.685609800399155
startDist Il apendeaza pe (9.3, 20.3) startDist 4.930770730829005
Before swap start end (9.3, 20.3) (13.1, 18.4) 3 9
After swap start end (13.1, 18.4) (9.3, 20.3) 3 9
p1 = (11.8, 16.05)
startIdx = 4 obj (9.65, 20.8)
endIdx = 8 obj (13.3, 18.6)
startDIST = 5.2139236664914845 obj (9.65, 20.8)
endDIST = 2.9584624384974036 obj (13.3, 18.6)
PRIMUL WHILE endIdx = 8 obj (13.3, 18.6) endDist 2.9584624384974036
endDist Il apendeaza pe (13.3, 18.6) endDist 2.9584624384974036
PRIMUL WHILE endIdx = 7 obj (13.55, 18.85) endDist 3.301893396219812
endDist Il apendeaza pe (13.55, 18.85) endDist 3.301893396219812
PRIMUL WHILE endIdx = 6 obj (13.8, 19.05) endDist 3.605551275463989
endDist Il apendeaza pe (13.8, 19.05) endDist 3.605551275463989
PRIMUL WHILE endIdx = 5 obj (14.15, 19.25) endDist 3.9702015062210623
endDist Il apendeaza pe (14.15, 19.25) endDist 3.9702015062210623
sunt egale 4 4
========================= WIN L ===================
[(12.3, 17.6), (12.55, 17.85), (12.8, 18.05), (13.1, 18.4)]
========================= WIN L END ===================
========================= WIN G ===================
[(10.2, 21.25), (8.3, 18.75), (8.65, 19.3), (8.9, 19.85), (9.3, 20.3), (13.3, 18.6), (13.55, 18.85), (13.8, 19.05), (14.15, 19.25), (9.65, 20.8)]
========================= WIN G END ===================
========================= OBJS first half ===================
[(12.3, 17.6), (12.55, 17.85), (12.8, 18.05)]
========================= OBJS first half END ===================
========================= OBJS last half ===================
[(13.1, 18.4), (9.65, 20.8), (14.15, 19.25), (13.8, 19.05), (13.55, 18.85), (13.3, 18.6), (9.3, 20.3), (8.9, 19.85), (8.65, 19.3), (8.3, 18.75), (10.2, 21.25)]
========================= OBJS last half END ===================
Intra in win
win len(objs), len(objs1), len(objs2), constSmallNumber 17 | [(11.85, 16.5), (12.0, 16.75), (12.15, 17.2), (11.6, 15.25), (11.65, 15.7), (11.8, 16.05), (11.55, 14.7)] | [(10.2, 21.25), (8.3, 18.75), (8.65, 19.3), (8.9, 19.85), (9.3, 20.3), (13.3, 18.6), (13.55, 18.85), (13.8, 19.05), (14.15, 19.25), (9.65, 20.8)] | 10
p1 = (11.6, 15.25) len objs = 7
r is 1.11
new r is 1.11
p1 = (11.6, 15.25)
startIdx = 0 obj (11.85, 16.5)
endIdx = 6 obj (11.55, 14.7)
startDIST = 1.2747548783981961 obj (11.85, 16.5)
endDIST = 0.5522680508593636 obj (11.55, 14.7)
Pentru (11.55, 14.7) endDist este 0.5522680508593636 iar r-eps este -1.6899999999999997
endDist Il apendeaza pe (11.55, 14.7) endDist 0.5522680508593636
startDist Il apendeaza pe (11.85, 16.5) startDist 1.2747548783981961
Before swap start end (11.85, 16.5) (11.55, 14.7) 0 6
After swap start end (11.55, 14.7) (11.85, 16.5) 0 6
p1 = (11.6, 15.25)
startIdx = 1 obj (12.0, 16.75)
endIdx = 5 obj (11.8, 16.05)
startDIST = 1.5524174696260025 obj (12.0, 16.75)
endDIST = 0.824621125123533 obj (11.8, 16.05)
Pentru (11.8, 16.05) endDist este 0.824621125123533 iar r-eps este -1.6899999999999997
endDist Il apendeaza pe (11.8, 16.05) endDist 0.824621125123533
startDist Il apendeaza pe (12.0, 16.75) startDist 1.5524174696260025
Before swap start end (12.0, 16.75) (11.8, 16.05) 1 5
After swap start end (11.8, 16.05) (12.0, 16.75) 1 5
p1 = (11.6, 15.25)
startIdx = 2 obj (12.15, 17.2)
endIdx = 4 obj (11.65, 15.7)
startDIST = 2.0260799589354805 obj (12.15, 17.2)
endDIST = 0.4527692569068702 obj (11.65, 15.7)
Pentru (11.65, 15.7) endDist este 0.4527692569068702 iar r-eps este -1.6899999999999997
endDist Il apendeaza pe (11.65, 15.7) endDist 0.4527692569068702
startDist Il apendeaza pe (12.15, 17.2) startDist 2.0260799589354805
Before swap start end (12.15, 17.2) (11.65, 15.7) 2 4
After swap start end (11.65, 15.7) (12.15, 17.2) 2 4
sunt egale 3 3
========================= WIN L ===================
[(11.55, 14.7), (11.8, 16.05), (11.65, 15.7), (11.6, 15.25)]
========================= WIN L END ===================
========================= WIN G ===================
[(11.85, 16.5), (12.0, 16.75), (12.15, 17.2)]
========================= WIN G END ===================
========================= OBJS first half ===================
[(11.55, 14.7), (11.8, 16.05), (11.65, 15.7)]
========================= OBJS first half END ===================
========================= OBJS last half ===================
[(11.6, 15.25), (12.15, 17.2), (12.0, 16.75), (11.85, 16.5)]
========================= OBJS last half END ===================
p1 = (11.6, 15.25) len objs = 10
r is 3.11
new r is 3.11
p1 = (11.6, 15.25)
startIdx = 0 obj (10.2, 21.25)
endIdx = 9 obj (9.65, 20.8)
startDIST = 6.161168720299745 obj (10.2, 21.25)
endDIST = 5.882601465338274 obj (9.65, 20.8)
PRIMUL WHILE endIdx = 9 obj (9.65, 20.8) endDist 5.882601465338274
endDist Il apendeaza pe (9.65, 20.8) endDist 5.882601465338274
PRIMUL WHILE endIdx = 8 obj (14.15, 19.25) endDist 4.743680006071236
endDist Il apendeaza pe (14.15, 19.25) endDist 4.743680006071236
PRIMUL WHILE endIdx = 7 obj (13.8, 19.05) endDist 4.390899680020031
endDist Il apendeaza pe (13.8, 19.05) endDist 4.390899680020031
PRIMUL WHILE endIdx = 6 obj (13.55, 18.85) endDist 4.094203219186856
endDist Il apendeaza pe (13.55, 18.85) endDist 4.094203219186856
PRIMUL WHILE endIdx = 5 obj (13.3, 18.6) endDist 3.756660751252369
endDist Il apendeaza pe (13.3, 18.6) endDist 3.756660751252369
PRIMUL WHILE endIdx = 4 obj (9.3, 20.3) endDist 5.54909902596809
endDist Il apendeaza pe (9.3, 20.3) endDist 5.54909902596809
PRIMUL WHILE endIdx = 3 obj (8.9, 19.85) endDist 5.333854141237835
endDist Il apendeaza pe (8.9, 19.85) endDist 5.333854141237835
PRIMUL WHILE endIdx = 2 obj (8.65, 19.3) endDist 5.010488998091903
endDist Il apendeaza pe (8.65, 19.3) endDist 5.010488998091903
PRIMUL WHILE endIdx = 1 obj (8.3, 18.75) endDist 4.810405388322277
endDist Il apendeaza pe (8.3, 18.75) endDist 4.810405388322277
sunt egale 0 0
========================= WIN L ===================
[]
========================= WIN L END ===================
========================= WIN G ===================
[(9.65, 20.8), (14.15, 19.25), (13.8, 19.05), (13.55, 18.85), (13.3, 18.6), (9.3, 20.3), (8.9, 19.85), (8.65, 19.3), (8.3, 18.75)]
========================= WIN G END ===================
========================= OBJS first half ===================
[(10.2, 21.25), (8.3, 18.75), (8.65, 19.3), (8.9, 19.85), (9.3, 20.3), (13.3, 18.6), (13.55, 18.85), (13.8, 19.05), (14.15, 19.25)]
========================= OBJS first half END ===================
========================= OBJS last half ===================
[(9.65, 20.8)]
========================= OBJS last half END ===================
nested loop vine din 
nested loop objs1, objs2 [(11.55, 14.7), (11.8, 16.05), (11.65, 15.7), (11.6, 15.25)][(9.65, 20.8), (14.15, 19.25), (13.8, 19.05), (13.55, 18.85), (13.3, 18.6), (9.3, 20.3), (8.9, 19.85), (8.65, 19.3), (8.3, 18.75)]
nested loop vine din 
nested loop objs1, objs2 [(11.85, 16.5), (12.0, 16.75), (12.15, 17.2)][]
nested loop vine din 
nested loop objs1, objs2 [(11.55, 14.7), (11.8, 16.05), (11.65, 15.7), (11.6, 15.25)][]
nested loop vine din 
nested loop objs1, objs2 [(12.15, 17.2), (12.0, 16.75), (11.85, 16.5)][(10.2, 21.25), (8.3, 18.75), (8.65, 19.3), (8.9, 19.85), (9.3, 20.3), (13.3, 18.6), (13.55, 18.85), (13.8, 19.05), (14.15, 19.25), (9.65, 20.8)]
Intra in win
win len(objs), len(objs1), len(objs2), constSmallNumber 7 | [(7.8, 17.55), (7.7, 16.95), (8.05, 18.15)] | [(12.3, 17.6), (12.55, 17.85), (12.8, 18.05), (13.1, 18.4)] | 10
nested loop vine din 
nested loop objs1, objs2 [(7.8, 17.55), (7.7, 16.95), (8.05, 18.15)][(12.3, 17.6), (12.55, 17.85), (12.8, 18.05), (13.1, 18.4)]
Intra in win
win len(objs), len(objs1), len(objs2), constSmallNumber 11 | [(11.85, 16.5), (12.0, 16.75), (12.15, 17.2), (11.6, 15.25), (11.65, 15.7), (11.8, 16.05), (11.55, 14.7)] | [(12.3, 17.6), (12.55, 17.85), (12.8, 18.05), (13.1, 18.4)] | 10
p1 = (12.0, 16.75) len objs = 7
r is 1.11
new r is 1.11
p1 = (12.0, 16.75)
startIdx = 0 obj (11.85, 16.5)
endIdx = 6 obj (11.55, 14.7)
startDIST = 0.2915475947422652 obj (11.85, 16.5)
endDIST = 2.0988091861815366 obj (11.55, 14.7)
PRIMUL WHILE endIdx = 6 obj (11.55, 14.7) endDist 2.0988091861815366
endDist Il apendeaza pe (11.55, 14.7) endDist 2.0988091861815366
AL DOILEA WHILE startIdx = 0 obj (11.85, 16.5) start 0.2915475947422652
startDist Il apendeaza pe (11.85, 16.5) endDist 0.2915475947422652
AL DOILEA WHILE startIdx = 1 obj (12.0, 16.75) start 0.0
startDist Il apendeaza pe (12.0, 16.75) endDist 0.0
AL DOILEA WHILE startIdx = 2 obj (12.15, 17.2) start 0.47434164902525633
startDist Il apendeaza pe (12.15, 17.2) endDist 0.47434164902525633
Pentru (11.8, 16.05) endDist este 0.7280109889280509 iar r-eps este -1.6899999999999997
endDist Il apendeaza pe (11.8, 16.05) endDist 0.7280109889280509
startDist Il apendeaza pe (11.6, 15.25) startDist 1.5524174696260025
Before swap start end (11.6, 15.25) (11.8, 16.05) 3 5
After swap start end (11.8, 16.05) (11.6, 15.25) 3 5
sunt egale 4 4
========================= WIN L ===================
[(11.85, 16.5), (12.0, 16.75), (12.15, 17.2), (11.8, 16.05), (11.65, 15.7)]
========================= WIN L END ===================
========================= WIN G ===================
[(11.55, 14.7), (11.6, 15.25)]
========================= WIN G END ===================
========================= OBJS first half ===================
[(11.85, 16.5), (12.0, 16.75), (12.15, 17.2), (11.8, 16.05)]
========================= OBJS first half END ===================
========================= OBJS last half ===================
[(11.65, 15.7), (11.6, 15.25), (11.55, 14.7)]
========================= OBJS last half END ===================
p1 = (12.0, 16.75) len objs = 4
r is 0.62
new r is 0.62
p1 = (12.0, 16.75)
startIdx = 0 obj (12.3, 17.6)
endIdx = 3 obj (13.1, 18.4)
startDIST = 0.9013878188659988 obj (12.3, 17.6)
endDIST = 1.9830532015051927 obj (13.1, 18.4)
PRIMUL WHILE endIdx = 3 obj (13.1, 18.4) endDist 1.9830532015051927
endDist Il apendeaza pe (13.1, 18.4) endDist 1.9830532015051927
PRIMUL WHILE endIdx = 2 obj (12.8, 18.05) endDist 1.5264337522473759
endDist Il apendeaza pe (12.8, 18.05) endDist 1.5264337522473759
PRIMUL WHILE endIdx = 1 obj (12.55, 17.85) endDist 1.2298373876248858
endDist Il apendeaza pe (12.55, 17.85) endDist 1.2298373876248858
sunt egale 0 0
========================= WIN L ===================
[]
========================= WIN L END ===================
========================= WIN G ===================
[(13.1, 18.4), (12.8, 18.05), (12.55, 17.85), (12.3, 17.6)]
========================= WIN G END ===================
========================= OBJS first half ===================
[(12.3, 17.6), (12.55, 17.85), (12.8, 18.05)]
========================= OBJS first half END ===================
========================= OBJS last half ===================
[(13.1, 18.4)]
========================= OBJS last half END ===================
nested loop vine din 
nested loop objs1, objs2 [(11.85, 16.5), (12.0, 16.75), (12.15, 17.2), (11.8, 16.05), (11.65, 15.7)][(13.1, 18.4), (12.8, 18.05), (12.55, 17.85), (12.3, 17.6)]
nested loop vine din 
nested loop objs1, objs2 [(11.55, 14.7), (11.6, 15.25)][]
nested loop vine din 
nested loop objs1, objs2 [(11.85, 16.5), (12.0, 16.75), (12.15, 17.2), (11.8, 16.05), (11.65, 15.7)][]
nested loop vine din 
nested loop objs1, objs2 [(11.6, 15.25), (11.55, 14.7)][(12.3, 17.6), (12.55, 17.85), (12.8, 18.05), (13.1, 18.4)]
Intra in win
win len(objs), len(objs1), len(objs2), constSmallNumber 13 | [(8.05, 18.15), (7.7, 16.95), (7.8, 17.55)] | [(9.65, 20.8), (14.15, 19.25), (13.8, 19.05), (13.55, 18.85), (13.3, 18.6), (9.3, 20.3), (8.9, 19.85), (8.65, 19.3), (8.3, 18.75), (10.2, 21.25)] | 10
p1 = (13.8, 19.05) len objs = 3
r is 0.84
new r is 0.84
p1 = (13.8, 19.05)
startIdx = 0 obj (8.05, 18.15)
endIdx = 2 obj (7.8, 17.55)
startDIST = 5.820008591058952 obj (8.05, 18.15)
endDIST = 6.184658438426492 obj (7.8, 17.55)
PRIMUL WHILE endIdx = 2 obj (7.8, 17.55) endDist 6.184658438426492
PRIMUL WHILE endIdx = 1 obj (7.7, 16.95) endDist 6.451356446515725
sunt egale 0 0
========================= WIN L ===================
[]
========================= WIN L END ===================
========================= WIN G ===================
[]
========================= WIN G END ===================
========================= OBJS first half ===================
[(8.05, 18.15), (7.7, 16.95)]
========================= OBJS first half END ===================
========================= OBJS last half ===================
[(7.8, 17.55)]
========================= OBJS last half END ===================
p1 = (13.8, 19.05) len objs = 10
r is 3.11
new r is 3.11
p1 = (13.8, 19.05)
startIdx = 0 obj (9.65, 20.8)
endIdx = 9 obj (10.2, 21.25)
startDIST = 4.503887209955418 obj (9.65, 20.8)
endDIST = 4.219004621945798 obj (10.2, 21.25)
PRIMUL WHILE endIdx = 9 obj (10.2, 21.25) endDist 4.219004621945798
endDist Il apendeaza pe (10.2, 21.25) endDist 4.219004621945798
PRIMUL WHILE endIdx = 8 obj (8.3, 18.75) endDist 5.508175741568165
endDist Il apendeaza pe (8.3, 18.75) endDist 5.508175741568165
PRIMUL WHILE endIdx = 7 obj (8.65, 19.3) endDist 5.156064390598706
endDist Il apendeaza pe (8.65, 19.3) endDist 5.156064390598706
PRIMUL WHILE endIdx = 6 obj (8.9, 19.85) endDist 4.964876634922565
endDist Il apendeaza pe (8.9, 19.85) endDist 4.964876634922565
PRIMUL WHILE endIdx = 5 obj (9.3, 20.3) endDist 4.670385423067351
endDist Il apendeaza pe (9.3, 20.3) endDist 4.670385423067351
Pentru (13.3, 18.6) endDist este 0.672681202353685 iar r-eps este 0.31000000000000005
endDist Il apendeaza pe (13.3, 18.6) endDist 0.672681202353685
startDist Il apendeaza pe (9.65, 20.8) startDist 4.503887209955418
Before swap start end (9.65, 20.8) (13.3, 18.6) 0 4
After swap start end (13.3, 18.6) (9.65, 20.8) 0 4
p1 = (13.8, 19.05)
startIdx = 1 obj (14.15, 19.25)
endIdx = 3 obj (13.55, 18.85)
startDIST = 0.40311288741492685 obj (14.15, 19.25)
endDIST = 0.320156211871642 obj (13.55, 18.85)
AL DOILEA WHILE startIdx = 1 obj (14.15, 19.25) start 0.40311288741492685
startDist Il apendeaza pe (14.15, 19.25) endDist 0.40311288741492685
AL DOILEA WHILE startIdx = 2 obj (13.8, 19.05) start 0.0
sunt egale 3 3
========================= WIN L ===================
[(13.3, 18.6), (14.15, 19.25), (13.55, 18.85)]
========================= WIN L END ===================
========================= WIN G ===================
[(10.2, 21.25), (8.3, 18.75), (8.65, 19.3), (8.9, 19.85), (9.3, 20.3), (9.65, 20.8)]
========================= WIN G END ===================
========================= OBJS first half ===================
[(13.3, 18.6), (14.15, 19.25), (13.8, 19.05)]
========================= OBJS first half END ===================
========================= OBJS last half ===================
[(13.55, 18.85), (9.65, 20.8), (9.3, 20.3), (8.9, 19.85), (8.65, 19.3), (8.3, 18.75), (10.2, 21.25)]
========================= OBJS last half END ===================
nested loop vine din 
nested loop objs1, objs2 [][(10.2, 21.25), (8.3, 18.75), (8.65, 19.3), (8.9, 19.85), (9.3, 20.3), (9.65, 20.8)]
nested loop vine din 
nested loop objs1, objs2 [][(13.3, 18.6), (14.15, 19.25), (13.55, 18.85)]
nested loop vine din 
nested loop objs1, objs2 [][(13.3, 18.6), (14.15, 19.25), (13.8, 19.05), (13.55, 18.85)]
nested loop vine din 
nested loop objs1, objs2 [(8.05, 18.15), (7.7, 16.95), (7.8, 17.55)][(9.65, 20.8), (9.3, 20.3), (8.9, 19.85), (8.65, 19.3), (8.3, 18.75), (10.2, 21.25)]
Intra in win
win len(objs), len(objs1), len(objs2), constSmallNumber 18 | [(12.95, 10.55), (13.25, 10.1), (13.6, 9.65), (13.95, 9.3), (12.7, 5.2), (12.05, 5.65), (11.45, 6.15), (10.9, 6.65), (7.55, 16.35), (14.45, 8.9), (14.9, 8.7)] | [(14.15, 4.4), (15.4, 8.35), (15.8, 8.05), (16.35, 7.8), (16.9, 7.6), (17.5, 7.35), (13.4, 4.75)] | 10
p1 = (10.9, 6.65) len objs = 11
r is 4.22
new r is 4.22
p1 = (10.9, 6.65)
startIdx = 0 obj (12.95, 10.55)
endIdx = 10 obj (14.9, 8.7)
startDIST = 4.405961870012041 obj (12.95, 10.55)
endDIST = 4.4947191235938195 obj (14.9, 8.7)
PRIMUL WHILE endIdx = 10 obj (14.9, 8.7) endDist 4.4947191235938195
endDist Il apendeaza pe (14.9, 8.7) endDist 4.4947191235938195
Pentru (14.45, 8.9) endDist este 4.202975136733501 iar r-eps este 1.42
endDist Il apendeaza pe (14.45, 8.9) endDist 4.202975136733501
startDist Il apendeaza pe (12.95, 10.55) startDist 4.405961870012041
Before swap start end (12.95, 10.55) (14.45, 8.9) 0 9
After swap start end (14.45, 8.9) (12.95, 10.55) 0 9
p1 = (10.9, 6.65)
startIdx = 1 obj (13.25, 10.1)
endIdx = 8 obj (7.55, 16.35)
startDIST = 4.1743262929483596 obj (13.25, 10.1)
endDIST = 10.262187875886898 obj (7.55, 16.35)
PRIMUL WHILE endIdx = 8 obj (7.55, 16.35) endDist 10.262187875886898
AL DOILEA WHILE startIdx = 1 obj (13.25, 10.1) start 4.1743262929483596
startDist Il apendeaza pe (13.25, 10.1) endDist 4.1743262929483596
AL DOILEA WHILE startIdx = 2 obj (13.6, 9.65) start 4.036087214122112
startDist Il apendeaza pe (13.6, 9.65) endDist 4.036087214122112
AL DOILEA WHILE startIdx = 3 obj (13.95, 9.3) start 4.040420770167384
startDist Il apendeaza pe (13.95, 9.3) endDist 4.040420770167384
AL DOILEA WHILE startIdx = 4 obj (12.7, 5.2) start 2.3113848662652434
startDist Il apendeaza pe (12.7, 5.2) endDist 2.3113848662652434
AL DOILEA WHILE startIdx = 5 obj (12.05, 5.65) start 1.5239750654128172
startDist Il apendeaza pe (12.05, 5.65) endDist 1.5239750654128172
AL DOILEA WHILE startIdx = 6 obj (11.45, 6.15) start 0.7433034373659245
sunt egale 7 7
========================= WIN L ===================
[(14.45, 8.9), (13.25, 10.1), (13.6, 9.65), (13.95, 9.3), (12.7, 5.2), (12.05, 5.65)]
========================= WIN L END ===================
========================= WIN G ===================
[(14.9, 8.7), (12.95, 10.55)]
========================= WIN G END ===================
========================= OBJS first half ===================
[(14.45, 8.9), (13.25, 10.1), (13.6, 9.65), (13.95, 9.3), (12.7, 5.2), (12.05, 5.65), (11.45, 6.15)]
========================= OBJS first half END ===================
========================= OBJS last half ===================
[(10.9, 6.65), (7.55, 16.35), (12.95, 10.55), (14.9, 8.7)]
========================= OBJS last half END ===================
p1 = (10.9, 6.65) len objs = 7
r is 2.63
new r is 2.63
p1 = (10.9, 6.65)
startIdx = 0 obj (14.15, 4.4)
endIdx = 6 obj (13.4, 4.75)
startDIST = 3.952847075210474 obj (14.15, 4.4)
endDIST = 3.1400636936215167 obj (13.4, 4.75)
PRIMUL WHILE endIdx = 6 obj (13.4, 4.75) endDist 3.1400636936215167
endDist Il apendeaza pe (13.4, 4.75) endDist 3.1400636936215167
PRIMUL WHILE endIdx = 5 obj (17.5, 7.35) endDist 6.637017402418047
PRIMUL WHILE endIdx = 4 obj (16.9, 7.6) endDist 6.074742792909011
PRIMUL WHILE endIdx = 3 obj (16.35, 7.8) endDist 5.570008976653449
PRIMUL WHILE endIdx = 2 obj (15.8, 8.05) endDist 5.096076922496364
endDist Il apendeaza pe (15.8, 8.05) endDist 5.096076922496364
PRIMUL WHILE endIdx = 1 obj (15.4, 8.35) endDist 4.810405388322277
endDist Il apendeaza pe (15.4, 8.35) endDist 4.810405388322277
sunt egale 0 0
========================= WIN L ===================
[]
========================= WIN L END ===================
========================= WIN G ===================
[(13.4, 4.75), (15.8, 8.05), (15.4, 8.35), (14.15, 4.4)]
========================= WIN G END ===================
========================= OBJS first half ===================
[(14.15, 4.4), (15.4, 8.35), (15.8, 8.05), (16.35, 7.8), (16.9, 7.6), (17.5, 7.35)]
========================= OBJS first half END ===================
========================= OBJS last half ===================
[(13.4, 4.75)]
========================= OBJS last half END ===================
nested loop vine din 
nested loop objs1, objs2 [(14.45, 8.9), (13.25, 10.1), (13.6, 9.65), (13.95, 9.3), (12.7, 5.2), (12.05, 5.65)][(13.4, 4.75), (15.8, 8.05), (15.4, 8.35), (14.15, 4.4)]
nested loop vine din 
nested loop objs1, objs2 [(14.9, 8.7), (12.95, 10.55)][]
nested loop vine din 
nested loop objs1, objs2 [(14.45, 8.9), (13.25, 10.1), (13.6, 9.65), (13.95, 9.3), (12.7, 5.2), (12.05, 5.65), (11.45, 6.15), (10.9, 6.65)][]
nested loop vine din 
nested loop objs1, objs2 [(7.55, 16.35), (12.95, 10.55), (14.9, 8.7)][(14.15, 4.4), (15.4, 8.35), (15.8, 8.05), (16.35, 7.8), (16.9, 7.6), (17.5, 7.35), (13.4, 4.75)]
quick len(objs), constSmallNumber 44 10
p1 = (11.55, 14.7) len objs = 44
r is 5.31
new r is 5.31
p1 = (11.55, 14.7)
startIdx = 0 obj (14.9, 8.7)
endIdx = 43 obj (7.8, 17.55)
startDIST = 6.871862920635131 obj (14.9, 8.7)
endDIST = 4.710095540432277 obj (7.8, 17.55)
Pentru (7.8, 17.55) endDist este 4.710095540432277 iar r-eps este 2.51
endDist Il apendeaza pe (7.8, 17.55) endDist 4.710095540432277
startDist Il apendeaza pe (14.9, 8.7) startDist 6.871862920635131
Before swap start end (14.9, 8.7) (7.8, 17.55) 0 43
After swap start end (7.8, 17.55) (14.9, 8.7) 0 43
p1 = (11.55, 14.7)
startIdx = 1 obj (14.45, 8.9)
endIdx = 42 obj (7.7, 16.95)
startDIST = 6.4845971347493885 obj (14.45, 8.9)
endDIST = 4.45926002830066 obj (7.7, 16.95)
Pentru (7.7, 16.95) endDist este 4.45926002830066 iar r-eps este 2.51
endDist Il apendeaza pe (7.7, 16.95) endDist 4.45926002830066
startDist Il apendeaza pe (14.45, 8.9) startDist 6.4845971347493885
Before swap start end (14.45, 8.9) (7.7, 16.95) 1 42
After swap start end (7.7, 16.95) (14.45, 8.9) 1 42
p1 = (11.55, 14.7)
startIdx = 2 obj (13.95, 9.3)
endIdx = 41 obj (7.55, 16.35)
startDIST = 5.909314681077661 obj (13.95, 9.3)
endDIST = 4.326950427263989 obj (7.55, 16.35)
Pentru (7.55, 16.35) endDist este 4.326950427263989 iar r-eps este 2.51
endDist Il apendeaza pe (7.55, 16.35) endDist 4.326950427263989
startDist Il apendeaza pe (13.95, 9.3) startDist 5.909314681077661
Before swap start end (13.95, 9.3) (7.55, 16.35) 2 41
After swap start end (7.55, 16.35) (13.95, 9.3) 2 41
p1 = (11.55, 14.7)
startIdx = 3 obj (13.6, 9.65)
endIdx = 40 obj (7.35, 15.75)
startDIST = 5.45022935297222 obj (13.6, 9.65)
endDIST = 4.329260906898544 obj (7.35, 15.75)
Pentru (7.35, 15.75) endDist este 4.329260906898544 iar r-eps este 2.51
endDist Il apendeaza pe (7.35, 15.75) endDist 4.329260906898544
startDist Il apendeaza pe (13.6, 9.65) startDist 5.45022935297222
Before swap start end (13.6, 9.65) (7.35, 15.75) 3 40
After swap start end (7.35, 15.75) (13.6, 9.65) 3 40
p1 = (11.55, 14.7)
startIdx = 4 obj (13.25, 10.1)
endIdx = 39 obj (7.35, 14.95)
startDIST = 4.904079934095691 obj (13.25, 10.1)
endDIST = 4.207433897282286 obj (7.35, 14.95)
AL DOILEA WHILE startIdx = 4 obj (13.25, 10.1) start 4.904079934095691
startDist Il apendeaza pe (13.25, 10.1) endDist 4.904079934095691
AL DOILEA WHILE startIdx = 5 obj (12.95, 10.55) start 4.379783099652309
startDist Il apendeaza pe (12.95, 10.55) endDist 4.379783099652309
AL DOILEA WHILE startIdx = 6 obj (12.65, 10.9) start 3.9560080889704956
startDist Il apendeaza pe (12.65, 10.9) endDist 3.9560080889704956
AL DOILEA WHILE startIdx = 7 obj (12.35, 11.4) start 3.395585369269928
startDist Il apendeaza pe (12.35, 11.4) endDist 3.395585369269928
AL DOILEA WHILE startIdx = 8 obj (12.2, 11.75) start 3.0207614933986418
startDist Il apendeaza pe (12.2, 11.75) endDist 3.0207614933986418
AL DOILEA WHILE startIdx = 9 obj (11.95, 12.2) start 2.5317977802344322
startDist Il apendeaza pe (11.95, 12.2) endDist 2.5317977802344322
AL DOILEA WHILE startIdx = 10 obj (11.8, 12.65) start 2.0651876428063374
AL DOILEA WHILE startIdx = 11 obj (11.75, 13.05) start 1.6620770138594645
AL DOILEA WHILE startIdx = 12 obj (11.55, 13.6) start 1.0999999999999996
AL DOILEA WHILE startIdx = 13 obj (11.55, 14.0) start 0.6999999999999993
AL DOILEA WHILE startIdx = 14 obj (11.55, 14.35) start 0.34999999999999964
AL DOILEA WHILE startIdx = 15 obj (11.55, 14.7) start 0.0
AL DOILEA WHILE startIdx = 16 obj (12.15, 17.2) start 2.570992026436488
startDist Il apendeaza pe (12.15, 17.2) endDist 2.570992026436488
AL DOILEA WHILE startIdx = 17 obj (12.0, 16.75) start 2.0988091861815366
AL DOILEA WHILE startIdx = 18 obj (11.85, 16.5) start 1.8248287590894665
AL DOILEA WHILE startIdx = 19 obj (11.8, 16.05) start 1.3729530217745995
AL DOILEA WHILE startIdx = 20 obj (11.65, 15.7) start 1.004987562112089
AL DOILEA WHILE startIdx = 21 obj (11.6, 15.25) start 0.5522680508593636
AL DOILEA WHILE startIdx = 22 obj (8.05, 18.15) start 4.914519305079592
startDist Il apendeaza pe (8.05, 18.15) endDist 4.914519305079592
Pentru (7.35, 14.95) endDist este 4.207433897282286 iar r-eps este 2.51
endDist Il apendeaza pe (7.35, 14.95) endDist 4.207433897282286
Before swap start end (12.7, 5.2) (7.35, 14.95) 23 39
After swap start end (7.35, 14.95) (12.7, 5.2) 23 39
p1 = (11.55, 14.7)
startIdx = 24 obj (12.05, 5.65)
endIdx = 38 obj (7.3, 14.35)
startDIST = 9.063801630662487 obj (12.05, 5.65)
endDIST = 4.26438741204408 obj (7.3, 14.35)
Pentru (7.3, 14.35) endDist este 4.26438741204408 iar r-eps este 2.51
endDist Il apendeaza pe (7.3, 14.35) endDist 4.26438741204408
Before swap start end (12.05, 5.65) (7.3, 14.35) 24 38
After swap start end (7.3, 14.35) (12.05, 5.65) 24 38
p1 = (11.55, 14.7)
startIdx = 25 obj (11.45, 6.15)
endIdx = 37 obj (7.35, 13.75)
startDIST = 8.550584775323848 obj (11.45, 6.15)
endDIST = 4.306100323959024 obj (7.35, 13.75)
Pentru (7.35, 13.75) endDist este 4.306100323959024 iar r-eps este 2.51
endDist Il apendeaza pe (7.35, 13.75) endDist 4.306100323959024
Before swap start end (11.45, 6.15) (7.35, 13.75) 25 37
After swap start end (7.35, 13.75) (11.45, 6.15) 25 37
p1 = (11.55, 14.7)
startIdx = 26 obj (10.9, 6.65)
endIdx = 36 obj (7.45, 13.0)
startDIST = 8.07619960129763 obj (10.9, 6.65)
endDIST = 4.43846820423443 obj (7.45, 13.0)
Pentru (7.45, 13.0) endDist este 4.43846820423443 iar r-eps este 2.51
endDist Il apendeaza pe (7.45, 13.0) endDist 4.43846820423443
startDist Il apendeaza pe (10.9, 6.65) startDist 8.07619960129763
Before swap start end (10.9, 6.65) (7.45, 13.0) 26 36
After swap start end (7.45, 13.0) (10.9, 6.65) 26 36
p1 = (11.55, 14.7)
startIdx = 27 obj (10.3, 7.25)
endIdx = 35 obj (7.55, 12.35)
startDIST = 7.554137938904742 obj (10.3, 7.25)
endDIST = 4.639234850705448 obj (7.55, 12.35)
Pentru (7.55, 12.35) endDist este 4.639234850705448 iar r-eps este 2.51
endDist Il apendeaza pe (7.55, 12.35) endDist 4.639234850705448
startDist Il apendeaza pe (10.3, 7.25) startDist 7.554137938904742
Before swap start end (10.3, 7.25) (7.55, 12.35) 27 35
After swap start end (7.55, 12.35) (10.3, 7.25) 27 35
p1 = (11.55, 14.7)
startIdx = 28 obj (9.7, 7.85)
endIdx = 34 obj (7.75, 11.7)
startDIST = 7.095421058682846 obj (9.7, 7.85)
endDIST = 4.841487374764082 obj (7.75, 11.7)
Pentru (7.75, 11.7) endDist este 4.841487374764082 iar r-eps este 2.51
endDist Il apendeaza pe (7.75, 11.7) endDist 4.841487374764082
startDist Il apendeaza pe (9.7, 7.85) startDist 7.095421058682846
Before swap start end (9.7, 7.85) (7.75, 11.7) 28 34
After swap start end (7.75, 11.7) (9.7, 7.85) 28 34
p1 = (11.55, 14.7)
startIdx = 29 obj (9.35, 8.35)
endIdx = 33 obj (7.95, 10.95)
startDIST = 6.720305052599919 obj (9.35, 8.35)
endDIST = 5.198317035349037 obj (7.95, 10.95)
Pentru (7.95, 10.95) endDist este 5.198317035349037 iar r-eps este 2.51
endDist Il apendeaza pe (7.95, 10.95) endDist 5.198317035349037
startDist Il apendeaza pe (9.35, 8.35) startDist 6.720305052599919
Before swap start end (9.35, 8.35) (7.95, 10.95) 29 33
After swap start end (7.95, 10.95) (9.35, 8.35) 29 33
p1 = (11.55, 14.7)
startIdx = 30 obj (8.9, 9.05)
endIdx = 32 obj (8.15, 10.35)
startDIST = 6.240592920548495 obj (8.9, 9.05)
endDIST = 5.521095905705677 obj (8.15, 10.35)
PRIMUL WHILE endIdx = 32 obj (8.15, 10.35) endDist 5.521095905705677
endDist Il apendeaza pe (8.15, 10.35) endDist 5.521095905705677
PRIMUL WHILE endIdx = 31 obj (8.55, 9.65) endDist 5.873882872512866
endDist Il apendeaza pe (8.55, 9.65) endDist 5.873882872512866
sunt egale 30 30
========================= WIN L ===================
[(7.8, 17.55), (7.7, 16.95), (7.55, 16.35), (7.35, 15.75), (13.25, 10.1), (12.95, 10.55), (12.65, 10.9), (12.35, 11.4), (12.2, 11.75), (11.95, 12.2), (12.15, 17.2), (8.05, 18.15), (7.35, 14.95), (7.3, 14.35), (7.35, 13.75), (7.45, 13.0), (7.55, 12.35), (7.75, 11.7), (7.95, 10.95)]
========================= WIN L END ===================
========================= WIN G ===================
[(14.9, 8.7), (14.45, 8.9), (13.95, 9.3), (13.6, 9.65), (10.9, 6.65), (10.3, 7.25), (9.7, 7.85), (9.35, 8.35), (8.15, 10.35), (8.55, 9.65), (8.9, 9.05)]
========================= WIN G END ===================
========================= OBJS first half ===================
[(7.8, 17.55), (7.7, 16.95), (7.55, 16.35), (7.35, 15.75), (13.25, 10.1), (12.95, 10.55), (12.65, 10.9), (12.35, 11.4), (12.2, 11.75), (11.95, 12.2), (11.8, 12.65), (11.75, 13.05), (11.55, 13.6), (11.55, 14.0), (11.55, 14.35), (11.55, 14.7), (12.15, 17.2), (12.0, 16.75), (11.85, 16.5), (11.8, 16.05), (11.65, 15.7), (11.6, 15.25), (8.05, 18.15), (7.35, 14.95), (7.3, 14.35), (7.35, 13.75), (7.45, 13.0), (7.55, 12.35), (7.75, 11.7)]
========================= OBJS first half END ===================
========================= OBJS last half ===================
[(7.95, 10.95), (8.9, 9.05), (8.55, 9.65), (8.15, 10.35), (9.35, 8.35), (9.7, 7.85), (10.3, 7.25), (10.9, 6.65), (11.45, 6.15), (12.05, 5.65), (12.7, 5.2), (13.6, 9.65), (13.95, 9.3), (14.45, 8.9), (14.9, 8.7)]
========================= OBJS last half END ===================
Intra in win
win len(objs), len(objs1), len(objs2), constSmallNumber 30 | [(7.8, 17.55), (7.7, 16.95), (7.55, 16.35), (7.35, 15.75), (13.25, 10.1), (12.95, 10.55), (12.65, 10.9), (12.35, 11.4), (12.2, 11.75), (11.95, 12.2), (12.15, 17.2), (8.05, 18.15), (7.35, 14.95), (7.3, 14.35), (7.35, 13.75), (7.45, 13.0), (7.55, 12.35), (7.75, 11.7), (7.95, 10.95)] | [(14.9, 8.7), (14.45, 8.9), (13.95, 9.3), (13.6, 9.65), (10.9, 6.65), (10.3, 7.25), (9.7, 7.85), (9.35, 8.35), (8.15, 10.35), (8.55, 9.65), (8.9, 9.05)] | 10
p1 = (9.35, 8.35) len objs = 19
r is 4.5
new r is 4.5
p1 = (9.35, 8.35)
startIdx = 0 obj (7.8, 17.55)
endIdx = 18 obj (7.95, 10.95)
startDIST = 9.329657014060057 obj (7.8, 17.55)
endDIST = 2.9529646120466797 obj (7.95, 10.95)
Pentru (7.95, 10.95) endDist este 2.9529646120466797 iar r-eps este 1.7000000000000002
endDist Il apendeaza pe (7.95, 10.95) endDist 2.9529646120466797
Before swap start end (7.8, 17.55) (7.95, 10.95) 0 18
After swap start end (7.95, 10.95) (7.8, 17.55) 0 18
p1 = (9.35, 8.35)
startIdx = 1 obj (7.7, 16.95)
endIdx = 17 obj (7.75, 11.7)
startDIST = 8.756854458080252 obj (7.7, 16.95)
endDIST = 3.712478956169314 obj (7.75, 11.7)
Pentru (7.75, 11.7) endDist este 3.712478956169314 iar r-eps este 1.7000000000000002
endDist Il apendeaza pe (7.75, 11.7) endDist 3.712478956169314
Before swap start end (7.7, 16.95) (7.75, 11.7) 1 17
After swap start end (7.75, 11.7) (7.7, 16.95) 1 17
p1 = (9.35, 8.35)
startIdx = 2 obj (7.55, 16.35)
endIdx = 16 obj (7.55, 12.35)
startDIST = 8.200000000000001 obj (7.55, 16.35)
endDIST = 4.386342439892261 obj (7.55, 12.35)
Pentru (7.55, 12.35) endDist este 4.386342439892261 iar r-eps este 1.7000000000000002
endDist Il apendeaza pe (7.55, 12.35) endDist 4.386342439892261
Before swap start end (7.55, 16.35) (7.55, 12.35) 2 16
After swap start end (7.55, 12.35) (7.55, 16.35) 2 16
p1 = (9.35, 8.35)
startIdx = 3 obj (7.35, 15.75)
endIdx = 15 obj (7.45, 13.0)
startDIST = 7.66550715869472 obj (7.35, 15.75)
endDIST = 5.023196193659969 obj (7.45, 13.0)
PRIMUL WHILE endIdx = 15 obj (7.45, 13.0) endDist 5.023196193659969
endDist Il apendeaza pe (7.45, 13.0) endDist 5.023196193659969
PRIMUL WHILE endIdx = 14 obj (7.35, 13.75) endDist 5.758472019555188
endDist Il apendeaza pe (7.35, 13.75) endDist 5.758472019555188
PRIMUL WHILE endIdx = 13 obj (7.3, 14.35) endDist 6.340544140686981
endDist Il apendeaza pe (7.3, 14.35) endDist 6.340544140686981
PRIMUL WHILE endIdx = 12 obj (7.35, 14.95) endDist 6.896375859826667
endDist Il apendeaza pe (7.35, 14.95) endDist 6.896375859826667
PRIMUL WHILE endIdx = 11 obj (8.05, 18.15) endDist 9.885848471426213
PRIMUL WHILE endIdx = 10 obj (12.15, 17.2) endDist 9.282375773475236
PRIMUL WHILE endIdx = 9 obj (11.95, 12.2) endDist 4.645696933722646
endDist Il apendeaza pe (11.95, 12.2) endDist 4.645696933722646
Pentru (12.2, 11.75) endDist este 4.436496365376625 iar r-eps este 1.7000000000000002
endDist Il apendeaza pe (12.2, 11.75) endDist 4.436496365376625
Before swap start end (7.35, 15.75) (12.2, 11.75) 3 8
After swap start end (12.2, 11.75) (7.35, 15.75) 3 8
p1 = (9.35, 8.35)
startIdx = 4 obj (13.25, 10.1)
endIdx = 7 obj (12.35, 11.4)
startDIST = 4.2746344872983 obj (13.25, 10.1)
endDIST = 4.278142120126446 obj (12.35, 11.4)
AL DOILEA WHILE startIdx = 4 obj (13.25, 10.1) start 4.2746344872983
startDist Il apendeaza pe (13.25, 10.1) endDist 4.2746344872983
AL DOILEA WHILE startIdx = 5 obj (12.95, 10.55) start 4.219004621945797
startDist Il apendeaza pe (12.95, 10.55) endDist 4.219004621945797
AL DOILEA WHILE startIdx = 6 obj (12.65, 10.9) start 4.170431632337354
startDist Il apendeaza pe (12.65, 10.9) endDist 4.170431632337354
sunt egale 7 7
========================= WIN L ===================
[(7.95, 10.95), (7.75, 11.7), (7.55, 12.35), (12.2, 11.75), (13.25, 10.1), (12.95, 10.55), (12.65, 10.9), (12.35, 11.4)]
========================= WIN L END ===================
========================= WIN G ===================
[(7.45, 13.0), (7.35, 13.75), (7.3, 14.35), (7.35, 14.95), (11.95, 12.2)]
========================= WIN G END ===================
========================= OBJS first half ===================
[(7.95, 10.95), (7.75, 11.7), (7.55, 12.35), (12.2, 11.75), (13.25, 10.1), (12.95, 10.55), (12.65, 10.9)]
========================= OBJS first half END ===================
========================= OBJS last half ===================
[(12.35, 11.4), (7.35, 15.75), (11.95, 12.2), (12.15, 17.2), (8.05, 18.15), (7.35, 14.95), (7.3, 14.35), (7.35, 13.75), (7.45, 13.0), (7.55, 16.35), (7.7, 16.95), (7.8, 17.55)]
========================= OBJS last half END ===================
p1 = (9.35, 8.35) len objs = 11
r is 3.46
new r is 3.46
p1 = (9.35, 8.35)
startIdx = 0 obj (14.9, 8.7)
endIdx = 10 obj (8.9, 9.05)
startDIST = 5.561025085359714 obj (14.9, 8.7)
endDIST = 0.8321658488546624 obj (8.9, 9.05)
Pentru (8.9, 9.05) endDist este 0.8321658488546624 iar r-eps este 0.6600000000000001
endDist Il apendeaza pe (8.9, 9.05) endDist 0.8321658488546624
startDist Il apendeaza pe (14.9, 8.7) startDist 5.561025085359714
Before swap start end (14.9, 8.7) (8.9, 9.05) 0 10
After swap start end (8.9, 9.05) (14.9, 8.7) 0 10
p1 = (9.35, 8.35)
startIdx = 1 obj (14.45, 8.9)
endIdx = 9 obj (8.55, 9.65)
startDIST = 5.129571132170798 obj (14.45, 8.9)
endDIST = 1.5264337522473748 obj (8.55, 9.65)
Pentru (8.55, 9.65) endDist este 1.5264337522473748 iar r-eps este 0.6600000000000001
endDist Il apendeaza pe (8.55, 9.65) endDist 1.5264337522473748
startDist Il apendeaza pe (14.45, 8.9) startDist 5.129571132170798
Before swap start end (14.45, 8.9) (8.55, 9.65) 1 9
After swap start end (8.55, 9.65) (14.45, 8.9) 1 9
p1 = (9.35, 8.35)
startIdx = 2 obj (13.95, 9.3)
endIdx = 8 obj (8.15, 10.35)
startDIST = 4.697073557013984 obj (13.95, 9.3)
endDIST = 2.33238075793812 obj (8.15, 10.35)
Pentru (8.15, 10.35) endDist este 2.33238075793812 iar r-eps este 0.6600000000000001
endDist Il apendeaza pe (8.15, 10.35) endDist 2.33238075793812
startDist Il apendeaza pe (13.95, 9.3) startDist 4.697073557013984
Before swap start end (13.95, 9.3) (8.15, 10.35) 2 8
After swap start end (8.15, 10.35) (13.95, 9.3) 2 8
p1 = (9.35, 8.35)
startIdx = 3 obj (13.6, 9.65)
endIdx = 7 obj (9.35, 8.35)
startDIST = 4.444378471732578 obj (13.6, 9.65)
endDIST = 0.0 obj (9.35, 8.35)
Pentru (9.35, 8.35) endDist este 0.0 iar r-eps este 0.6600000000000001
startDist Il apendeaza pe (13.6, 9.65) startDist 4.444378471732578
Before swap start end (13.6, 9.65) (9.35, 8.35) 3 7
After swap start end (9.35, 8.35) (13.6, 9.65) 3 7
p1 = (9.35, 8.35)
startIdx = 4 obj (10.9, 6.65)
endIdx = 6 obj (9.7, 7.85)
startDIST = 2.300543414065468 obj (10.9, 6.65)
endDIST = 0.6103277807866849 obj (9.7, 7.85)
AL DOILEA WHILE startIdx = 4 obj (10.9, 6.65) start 2.300543414065468
startDist Il apendeaza pe (10.9, 6.65) endDist 2.300543414065468
AL DOILEA WHILE startIdx = 5 obj (10.3, 7.25) start 1.4534441853748639
startDist Il apendeaza pe (10.3, 7.25) endDist 1.4534441853748639
sunt egale 6 6
========================= WIN L ===================
[(8.9, 9.05), (8.55, 9.65), (8.15, 10.35), (10.9, 6.65), (10.3, 7.25)]
========================= WIN L END ===================
========================= WIN G ===================
[(14.9, 8.7), (14.45, 8.9), (13.95, 9.3), (13.6, 9.65)]
========================= WIN G END ===================
========================= OBJS first half ===================
[(8.9, 9.05), (8.55, 9.65), (8.15, 10.35), (9.35, 8.35), (10.9, 6.65), (10.3, 7.25)]
========================= OBJS first half END ===================
========================= OBJS last half ===================
[(9.7, 7.85), (13.6, 9.65), (13.95, 9.3), (14.45, 8.9), (14.9, 8.7)]
========================= OBJS last half END ===================
Intra in win
win len(objs), len(objs1), len(objs2), constSmallNumber 12 | [(7.95, 10.95), (7.75, 11.7), (7.55, 12.35), (12.2, 11.75), (13.25, 10.1), (12.95, 10.55), (12.65, 10.9), (12.35, 11.4)] | [(14.9, 8.7), (14.45, 8.9), (13.95, 9.3), (13.6, 9.65)] | 10
p1 = (7.95, 10.95) len objs = 8
r is 3.16
new r is 3.16
p1 = (7.95, 10.95)
startIdx = 0 obj (7.95, 10.95)
endIdx = 7 obj (12.35, 11.4)
startDIST = 0.0 obj (7.95, 10.95)
endDIST = 4.422951503238533 obj (12.35, 11.4)
PRIMUL WHILE endIdx = 7 obj (12.35, 11.4) endDist 4.422951503238533
endDist Il apendeaza pe (12.35, 11.4) endDist 4.422951503238533
PRIMUL WHILE endIdx = 6 obj (12.65, 10.9) endDist 4.700265949922409
endDist Il apendeaza pe (12.65, 10.9) endDist 4.700265949922409
PRIMUL WHILE endIdx = 5 obj (12.95, 10.55) endDist 5.01597448159378
endDist Il apendeaza pe (12.95, 10.55) endDist 5.01597448159378
PRIMUL WHILE endIdx = 4 obj (13.25, 10.1) endDist 5.367727638395972
endDist Il apendeaza pe (13.25, 10.1) endDist 5.367727638395972
PRIMUL WHILE endIdx = 3 obj (12.2, 11.75) endDist 4.324638713233742
endDist Il apendeaza pe (12.2, 11.75) endDist 4.324638713233742
AL DOILEA WHILE startIdx = 0 obj (7.95, 10.95) start 0.0
AL DOILEA WHILE startIdx = 1 obj (7.75, 11.7) start 0.7762087348130012
startDist Il apendeaza pe (7.75, 11.7) endDist 0.7762087348130012
sunt egale 2 2
========================= WIN L ===================
[(7.75, 11.7), (7.55, 12.35)]
========================= WIN L END ===================
========================= WIN G ===================
[(12.35, 11.4), (12.65, 10.9), (12.95, 10.55), (13.25, 10.1), (12.2, 11.75)]
========================= WIN G END ===================
========================= OBJS first half ===================
[(7.95, 10.95), (7.75, 11.7)]
========================= OBJS first half END ===================
========================= OBJS last half ===================
[(7.55, 12.35), (12.2, 11.75), (13.25, 10.1), (12.95, 10.55), (12.65, 10.9), (12.35, 11.4)]
========================= OBJS last half END ===================
p1 = (7.95, 10.95) len objs = 4
r is 0.92
new r is 0.92
p1 = (7.95, 10.95)
startIdx = 0 obj (14.9, 8.7)
endIdx = 3 obj (13.6, 9.65)
startDIST = 7.305135180131851 obj (14.9, 8.7)
endDIST = 5.797628825649326 obj (13.6, 9.65)
PRIMUL WHILE endIdx = 3 obj (13.6, 9.65) endDist 5.797628825649326
PRIMUL WHILE endIdx = 2 obj (13.95, 9.3) endDist 6.222740553807461
PRIMUL WHILE endIdx = 1 obj (14.45, 8.9) endDist 6.815607089614247
sunt egale 0 0
========================= WIN L ===================
[]
========================= WIN L END ===================
========================= WIN G ===================
[]
========================= WIN G END ===================
========================= OBJS first half ===================
[(14.9, 8.7), (14.45, 8.9), (13.95, 9.3)]
========================= OBJS first half END ===================
========================= OBJS last half ===================
[(13.6, 9.65)]
========================= OBJS last half END ===================
nested loop vine din 
nested loop objs1, objs2 [(7.75, 11.7), (7.55, 12.35)][]
nested loop vine din 
nested loop objs1, objs2 [(12.35, 11.4), (12.65, 10.9), (12.95, 10.55), (13.25, 10.1), (12.2, 11.75)][]
nested loop vine din 
nested loop objs1, objs2 [(7.95, 10.95), (7.75, 11.7), (7.55, 12.35)][]
nested loop vine din 
nested loop objs1, objs2 [(12.2, 11.75), (13.25, 10.1), (12.95, 10.55), (12.65, 10.9), (12.35, 11.4)][(14.9, 8.7), (14.45, 8.9), (13.95, 9.3), (13.6, 9.65)]
Intra in win
win len(objs), len(objs1), len(objs2), constSmallNumber 10 | [(7.45, 13.0), (7.35, 13.75), (7.3, 14.35), (7.35, 14.95), (11.95, 12.2)] | [(8.9, 9.05), (8.55, 9.65), (8.15, 10.35), (10.9, 6.65), (10.3, 7.25)] | 10
p1 = (7.45, 13.0) len objs = 5
r is 2.64
new r is 2.64
p1 = (7.45, 13.0)
startIdx = 0 obj (7.45, 13.0)
endIdx = 4 obj (11.95, 12.2)
startDIST = 0.0 obj (7.45, 13.0)
endDIST = 4.570557952810575 obj (11.95, 12.2)
PRIMUL WHILE endIdx = 4 obj (11.95, 12.2) endDist 4.570557952810575
endDist Il apendeaza pe (11.95, 12.2) endDist 4.570557952810575
AL DOILEA WHILE startIdx = 0 obj (7.45, 13.0) start 0.0
startDist Il apendeaza pe (7.45, 13.0) endDist 0.0
AL DOILEA WHILE startIdx = 1 obj (7.35, 13.75) start 0.7566372975210779
startDist Il apendeaza pe (7.35, 13.75) endDist 0.7566372975210779
AL DOILEA WHILE startIdx = 2 obj (7.3, 14.35) start 1.3583077707206122
startDist Il apendeaza pe (7.3, 14.35) endDist 1.3583077707206122
sunt egale 3 3
========================= WIN L ===================
[(7.45, 13.0), (7.35, 13.75), (7.3, 14.35), (7.35, 14.95)]
========================= WIN L END ===================
========================= WIN G ===================
[(11.95, 12.2)]
========================= WIN G END ===================
========================= OBJS first half ===================
[(7.45, 13.0), (7.35, 13.75), (7.3, 14.35)]
========================= OBJS first half END ===================
========================= OBJS last half ===================
[(7.35, 14.95), (11.95, 12.2)]
========================= OBJS last half END ===================
p1 = (7.45, 13.0) len objs = 5
r is 2.44
new r is 2.44
p1 = (7.45, 13.0)
startIdx = 0 obj (8.9, 9.05)
endIdx = 4 obj (10.3, 7.25)
startDIST = 4.2077309799938485 obj (8.9, 9.05)
endDIST = 6.417554051194271 obj (10.3, 7.25)
PRIMUL WHILE endIdx = 4 obj (10.3, 7.25) endDist 6.417554051194271
PRIMUL WHILE endIdx = 3 obj (10.9, 6.65) endDist 7.226686654338903
PRIMUL WHILE endIdx = 2 obj (8.15, 10.35) endDist 2.7408940147331493
endDist Il apendeaza pe (8.15, 10.35) endDist 2.7408940147331493
PRIMUL WHILE endIdx = 1 obj (8.55, 9.65) endDist 3.5259750424527962
endDist Il apendeaza pe (8.55, 9.65) endDist 3.5259750424527962
sunt egale 0 0
========================= WIN L ===================
[]
========================= WIN L END ===================
========================= WIN G ===================
[(8.15, 10.35), (8.55, 9.65), (8.9, 9.05)]
========================= WIN G END ===================
========================= OBJS first half ===================
[(8.9, 9.05), (8.55, 9.65), (8.15, 10.35), (10.9, 6.65)]
========================= OBJS first half END ===================
========================= OBJS last half ===================
[(10.3, 7.25)]
========================= OBJS last half END ===================
nested loop vine din 
nested loop objs1, objs2 [(7.45, 13.0), (7.35, 13.75), (7.3, 14.35), (7.35, 14.95)][(8.15, 10.35), (8.55, 9.65), (8.9, 9.05)]
nested loop vine din 
nested loop objs1, objs2 [(11.95, 12.2)][]
nested loop vine din 
nested loop objs1, objs2 [(7.45, 13.0), (7.35, 13.75), (7.3, 14.35), (7.35, 14.95)][]
nested loop vine din 
nested loop objs1, objs2 [(11.95, 12.2)][(8.9, 9.05), (8.55, 9.65), (8.15, 10.35), (10.9, 6.65), (10.3, 7.25)]
Intra in win
win len(objs), len(objs1), len(objs2), constSmallNumber 15 | [(7.95, 10.95), (7.75, 11.7), (7.55, 12.35), (12.2, 11.75), (13.25, 10.1), (12.95, 10.55), (12.65, 10.9), (12.35, 11.4)] | [(8.9, 9.05), (8.55, 9.65), (8.15, 10.35), (9.35, 8.35), (10.9, 6.65), (10.3, 7.25), (9.7, 7.85)] | 10
p1 = (12.65, 10.9) len objs = 8
r is 3.16
new r is 3.16
p1 = (12.65, 10.9)
startIdx = 0 obj (7.95, 10.95)
endIdx = 7 obj (12.35, 11.4)
startDIST = 4.700265949922409 obj (7.95, 10.95)
endDIST = 0.5830951894845304 obj (12.35, 11.4)
Pentru (12.35, 11.4) endDist este 0.5830951894845304 iar r-eps este 0.3600000000000003
endDist Il apendeaza pe (12.35, 11.4) endDist 0.5830951894845304
startDist Il apendeaza pe (7.95, 10.95) startDist 4.700265949922409
Before swap start end (7.95, 10.95) (12.35, 11.4) 0 7
After swap start end (12.35, 11.4) (7.95, 10.95) 0 7
p1 = (12.65, 10.9)
startIdx = 1 obj (7.75, 11.7)
endIdx = 6 obj (12.65, 10.9)
startDIST = 4.964876634922564 obj (7.75, 11.7)
endDIST = 0.0 obj (12.65, 10.9)
Pentru (12.65, 10.9) endDist este 0.0 iar r-eps este 0.3600000000000003
startDist Il apendeaza pe (7.75, 11.7) startDist 4.964876634922564
Before swap start end (7.75, 11.7) (12.65, 10.9) 1 6
After swap start end (12.65, 10.9) (7.75, 11.7) 1 6
p1 = (12.65, 10.9)
startIdx = 2 obj (7.55, 12.35)
endIdx = 5 obj (12.95, 10.55)
startDIST = 5.302122216622322 obj (7.55, 12.35)
endDIST = 0.4609772228646434 obj (12.95, 10.55)
Pentru (12.95, 10.55) endDist este 0.4609772228646434 iar r-eps este 0.3600000000000003
endDist Il apendeaza pe (12.95, 10.55) endDist 0.4609772228646434
startDist Il apendeaza pe (7.55, 12.35) startDist 5.302122216622322
Before swap start end (7.55, 12.35) (12.95, 10.55) 2 5
After swap start end (12.95, 10.55) (7.55, 12.35) 2 5
p1 = (12.65, 10.9)
startIdx = 3 obj (12.2, 11.75)
endIdx = 4 obj (13.25, 10.1)
startDIST = 0.9617692030835674 obj (12.2, 11.75)
endDIST = 1.0000000000000002 obj (13.25, 10.1)
AL DOILEA WHILE startIdx = 3 obj (12.2, 11.75) start 0.9617692030835674
startDist Il apendeaza pe (12.2, 11.75) endDist 0.9617692030835674
sunt egale 4 4
========================= WIN L ===================
[(12.35, 11.4), (12.95, 10.55), (12.2, 11.75), (13.25, 10.1)]
========================= WIN L END ===================
========================= WIN G ===================
[(7.95, 10.95), (7.75, 11.7), (7.55, 12.35)]
========================= WIN G END ===================
========================= OBJS first half ===================
[(12.35, 11.4), (12.65, 10.9), (12.95, 10.55), (12.2, 11.75)]
========================= OBJS first half END ===================
========================= OBJS last half ===================
[(13.25, 10.1), (7.55, 12.35), (7.75, 11.7), (7.95, 10.95)]
========================= OBJS last half END ===================
p1 = (12.65, 10.9) len objs = 7
r is 2.03
new r is 2.03
p1 = (12.65, 10.9)
startIdx = 0 obj (8.9, 9.05)
endIdx = 6 obj (9.7, 7.85)
startDIST = 4.181506905411014 obj (8.9, 9.05)
endDIST = 4.243229901855426 obj (9.7, 7.85)
PRIMUL WHILE endIdx = 6 obj (9.7, 7.85) endDist 4.243229901855426
endDist Il apendeaza pe (9.7, 7.85) endDist 4.243229901855426
PRIMUL WHILE endIdx = 5 obj (10.3, 7.25) endDist 4.341082814229648
endDist Il apendeaza pe (10.3, 7.25) endDist 4.341082814229648
PRIMUL WHILE endIdx = 4 obj (10.9, 6.65) endDist 4.596194077712559
endDist Il apendeaza pe (10.9, 6.65) endDist 4.596194077712559
PRIMUL WHILE endIdx = 3 obj (9.35, 8.35) endDist 4.170431632337354
endDist Il apendeaza pe (9.35, 8.35) endDist 4.170431632337354
PRIMUL WHILE endIdx = 2 obj (8.15, 10.35) endDist 4.533486517019766
endDist Il apendeaza pe (8.15, 10.35) endDist 4.533486517019766
PRIMUL WHILE endIdx = 1 obj (8.55, 9.65) endDist 4.286315434029558
endDist Il apendeaza pe (8.55, 9.65) endDist 4.286315434029558
sunt egale 0 0
========================= WIN L ===================
[]
========================= WIN L END ===================
========================= WIN G ===================
[(9.7, 7.85), (10.3, 7.25), (10.9, 6.65), (9.35, 8.35), (8.15, 10.35), (8.55, 9.65), (8.9, 9.05)]
========================= WIN G END ===================
========================= OBJS first half ===================
[(8.9, 9.05), (8.55, 9.65), (8.15, 10.35), (9.35, 8.35), (10.9, 6.65), (10.3, 7.25)]
========================= OBJS first half END ===================
========================= OBJS last half ===================
[(9.7, 7.85)]
========================= OBJS last half END ===================
nested loop vine din 
nested loop objs1, objs2 [(12.35, 11.4), (12.95, 10.55), (12.2, 11.75), (13.25, 10.1)][(9.7, 7.85), (10.3, 7.25), (10.9, 6.65), (9.35, 8.35), (8.15, 10.35), (8.55, 9.65), (8.9, 9.05)]
nested loop vine din 
nested loop objs1, objs2 [(7.95, 10.95), (7.75, 11.7), (7.55, 12.35)][]
nested loop vine din 
nested loop objs1, objs2 [(12.35, 11.4), (12.65, 10.9), (12.95, 10.55), (12.2, 11.75), (13.25, 10.1)][]
nested loop vine din 
nested loop objs1, objs2 [(7.55, 12.35), (7.75, 11.7), (7.95, 10.95)][(8.9, 9.05), (8.55, 9.65), (8.15, 10.35), (9.35, 8.35), (10.9, 6.65), (10.3, 7.25), (9.7, 7.85)]
Intra in win
win len(objs), len(objs1), len(objs2), constSmallNumber 15 | [(7.35, 15.75), (11.95, 12.2), (12.15, 17.2), (8.05, 18.15), (7.35, 14.95), (7.3, 14.35), (7.35, 13.75), (7.45, 13.0), (7.55, 16.35), (7.7, 16.95), (7.8, 17.55)] | [(13.6, 9.65), (13.95, 9.3), (14.45, 8.9), (14.9, 8.7)] | 10
p1 = (7.55, 16.35) len objs = 11
r is 3.29
new r is 3.29
p1 = (7.55, 16.35)
startIdx = 0 obj (7.35, 15.75)
endIdx = 10 obj (7.8, 17.55)
startDIST = 0.6324555320336773 obj (7.35, 15.75)
endDIST = 1.2257650672131257 obj (7.8, 17.55)
AL DOILEA WHILE startIdx = 0 obj (7.35, 15.75) start 0.6324555320336773
startDist Il apendeaza pe (7.35, 15.75) endDist 0.6324555320336773
Pentru (7.8, 17.55) endDist este 1.2257650672131257 iar r-eps este 0.4900000000000002
endDist Il apendeaza pe (7.8, 17.55) endDist 1.2257650672131257
startDist Il apendeaza pe (11.95, 12.2) startDist 6.048346881586737
Before swap start end (11.95, 12.2) (7.8, 17.55) 1 10
After swap start end (7.8, 17.55) (11.95, 12.2) 1 10
p1 = (7.55, 16.35)
startIdx = 2 obj (12.15, 17.2)
endIdx = 9 obj (7.7, 16.95)
startDIST = 4.677873448480623 obj (12.15, 17.2)
endDIST = 0.6184658438426471 obj (7.7, 16.95)
Pentru (7.7, 16.95) endDist este 0.6184658438426471 iar r-eps este 0.4900000000000002
endDist Il apendeaza pe (7.7, 16.95) endDist 0.6184658438426471
startDist Il apendeaza pe (12.15, 17.2) startDist 4.677873448480623
Before swap start end (12.15, 17.2) (7.7, 16.95) 2 9
After swap start end (7.7, 16.95) (12.15, 17.2) 2 9
p1 = (7.55, 16.35)
startIdx = 3 obj (8.05, 18.15)
endIdx = 8 obj (7.55, 16.35)
startDIST = 1.8681541692269379 obj (8.05, 18.15)
endDIST = 0.0 obj (7.55, 16.35)
AL DOILEA WHILE startIdx = 3 obj (8.05, 18.15) start 1.8681541692269379
startDist Il apendeaza pe (8.05, 18.15) endDist 1.8681541692269379
AL DOILEA WHILE startIdx = 4 obj (7.35, 14.95) start 1.4142135623730971
startDist Il apendeaza pe (7.35, 14.95) endDist 1.4142135623730971
AL DOILEA WHILE startIdx = 5 obj (7.3, 14.35) start 2.015564437074639
startDist Il apendeaza pe (7.3, 14.35) endDist 2.015564437074639
AL DOILEA WHILE startIdx = 6 obj (7.35, 13.75) start 2.607680962081061
startDist Il apendeaza pe (7.35, 13.75) endDist 2.607680962081061
Pentru (7.55, 16.35) endDist este 0.0 iar r-eps este 0.4900000000000002
startDist Il apendeaza pe (7.45, 13.0) startDist 3.3514922049737796
Before swap start end (7.45, 13.0) (7.55, 16.35) 7 8
After swap start end (7.55, 16.35) (7.45, 13.0) 7 8
========================= WIN L ===================
[(7.35, 15.75), (7.8, 17.55), (7.7, 16.95), (8.05, 18.15), (7.35, 14.95), (7.3, 14.35), (7.35, 13.75)]
========================= WIN L END ===================
========================= WIN G ===================
[(11.95, 12.2), (12.15, 17.2), (7.45, 13.0)]
========================= WIN G END ===================
========================= OBJS first half ===================
[(7.35, 15.75), (7.8, 17.55), (7.7, 16.95), (8.05, 18.15), (7.35, 14.95), (7.3, 14.35), (7.35, 13.75)]
========================= OBJS first half END ===================
========================= OBJS last half ===================
[(7.55, 16.35), (7.45, 13.0), (12.15, 17.2), (11.95, 12.2)]
========================= OBJS last half END ===================
p1 = (7.55, 16.35) len objs = 4
r is 0.92
new r is 0.92
p1 = (7.55, 16.35)
startIdx = 0 obj (13.6, 9.65)
endIdx = 3 obj (14.9, 8.7)
startDIST = 9.027319646495298 obj (13.6, 9.65)
endDIST = 10.608722826052157 obj (14.9, 8.7)
PRIMUL WHILE endIdx = 3 obj (14.9, 8.7) endDist 10.608722826052157
PRIMUL WHILE endIdx = 2 obj (14.45, 8.9) endDist 10.154432529688698
PRIMUL WHILE endIdx = 1 obj (13.95, 9.3) endDist 9.521685775113564
sunt egale 0 0
========================= WIN L ===================
[]
========================= WIN L END ===================
========================= WIN G ===================
[]
========================= WIN G END ===================
========================= OBJS first half ===================
[(13.6, 9.65), (13.95, 9.3), (14.45, 8.9)]
========================= OBJS first half END ===================
========================= OBJS last half ===================
[(14.9, 8.7)]
========================= OBJS last half END ===================
nested loop vine din 
nested loop objs1, objs2 [(7.35, 15.75), (7.8, 17.55), (7.7, 16.95), (8.05, 18.15), (7.35, 14.95), (7.3, 14.35), (7.35, 13.75)][]
nested loop vine din 
nested loop objs1, objs2 [(11.95, 12.2), (12.15, 17.2), (7.45, 13.0)][]
nested loop vine din 
nested loop objs1, objs2 [(7.35, 15.75), (7.8, 17.55), (7.7, 16.95), (8.05, 18.15), (7.35, 14.95), (7.3, 14.35), (7.35, 13.75), (7.55, 16.35)][]
nested loop vine din 
nested loop objs1, objs2 [(7.45, 13.0), (12.15, 17.2), (11.95, 12.2)][(13.6, 9.65), (13.95, 9.3), (14.45, 8.9), (14.9, 8.7)]
quick len(objs), constSmallNumber 30 10
p1 = (11.8, 12.65) len objs = 30
r is 4.08
new r is 4.08
p1 = (11.8, 12.65)
startIdx = 0 obj (7.8, 17.55)
endIdx = 29 obj (7.95, 10.95)
startDIST = 6.325345840347389 obj (7.8, 17.55)
endDIST = 4.208622102303794 obj (7.95, 10.95)
PRIMUL WHILE endIdx = 29 obj (7.95, 10.95) endDist 4.208622102303794
endDist Il apendeaza pe (7.95, 10.95) endDist 4.208622102303794
PRIMUL WHILE endIdx = 28 obj (7.75, 11.7) endDist 4.159927883990299
endDist Il apendeaza pe (7.75, 11.7) endDist 4.159927883990299
PRIMUL WHILE endIdx = 27 obj (7.55, 12.35) endDist 4.260575078554538
endDist Il apendeaza pe (7.55, 12.35) endDist 4.260575078554538
PRIMUL WHILE endIdx = 26 obj (7.45, 13.0) endDist 4.3640577448058595
endDist Il apendeaza pe (7.45, 13.0) endDist 4.3640577448058595
PRIMUL WHILE endIdx = 25 obj (7.35, 13.75) endDist 4.58393935387457
endDist Il apendeaza pe (7.35, 13.75) endDist 4.58393935387457
PRIMUL WHILE endIdx = 24 obj (7.3, 14.35) endDist 4.810405388322278
endDist Il apendeaza pe (7.3, 14.35) endDist 4.810405388322278
PRIMUL WHILE endIdx = 23 obj (7.35, 14.95) endDist 5.009241459542553
endDist Il apendeaza pe (7.35, 14.95) endDist 5.009241459542553
PRIMUL WHILE endIdx = 22 obj (8.05, 18.15) endDist 6.656763477847172
endDist Il apendeaza pe (8.05, 18.15) endDist 6.656763477847172
Pentru (11.6, 15.25) endDist este 2.607680962081059 iar r-eps este 1.2800000000000002
endDist Il apendeaza pe (11.6, 15.25) endDist 2.607680962081059
startDist Il apendeaza pe (7.8, 17.55) startDist 6.325345840347389
Before swap start end (7.8, 17.55) (11.6, 15.25) 0 21
After swap start end (11.6, 15.25) (7.8, 17.55) 0 21
p1 = (11.8, 12.65)
startIdx = 1 obj (7.7, 16.95)
endIdx = 20 obj (11.65, 15.7)
startDIST = 5.941380311005179 obj (7.7, 16.95)
endDIST = 3.053686296920493 obj (11.65, 15.7)
Pentru (11.65, 15.7) endDist este 3.053686296920493 iar r-eps este 1.2800000000000002
endDist Il apendeaza pe (11.65, 15.7) endDist 3.053686296920493
startDist Il apendeaza pe (7.7, 16.95) startDist 5.941380311005179
Before swap start end (7.7, 16.95) (11.65, 15.7) 1 20
After swap start end (11.65, 15.7) (7.7, 16.95) 1 20
p1 = (11.8, 12.65)
startIdx = 2 obj (7.55, 16.35)
endIdx = 19 obj (11.8, 16.05)
startDIST = 5.634935669552938 obj (7.55, 16.35)
endDIST = 3.4000000000000004 obj (11.8, 16.05)
Pentru (11.8, 16.05) endDist este 3.4000000000000004 iar r-eps este 1.2800000000000002
endDist Il apendeaza pe (11.8, 16.05) endDist 3.4000000000000004
startDist Il apendeaza pe (7.55, 16.35) startDist 5.634935669552938
Before swap start end (7.55, 16.35) (11.8, 16.05) 2 19
After swap start end (11.8, 16.05) (7.55, 16.35) 2 19
p1 = (11.8, 12.65)
startIdx = 3 obj (7.35, 15.75)
endIdx = 18 obj (11.85, 16.5)
startDIST = 5.423329235810787 obj (7.35, 15.75)
endDIST = 3.8503246616356908 obj (11.85, 16.5)
Pentru (11.85, 16.5) endDist este 3.8503246616356908 iar r-eps este 1.2800000000000002
endDist Il apendeaza pe (11.85, 16.5) endDist 3.8503246616356908
startDist Il apendeaza pe (7.35, 15.75) startDist 5.423329235810787
Before swap start end (7.35, 15.75) (11.85, 16.5) 3 18
After swap start end (11.85, 16.5) (7.35, 15.75) 3 18
p1 = (11.8, 12.65)
startIdx = 4 obj (13.25, 10.1)
endIdx = 17 obj (12.0, 16.75)
startDIST = 2.933428028774526 obj (13.25, 10.1)
endDIST = 4.104875150354758 obj (12.0, 16.75)
PRIMUL WHILE endIdx = 17 obj (12.0, 16.75) endDist 4.104875150354758
endDist Il apendeaza pe (12.0, 16.75) endDist 4.104875150354758
PRIMUL WHILE endIdx = 16 obj (12.15, 17.2) endDist 4.5634416836418525
endDist Il apendeaza pe (12.15, 17.2) endDist 4.5634416836418525
AL DOILEA WHILE startIdx = 4 obj (13.25, 10.1) start 2.933428028774526
startDist Il apendeaza pe (13.25, 10.1) endDist 2.933428028774526
AL DOILEA WHILE startIdx = 5 obj (12.95, 10.55) start 2.3942639787625746
startDist Il apendeaza pe (12.95, 10.55) endDist 2.3942639787625746
AL DOILEA WHILE startIdx = 6 obj (12.65, 10.9) start 1.9455076458343719
startDist Il apendeaza pe (12.65, 10.9) endDist 1.9455076458343719
AL DOILEA WHILE startIdx = 7 obj (12.35, 11.4) start 1.365650028374766
startDist Il apendeaza pe (12.35, 11.4) endDist 1.365650028374766
AL DOILEA WHILE startIdx = 8 obj (12.2, 11.75) start 0.9848857801796103
AL DOILEA WHILE startIdx = 9 obj (11.95, 12.2) start 0.47434164902525744
AL DOILEA WHILE startIdx = 10 obj (11.8, 12.65) start 0.0
AL DOILEA WHILE startIdx = 11 obj (11.75, 13.05) start 0.4031128874149279
AL DOILEA WHILE startIdx = 12 obj (11.55, 13.6) start 0.9823441352194243
AL DOILEA WHILE startIdx = 13 obj (11.55, 14.0) start 1.3729530217745978
startDist Il apendeaza pe (11.55, 14.0) endDist 1.3729530217745978
AL DOILEA WHILE startIdx = 14 obj (11.55, 14.35) start 1.7182840277439575
startDist Il apendeaza pe (11.55, 14.35) endDist 1.7182840277439575
sunt egale 15 15
========================= WIN L ===================
[(11.6, 15.25), (11.65, 15.7), (11.8, 16.05), (11.85, 16.5), (13.25, 10.1), (12.95, 10.55), (12.65, 10.9), (12.35, 11.4), (11.55, 14.0), (11.55, 14.35), (11.55, 14.7)]
========================= WIN L END ===================
========================= WIN G ===================
[(7.95, 10.95), (7.75, 11.7), (7.55, 12.35), (7.45, 13.0), (7.35, 13.75), (7.3, 14.35), (7.35, 14.95), (8.05, 18.15), (7.8, 17.55), (7.7, 16.95), (7.55, 16.35), (7.35, 15.75), (12.0, 16.75), (12.15, 17.2)]
========================= WIN G END ===================
========================= OBJS first half ===================
[(11.6, 15.25), (11.65, 15.7), (11.8, 16.05), (11.85, 16.5), (13.25, 10.1), (12.95, 10.55), (12.65, 10.9), (12.35, 11.4), (12.2, 11.75), (11.95, 12.2), (11.8, 12.65), (11.75, 13.05), (11.55, 13.6), (11.55, 14.0), (11.55, 14.35)]
========================= OBJS first half END ===================
========================= OBJS last half ===================
[(11.55, 14.7), (12.15, 17.2), (12.0, 16.75), (7.35, 15.75), (7.55, 16.35), (7.7, 16.95), (7.8, 17.55), (8.05, 18.15), (7.35, 14.95), (7.3, 14.35), (7.35, 13.75), (7.45, 13.0), (7.55, 12.35), (7.75, 11.7), (7.95, 10.95)]
========================= OBJS last half END ===================
Intra in win
win len(objs), len(objs1), len(objs2), constSmallNumber 25 | [(11.6, 15.25), (11.65, 15.7), (11.8, 16.05), (11.85, 16.5), (13.25, 10.1), (12.95, 10.55), (12.65, 10.9), (12.35, 11.4), (11.55, 14.0), (11.55, 14.35), (11.55, 14.7)] | [(7.95, 10.95), (7.75, 11.7), (7.55, 12.35), (7.45, 13.0), (7.35, 13.75), (7.3, 14.35), (7.35, 14.95), (8.05, 18.15), (7.8, 17.55), (7.7, 16.95), (7.55, 16.35), (7.35, 15.75), (12.0, 16.75), (12.15, 17.2)] | 10
p1 = (12.95, 10.55) len objs = 11
r is 2.9
new r is 2.9
p1 = (12.95, 10.55)
startIdx = 0 obj (11.6, 15.25)
endIdx = 10 obj (11.55, 14.7)
startDIST = 4.890040899624459 obj (11.6, 15.25)
endDIST = 4.379783099652309 obj (11.55, 14.7)
PRIMUL WHILE endIdx = 10 obj (11.55, 14.7) endDist 4.379783099652309
endDist Il apendeaza pe (11.55, 14.7) endDist 4.379783099652309
PRIMUL WHILE endIdx = 9 obj (11.55, 14.35) endDist 4.049691346263316
endDist Il apendeaza pe (11.55, 14.35) endDist 4.049691346263316
PRIMUL WHILE endIdx = 8 obj (11.55, 14.0) endDist 3.7232378382262916
endDist Il apendeaza pe (11.55, 14.0) endDist 3.7232378382262916
Pentru (12.35, 11.4) endDist este 1.04043260233424 iar r-eps este 0.10000000000000009
endDist Il apendeaza pe (12.35, 11.4) endDist 1.04043260233424
startDist Il apendeaza pe (11.6, 15.25) startDist 4.890040899624459
Before swap start end (11.6, 15.25) (12.35, 11.4) 0 7
After swap start end (12.35, 11.4) (11.6, 15.25) 0 7
p1 = (12.95, 10.55)
startIdx = 1 obj (11.65, 15.7)
endIdx = 6 obj (12.65, 10.9)
startDIST = 5.311544031635244 obj (11.65, 15.7)
endDIST = 0.4609772228646434 obj (12.65, 10.9)
Pentru (12.65, 10.9) endDist este 0.4609772228646434 iar r-eps este 0.10000000000000009
endDist Il apendeaza pe (12.65, 10.9) endDist 0.4609772228646434
startDist Il apendeaza pe (11.65, 15.7) startDist 5.311544031635244
Before swap start end (11.65, 15.7) (12.65, 10.9) 1 6
After swap start end (12.65, 10.9) (11.65, 15.7) 1 6
p1 = (12.95, 10.55)
startIdx = 2 obj (11.8, 16.05)
endIdx = 5 obj (12.95, 10.55)
startDIST = 5.618941181397079 obj (11.8, 16.05)
endDIST = 0.0 obj (12.95, 10.55)
Pentru (12.95, 10.55) endDist este 0.0 iar r-eps este 0.10000000000000009
startDist Il apendeaza pe (11.8, 16.05) startDist 5.618941181397079
Before swap start end (11.8, 16.05) (12.95, 10.55) 2 5
After swap start end (12.95, 10.55) (11.8, 16.05) 2 5
p1 = (12.95, 10.55)
startIdx = 3 obj (11.85, 16.5)
endIdx = 4 obj (13.25, 10.1)
startDIST = 6.0508263898413075 obj (11.85, 16.5)
endDIST = 0.5408326913195997 obj (13.25, 10.1)
Pentru (13.25, 10.1) endDist este 0.5408326913195997 iar r-eps este 0.10000000000000009
endDist Il apendeaza pe (13.25, 10.1) endDist 0.5408326913195997
Before swap start end (11.85, 16.5) (13.25, 10.1) 3 4
After swap start end (13.25, 10.1) (11.85, 16.5) 3 4
========================= WIN L ===================
[(12.35, 11.4), (12.65, 10.9), (13.25, 10.1)]
========================= WIN L END ===================
========================= WIN G ===================
[(11.55, 14.7), (11.55, 14.35), (11.55, 14.0), (11.6, 15.25), (11.65, 15.7), (11.8, 16.05)]
========================= WIN G END ===================
========================= OBJS first half ===================
[(12.35, 11.4), (12.65, 10.9), (12.95, 10.55)]
========================= OBJS first half END ===================
========================= OBJS last half ===================
[(13.25, 10.1), (11.85, 16.5), (11.8, 16.05), (11.65, 15.7), (11.6, 15.25), (11.55, 14.0), (11.55, 14.35), (11.55, 14.7)]
========================= OBJS last half END ===================
p1 = (12.95, 10.55) len objs = 14
r is 3.52
new r is 3.52
p1 = (12.95, 10.55)
startIdx = 0 obj (7.95, 10.95)
endIdx = 13 obj (12.15, 17.2)
startDIST = 5.01597448159378 obj (7.95, 10.95)
endDIST = 6.697947446792934 obj (12.15, 17.2)
PRIMUL WHILE endIdx = 13 obj (12.15, 17.2) endDist 6.697947446792934
PRIMUL WHILE endIdx = 12 obj (12.0, 16.75) endDist 6.272360002423329
endDist Il apendeaza pe (12.0, 16.75) endDist 6.272360002423329
PRIMUL WHILE endIdx = 11 obj (7.35, 15.75) endDist 7.6419892698171195
PRIMUL WHILE endIdx = 10 obj (7.55, 16.35) endDist 7.92464510246358
PRIMUL WHILE endIdx = 9 obj (7.7, 16.95) endDist 8.27783184173247
PRIMUL WHILE endIdx = 8 obj (7.8, 17.55) endDist 8.690368231553828
PRIMUL WHILE endIdx = 7 obj (8.05, 18.15) endDist 9.042676594902638
PRIMUL WHILE endIdx = 6 obj (7.35, 14.95) endDist 7.121797525905941
PRIMUL WHILE endIdx = 5 obj (7.3, 14.35) endDist 6.809001395212075
PRIMUL WHILE endIdx = 4 obj (7.35, 13.75) endDist 6.449806198638839
PRIMUL WHILE endIdx = 3 obj (7.45, 13.0) endDist 6.021004899516358
endDist Il apendeaza pe (7.45, 13.0) endDist 6.021004899516358
PRIMUL WHILE endIdx = 2 obj (7.55, 12.35) endDist 5.692099788303082
endDist Il apendeaza pe (7.55, 12.35) endDist 5.692099788303082
PRIMUL WHILE endIdx = 1 obj (7.75, 11.7) endDist 5.3256455007820405
endDist Il apendeaza pe (7.75, 11.7) endDist 5.3256455007820405
sunt egale 0 0
========================= WIN L ===================
[]
========================= WIN L END ===================
========================= WIN G ===================
[(12.0, 16.75), (7.45, 13.0), (7.55, 12.35), (7.75, 11.7), (7.95, 10.95)]
========================= WIN G END ===================
========================= OBJS first half ===================
[(7.95, 10.95), (7.75, 11.7), (7.55, 12.35), (7.45, 13.0), (7.35, 13.75), (7.3, 14.35), (7.35, 14.95), (8.05, 18.15), (7.8, 17.55), (7.7, 16.95), (7.55, 16.35), (7.35, 15.75), (12.0, 16.75)]
========================= OBJS first half END ===================
========================= OBJS last half ===================
[(12.15, 17.2)]
========================= OBJS last half END ===================
nested loop vine din 
nested loop objs1, objs2 [(12.35, 11.4), (12.65, 10.9), (13.25, 10.1)][(12.0, 16.75), (7.45, 13.0), (7.55, 12.35), (7.75, 11.7), (7.95, 10.95)]
nested loop vine din 
nested loop objs1, objs2 [(11.55, 14.7), (11.55, 14.35), (11.55, 14.0), (11.6, 15.25), (11.65, 15.7), (11.8, 16.05)][]
nested loop vine din 
nested loop objs1, objs2 [(12.35, 11.4), (12.65, 10.9), (12.95, 10.55), (13.25, 10.1)][]
nested loop vine din 
nested loop objs1, objs2 [(11.85, 16.5), (11.8, 16.05), (11.65, 15.7), (11.6, 15.25), (11.55, 14.0), (11.55, 14.35), (11.55, 14.7)][(7.95, 10.95), (7.75, 11.7), (7.55, 12.35), (7.45, 13.0), (7.35, 13.75), (7.3, 14.35), (7.35, 14.95), (8.05, 18.15), (7.8, 17.55), (7.7, 16.95), (7.55, 16.35), (7.35, 15.75), (12.0, 16.75), (12.15, 17.2)]
quick len(objs), constSmallNumber 16 10
p1 = (12.35, 11.4) len objs = 16
r is 2.52
new r is 2.52
p1 = (12.35, 11.4)
startIdx = 0 obj (11.6, 15.25)
endIdx = 15 obj (11.55, 14.7)
startDIST = 3.922371731491037 obj (11.6, 15.25)
endDIST = 3.395585369269928 obj (11.55, 14.7)
PRIMUL WHILE endIdx = 15 obj (11.55, 14.7) endDist 3.395585369269928
endDist Il apendeaza pe (11.55, 14.7) endDist 3.395585369269928
PRIMUL WHILE endIdx = 14 obj (11.55, 14.35) endDist 3.056550343115584
endDist Il apendeaza pe (11.55, 14.35) endDist 3.056550343115584
PRIMUL WHILE endIdx = 13 obj (11.55, 14.0) endDist 2.720294101747088
endDist Il apendeaza pe (11.55, 14.0) endDist 2.720294101747088
Pentru (11.55, 13.6) endDist este 2.340939982143924 iar r-eps este -0.2799999999999998
endDist Il apendeaza pe (11.55, 13.6) endDist 2.340939982143924
startDist Il apendeaza pe (11.6, 15.25) startDist 3.922371731491037
Before swap start end (11.6, 15.25) (11.55, 13.6) 0 12
After swap start end (11.55, 13.6) (11.6, 15.25) 0 12
p1 = (12.35, 11.4)
startIdx = 1 obj (11.65, 15.7)
endIdx = 11 obj (11.75, 13.05)
startDIST = 4.356604182158391 obj (11.65, 15.7)
endDIST = 1.755704986607944 obj (11.75, 13.05)
Pentru (11.75, 13.05) endDist este 1.755704986607944 iar r-eps este -0.2799999999999998
endDist Il apendeaza pe (11.75, 13.05) endDist 1.755704986607944
startDist Il apendeaza pe (11.65, 15.7) startDist 4.356604182158391
Before swap start end (11.65, 15.7) (11.75, 13.05) 1 11
After swap start end (11.75, 13.05) (11.65, 15.7) 1 11
p1 = (12.35, 11.4)
startIdx = 2 obj (11.8, 16.05)
endIdx = 10 obj (11.8, 12.65)
startDIST = 4.682413907377263 obj (11.8, 16.05)
endDIST = 1.365650028374766 obj (11.8, 12.65)
Pentru (11.8, 12.65) endDist este 1.365650028374766 iar r-eps este -0.2799999999999998
endDist Il apendeaza pe (11.8, 12.65) endDist 1.365650028374766
startDist Il apendeaza pe (11.8, 16.05) startDist 4.682413907377263
Before swap start end (11.8, 16.05) (11.8, 12.65) 2 10
After swap start end (11.8, 12.65) (11.8, 16.05) 2 10
p1 = (12.35, 11.4)
startIdx = 3 obj (11.85, 16.5)
endIdx = 9 obj (11.95, 12.2)
startDIST = 5.124451190127583 obj (11.85, 16.5)
endDIST = 0.8944271909999151 obj (11.95, 12.2)
Pentru (11.95, 12.2) endDist este 0.8944271909999151 iar r-eps este -0.2799999999999998
endDist Il apendeaza pe (11.95, 12.2) endDist 0.8944271909999151
startDist Il apendeaza pe (11.85, 16.5) startDist 5.124451190127583
Before swap start end (11.85, 16.5) (11.95, 12.2) 3 9
After swap start end (11.95, 12.2) (11.85, 16.5) 3 9
p1 = (12.35, 11.4)
startIdx = 4 obj (13.25, 10.1)
endIdx = 8 obj (12.2, 11.75)
startDIST = 1.5811388300841904 obj (13.25, 10.1)
endDIST = 0.3807886552931952 obj (12.2, 11.75)
AL DOILEA WHILE startIdx = 4 obj (13.25, 10.1) start 1.5811388300841904
startDist Il apendeaza pe (13.25, 10.1) endDist 1.5811388300841904
AL DOILEA WHILE startIdx = 5 obj (12.95, 10.55) start 1.04043260233424
startDist Il apendeaza pe (12.95, 10.55) endDist 1.04043260233424
AL DOILEA WHILE startIdx = 6 obj (12.65, 10.9) start 0.5830951894845304
startDist Il apendeaza pe (12.65, 10.9) endDist 0.5830951894845304
AL DOILEA WHILE startIdx = 7 obj (12.35, 11.4) start 0.0
startDist Il apendeaza pe (12.35, 11.4) endDist 0.0
sunt egale 8 8
========================= WIN L ===================
[(11.55, 13.6), (11.75, 13.05), (11.8, 12.65), (11.95, 12.2), (13.25, 10.1), (12.95, 10.55), (12.65, 10.9), (12.35, 11.4), (12.2, 11.75)]
========================= WIN L END ===================
========================= WIN G ===================
[(11.55, 14.7), (11.55, 14.35), (11.55, 14.0), (11.6, 15.25), (11.65, 15.7), (11.8, 16.05), (11.85, 16.5)]
========================= WIN G END ===================
========================= OBJS first half ===================
[(11.55, 13.6), (11.75, 13.05), (11.8, 12.65), (11.95, 12.2), (13.25, 10.1), (12.95, 10.55), (12.65, 10.9), (12.35, 11.4)]
========================= OBJS first half END ===================
========================= OBJS last half ===================
[(12.2, 11.75), (11.85, 16.5), (11.8, 16.05), (11.65, 15.7), (11.6, 15.25), (11.55, 14.0), (11.55, 14.35), (11.55, 14.7)]
========================= OBJS last half END ===================
Intra in win
win len(objs), len(objs1), len(objs2), constSmallNumber 16 | [(11.55, 13.6), (11.75, 13.05), (11.8, 12.65), (11.95, 12.2), (13.25, 10.1), (12.95, 10.55), (12.65, 10.9), (12.35, 11.4), (12.2, 11.75)] | [(11.55, 14.7), (11.55, 14.35), (11.55, 14.0), (11.6, 15.25), (11.65, 15.7), (11.8, 16.05), (11.85, 16.5)] | 10
p1 = (11.65, 15.7) len objs = 9
r is 1.6
new r is 1.6
p1 = (11.65, 15.7)
startIdx = 0 obj (11.55, 13.6)
endIdx = 8 obj (12.2, 11.75)
startDIST = 2.1023796041628633 obj (11.55, 13.6)
endDIST = 3.988107320521853 obj (12.2, 11.75)
PRIMUL WHILE endIdx = 8 obj (12.2, 11.75) endDist 3.988107320521853
endDist Il apendeaza pe (12.2, 11.75) endDist 3.988107320521853
PRIMUL WHILE endIdx = 7 obj (12.35, 11.4) endDist 4.356604182158391
endDist Il apendeaza pe (12.35, 11.4) endDist 4.356604182158391
PRIMUL WHILE endIdx = 6 obj (12.65, 10.9) endDist 4.903060268852504
PRIMUL WHILE endIdx = 5 obj (12.95, 10.55) endDist 5.311544031635244
PRIMUL WHILE endIdx = 4 obj (13.25, 10.1) endDist 5.824087911424414
PRIMUL WHILE endIdx = 3 obj (11.95, 12.2) endDist 3.5128336140500593
endDist Il apendeaza pe (11.95, 12.2) endDist 3.5128336140500593
PRIMUL WHILE endIdx = 2 obj (11.8, 12.65) endDist 3.053686296920493
endDist Il apendeaza pe (11.8, 12.65) endDist 3.053686296920493
PRIMUL WHILE endIdx = 1 obj (11.75, 13.05) endDist 2.6518861212352225
endDist Il apendeaza pe (11.75, 13.05) endDist 2.6518861212352225
sunt egale 0 0
========================= WIN L ===================
[]
========================= WIN L END ===================
========================= WIN G ===================
[(12.2, 11.75), (12.35, 11.4), (11.95, 12.2), (11.8, 12.65), (11.75, 13.05), (11.55, 13.6)]
========================= WIN G END ===================
========================= OBJS first half ===================
[(11.55, 13.6), (11.75, 13.05), (11.8, 12.65), (11.95, 12.2), (13.25, 10.1), (12.95, 10.55), (12.65, 10.9), (12.35, 11.4)]
========================= OBJS first half END ===================
========================= OBJS last half ===================
[(12.2, 11.75)]
========================= OBJS last half END ===================
p1 = (11.65, 15.7) len objs = 7
r is 1.15
new r is 1.15
p1 = (11.65, 15.7)
startIdx = 0 obj (11.55, 14.7)
endIdx = 6 obj (11.85, 16.5)
startDIST = 1.004987562112089 obj (11.55, 14.7)
endDIST = 0.8246211251235326 obj (11.85, 16.5)
AL DOILEA WHILE startIdx = 0 obj (11.55, 14.7) start 1.004987562112089
startDist Il apendeaza pe (11.55, 14.7) endDist 1.004987562112089
Pentru (11.85, 16.5) endDist este 0.8246211251235326 iar r-eps este -1.65
endDist Il apendeaza pe (11.85, 16.5) endDist 0.8246211251235326
startDist Il apendeaza pe (11.55, 14.35) startDist 1.3536986370680881
Before swap start end (11.55, 14.35) (11.85, 16.5) 1 6
After swap start end (11.85, 16.5) (11.55, 14.35) 1 6
p1 = (11.65, 15.7)
startIdx = 2 obj (11.55, 14.0)
endIdx = 5 obj (11.8, 16.05)
startDIST = 1.7029386365926393 obj (11.55, 14.0)
endDIST = 0.38078865529319683 obj (11.8, 16.05)
Pentru (11.8, 16.05) endDist este 0.38078865529319683 iar r-eps este -1.65
endDist Il apendeaza pe (11.8, 16.05) endDist 0.38078865529319683
startDist Il apendeaza pe (11.55, 14.0) startDist 1.7029386365926393
Before swap start end (11.55, 14.0) (11.8, 16.05) 2 5
After swap start end (11.8, 16.05) (11.55, 14.0) 2 5
p1 = (11.65, 15.7)
startIdx = 3 obj (11.6, 15.25)
endIdx = 4 obj (11.65, 15.7)
startDIST = 0.4527692569068702 obj (11.6, 15.25)
endDIST = 0.0 obj (11.65, 15.7)
AL DOILEA WHILE startIdx = 3 obj (11.6, 15.25) start 0.4527692569068702
startDist Il apendeaza pe (11.6, 15.25) endDist 0.4527692569068702
sunt egale 4 4
========================= WIN L ===================
[(11.55, 14.7), (11.85, 16.5), (11.8, 16.05), (11.6, 15.25), (11.65, 15.7)]
========================= WIN L END ===================
========================= WIN G ===================
[(11.55, 14.35), (11.55, 14.0)]
========================= WIN G END ===================
========================= OBJS first half ===================
[(11.55, 14.7), (11.85, 16.5), (11.8, 16.05), (11.6, 15.25)]
========================= OBJS first half END ===================
========================= OBJS last half ===================
[(11.65, 15.7), (11.55, 14.0), (11.55, 14.35)]
========================= OBJS last half END ===================
nested loop vine din 
nested loop objs1, objs2 [][(11.55, 14.35), (11.55, 14.0)]
nested loop vine din 
nested loop objs1, objs2 [(12.2, 11.75), (12.35, 11.4), (11.95, 12.2), (11.8, 12.65), (11.75, 13.05), (11.55, 13.6)][(11.55, 14.7), (11.85, 16.5), (11.8, 16.05), (11.6, 15.25), (11.65, 15.7)]
nested loop vine din 
nested loop objs1, objs2 [][(11.55, 14.7), (11.85, 16.5), (11.8, 16.05), (11.6, 15.25), (11.65, 15.7)]
nested loop vine din 
nested loop objs1, objs2 [(11.55, 13.6), (11.75, 13.05), (11.8, 12.65), (11.95, 12.2), (13.25, 10.1), (12.95, 10.55), (12.65, 10.9), (12.35, 11.4), (12.2, 11.75)][(11.55, 14.0), (11.55, 14.35)]
quick len(objs), constSmallNumber 9 10
quick len(objs), constSmallNumber 7 10
quick len(objs), constSmallNumber 14 10
p1 = (7.35, 13.75) len objs = 14
r is 3.52
new r is 3.52
p1 = (7.35, 13.75)
startIdx = 0 obj (12.15, 17.2)
endIdx = 13 obj (7.95, 10.95)
startDIST = 5.911218148571409 obj (12.15, 17.2)
endDIST = 2.8635642126552714 obj (7.95, 10.95)
Pentru (7.95, 10.95) endDist este 2.8635642126552714 iar r-eps este 0.7200000000000002
endDist Il apendeaza pe (7.95, 10.95) endDist 2.8635642126552714
startDist Il apendeaza pe (12.15, 17.2) startDist 5.911218148571409
Before swap start end (12.15, 17.2) (7.95, 10.95) 0 13
After swap start end (7.95, 10.95) (12.15, 17.2) 0 13
p1 = (7.35, 13.75)
startIdx = 1 obj (12.0, 16.75)
endIdx = 12 obj (7.75, 11.7)
startDIST = 5.533760023709015 obj (12.0, 16.75)
endDIST = 2.0886598574205433 obj (7.75, 11.7)
Pentru (7.75, 11.7) endDist este 2.0886598574205433 iar r-eps este 0.7200000000000002
endDist Il apendeaza pe (7.75, 11.7) endDist 2.0886598574205433
startDist Il apendeaza pe (12.0, 16.75) startDist 5.533760023709015
Before swap start end (12.0, 16.75) (7.75, 11.7) 1 12
After swap start end (7.75, 11.7) (12.0, 16.75) 1 12
p1 = (7.35, 13.75)
startIdx = 2 obj (7.35, 15.75)
endIdx = 11 obj (7.55, 12.35)
startDIST = 2.0 obj (7.35, 15.75)
endDIST = 1.4142135623730956 obj (7.55, 12.35)
AL DOILEA WHILE startIdx = 2 obj (7.35, 15.75) start 2.0
startDist Il apendeaza pe (7.35, 15.75) endDist 2.0
AL DOILEA WHILE startIdx = 3 obj (7.55, 16.35) start 2.607680962081061
startDist Il apendeaza pe (7.55, 16.35) endDist 2.607680962081061
AL DOILEA WHILE startIdx = 4 obj (7.7, 16.95) start 3.2190837205639737
startDist Il apendeaza pe (7.7, 16.95) endDist 3.2190837205639737
Pentru (7.55, 12.35) endDist este 1.4142135623730956 iar r-eps este 0.7200000000000002
endDist Il apendeaza pe (7.55, 12.35) endDist 1.4142135623730956
startDist Il apendeaza pe (7.8, 17.55) startDist 3.826551972729497
Before swap start end (7.8, 17.55) (7.55, 12.35) 5 11
After swap start end (7.55, 12.35) (7.8, 17.55) 5 11
p1 = (7.35, 13.75)
startIdx = 6 obj (8.05, 18.15)
endIdx = 10 obj (7.45, 13.0)
startDIST = 4.455333881989092 obj (8.05, 18.15)
endDIST = 0.7566372975210779 obj (7.45, 13.0)
Pentru (7.45, 13.0) endDist este 0.7566372975210779 iar r-eps este 0.7200000000000002
endDist Il apendeaza pe (7.45, 13.0) endDist 0.7566372975210779
startDist Il apendeaza pe (8.05, 18.15) startDist 4.455333881989092
Before swap start end (8.05, 18.15) (7.45, 13.0) 6 10
After swap start end (7.45, 13.0) (8.05, 18.15) 6 10
p1 = (7.35, 13.75)
startIdx = 7 obj (7.35, 14.95)
endIdx = 9 obj (7.35, 13.75)
startDIST = 1.1999999999999993 obj (7.35, 14.95)
endDIST = 0.0 obj (7.35, 13.75)
AL DOILEA WHILE startIdx = 7 obj (7.35, 14.95) start 1.1999999999999993
startDist Il apendeaza pe (7.35, 14.95) endDist 1.1999999999999993
AL DOILEA WHILE startIdx = 8 obj (7.3, 14.35) start 0.6020797289396145
sunt egale 9 9
========================= WIN L ===================
[(7.95, 10.95), (7.75, 11.7), (7.35, 15.75), (7.55, 16.35), (7.7, 16.95), (7.55, 12.35), (7.45, 13.0), (7.35, 14.95)]
========================= WIN L END ===================
========================= WIN G ===================
[(12.15, 17.2), (12.0, 16.75), (7.8, 17.55), (8.05, 18.15)]
========================= WIN G END ===================
========================= OBJS first half ===================
[(7.95, 10.95), (7.75, 11.7), (7.35, 15.75), (7.55, 16.35), (7.7, 16.95), (7.55, 12.35), (7.45, 13.0), (7.35, 14.95), (7.3, 14.35)]
========================= OBJS first half END ===================
========================= OBJS last half ===================
[(7.35, 13.75), (8.05, 18.15), (7.8, 17.55), (12.0, 16.75), (12.15, 17.2)]
========================= OBJS last half END ===================
Intra in win
win len(objs), len(objs1), len(objs2), constSmallNumber 12 | [(7.95, 10.95), (7.75, 11.7), (7.35, 15.75), (7.55, 16.35), (7.7, 16.95), (7.55, 12.35), (7.45, 13.0), (7.35, 14.95)] | [(12.15, 17.2), (12.0, 16.75), (7.8, 17.55), (8.05, 18.15)] | 10
p1 = (7.8, 17.55) len objs = 8
r is 2.78
new r is 2.78
p1 = (7.8, 17.55)
startIdx = 0 obj (7.95, 10.95)
endIdx = 7 obj (7.35, 14.95)
startDIST = 6.601704325399617 obj (7.95, 10.95)
endDIST = 2.638654960391754 obj (7.35, 14.95)
Pentru (7.35, 14.95) endDist este 2.638654960391754 iar r-eps este -0.020000000000000018
endDist Il apendeaza pe (7.35, 14.95) endDist 2.638654960391754
Before swap start end (7.95, 10.95) (7.35, 14.95) 0 7
After swap start end (7.35, 14.95) (7.95, 10.95) 0 7
p1 = (7.8, 17.55)
startIdx = 1 obj (7.75, 11.7)
endIdx = 6 obj (7.45, 13.0)
startDIST = 5.850213671311503 obj (7.75, 11.7)
endDIST = 4.563441683641855 obj (7.45, 13.0)
PRIMUL WHILE endIdx = 6 obj (7.45, 13.0) endDist 4.563441683641855
endDist Il apendeaza pe (7.45, 13.0) endDist 4.563441683641855
PRIMUL WHILE endIdx = 5 obj (7.55, 12.35) endDist 5.206006146750118
endDist Il apendeaza pe (7.55, 12.35) endDist 5.206006146750118
Pentru (7.7, 16.95) endDist este 0.6082762530298234 iar r-eps este -0.020000000000000018
endDist Il apendeaza pe (7.7, 16.95) endDist 0.6082762530298234
Before swap start end (7.75, 11.7) (7.7, 16.95) 1 4
After swap start end (7.7, 16.95) (7.75, 11.7) 1 4
p1 = (7.8, 17.55)
startIdx = 2 obj (7.35, 15.75)
endIdx = 3 obj (7.55, 16.35)
startDIST = 1.8553975315279478 obj (7.35, 15.75)
endDIST = 1.2257650672131257 obj (7.55, 16.35)
AL DOILEA WHILE startIdx = 2 obj (7.35, 15.75) start 1.8553975315279478
startDist Il apendeaza pe (7.35, 15.75) endDist 1.8553975315279478
sunt egale 3 3
========================= WIN L ===================
[(7.35, 14.95), (7.7, 16.95), (7.35, 15.75), (7.55, 16.35)]
========================= WIN L END ===================
========================= WIN G ===================
[(7.45, 13.0), (7.55, 12.35)]
========================= WIN G END ===================
========================= OBJS first half ===================
[(7.35, 14.95), (7.7, 16.95), (7.35, 15.75)]
========================= OBJS first half END ===================
========================= OBJS last half ===================
[(7.55, 16.35), (7.75, 11.7), (7.55, 12.35), (7.45, 13.0), (7.95, 10.95)]
========================= OBJS last half END ===================
p1 = (7.8, 17.55) len objs = 4
r is 3.03
new r is 3.03
p1 = (7.8, 17.55)
startIdx = 0 obj (12.15, 17.2)
endIdx = 3 obj (8.05, 18.15)
startDIST = 4.3640577448058595 obj (12.15, 17.2)
endDIST = 0.6499999999999984 obj (8.05, 18.15)
Pentru (8.05, 18.15) endDist este 0.6499999999999984 iar r-eps este 0.22999999999999998
endDist Il apendeaza pe (8.05, 18.15) endDist 0.6499999999999984
startDist Il apendeaza pe (12.15, 17.2) startDist 4.3640577448058595
Before swap start end (12.15, 17.2) (8.05, 18.15) 0 3
After swap start end (8.05, 18.15) (12.15, 17.2) 0 3
p1 = (7.8, 17.55)
startIdx = 1 obj (12.0, 16.75)
endIdx = 2 obj (7.8, 17.55)
startDIST = 4.27551166528639 obj (12.0, 16.75)
endDIST = 0.0 obj (7.8, 17.55)
Pentru (7.8, 17.55) endDist este 0.0 iar r-eps este 0.22999999999999998
startDist Il apendeaza pe (12.0, 16.75) startDist 4.27551166528639
Before swap start end (12.0, 16.75) (7.8, 17.55) 1 2
After swap start end (7.8, 17.55) (12.0, 16.75) 1 2
========================= WIN L ===================
[(8.05, 18.15)]
========================= WIN L END ===================
========================= WIN G ===================
[(12.15, 17.2), (12.0, 16.75)]
========================= WIN G END ===================
========================= OBJS first half ===================
[(8.05, 18.15)]
========================= OBJS first half END ===================
========================= OBJS last half ===================
[(7.8, 17.55), (12.0, 16.75), (12.15, 17.2)]
========================= OBJS last half END ===================
Intra in win
win len(objs), len(objs1), len(objs2), constSmallNumber 6 | [(7.35, 14.95), (7.7, 16.95), (7.35, 15.75), (7.55, 16.35)] | [(12.15, 17.2), (12.0, 16.75)] | 10
nested loop vine din 
nested loop objs1, objs2 [(7.35, 14.95), (7.7, 16.95), (7.35, 15.75), (7.55, 16.35)][(12.15, 17.2), (12.0, 16.75)]
Intra in win
win len(objs), len(objs1), len(objs2), constSmallNumber 3 | [(7.45, 13.0), (7.55, 12.35)] | [(8.05, 18.15)] | 10
nested loop vine din 
nested loop objs1, objs2 [(7.45, 13.0), (7.55, 12.35)][(8.05, 18.15)]
Intra in win
win len(objs), len(objs1), len(objs2), constSmallNumber 6 | [(7.35, 14.95), (7.7, 16.95), (7.35, 15.75), (7.55, 16.35)] | [(8.05, 18.15), (7.8, 17.55)] | 10
nested loop vine din 
nested loop objs1, objs2 [(7.35, 14.95), (7.7, 16.95), (7.35, 15.75), (7.55, 16.35)][(8.05, 18.15), (7.8, 17.55)]
Intra in win
win len(objs), len(objs1), len(objs2), constSmallNumber 6 | [(7.75, 11.7), (7.55, 12.35), (7.45, 13.0), (7.95, 10.95)] | [(12.0, 16.75), (12.15, 17.2)] | 10
nested loop vine din 
nested loop objs1, objs2 [(7.75, 11.7), (7.55, 12.35), (7.45, 13.0), (7.95, 10.95)][(12.0, 16.75), (12.15, 17.2)]
quick len(objs), constSmallNumber 10 10
p1 = (7.35, 13.75) len objs = 10
r is 2.46
new r is 2.46
p1 = (7.35, 13.75)
startIdx = 0 obj (7.95, 10.95)
endIdx = 9 obj (7.35, 13.75)
startDIST = 2.8635642126552714 obj (7.95, 10.95)
endDIST = 0.0 obj (7.35, 13.75)
Pentru (7.35, 13.75) endDist este 0.0 iar r-eps este -0.33999999999999986
endDist Il apendeaza pe (7.35, 13.75) endDist 0.0
startDist Il apendeaza pe (7.95, 10.95) startDist 2.8635642126552714
Before swap start end (7.95, 10.95) (7.35, 13.75) 0 9
After swap start end (7.35, 13.75) (7.95, 10.95) 0 9
p1 = (7.35, 13.75)
startIdx = 1 obj (7.75, 11.7)
endIdx = 8 obj (7.3, 14.35)
startDIST = 2.0886598574205433 obj (7.75, 11.7)
endDIST = 0.6020797289396145 obj (7.3, 14.35)
AL DOILEA WHILE startIdx = 1 obj (7.75, 11.7) start 2.0886598574205433
startDist Il apendeaza pe (7.75, 11.7) endDist 2.0886598574205433
AL DOILEA WHILE startIdx = 2 obj (7.35, 15.75) start 2.0
startDist Il apendeaza pe (7.35, 15.75) endDist 2.0
Pentru (7.3, 14.35) endDist este 0.6020797289396145 iar r-eps este -0.33999999999999986
endDist Il apendeaza pe (7.3, 14.35) endDist 0.6020797289396145
startDist Il apendeaza pe (7.55, 16.35) startDist 2.607680962081061
Before swap start end (7.55, 16.35) (7.3, 14.35) 3 8
After swap start end (7.3, 14.35) (7.55, 16.35) 3 8
p1 = (7.35, 13.75)
startIdx = 4 obj (7.7, 16.95)
endIdx = 7 obj (7.35, 14.95)
startDIST = 3.2190837205639737 obj (7.7, 16.95)
endDIST = 1.1999999999999993 obj (7.35, 14.95)
Pentru (7.35, 14.95) endDist este 1.1999999999999993 iar r-eps este -0.33999999999999986
endDist Il apendeaza pe (7.35, 14.95) endDist 1.1999999999999993
startDist Il apendeaza pe (7.7, 16.95) startDist 3.2190837205639737
Before swap start end (7.7, 16.95) (7.35, 14.95) 4 7
After swap start end (7.35, 14.95) (7.7, 16.95) 4 7
p1 = (7.35, 13.75)
startIdx = 5 obj (7.55, 12.35)
endIdx = 6 obj (7.45, 13.0)
startDIST = 1.4142135623730956 obj (7.55, 12.35)
endDIST = 0.7566372975210779 obj (7.45, 13.0)
AL DOILEA WHILE startIdx = 5 obj (7.55, 12.35) start 1.4142135623730956
startDist Il apendeaza pe (7.55, 12.35) endDist 1.4142135623730956
sunt egale 6 6
========================= WIN L ===================
[(7.35, 13.75), (7.75, 11.7), (7.35, 15.75), (7.3, 14.35), (7.35, 14.95), (7.55, 12.35), (7.45, 13.0)]
========================= WIN L END ===================
========================= WIN G ===================
[(7.95, 10.95), (7.55, 16.35), (7.7, 16.95)]
========================= WIN G END ===================
========================= OBJS first half ===================
[(7.35, 13.75), (7.75, 11.7), (7.35, 15.75), (7.3, 14.35), (7.35, 14.95), (7.55, 12.35)]
========================= OBJS first half END ===================
========================= OBJS last half ===================
[(7.45, 13.0), (7.7, 16.95), (7.55, 16.35), (7.95, 10.95)]
========================= OBJS last half END ===================
Intra in win
win len(objs), len(objs1), len(objs2), constSmallNumber 10 | [(7.35, 13.75), (7.75, 11.7), (7.35, 15.75), (7.3, 14.35), (7.35, 14.95), (7.55, 12.35), (7.45, 13.0)] | [(7.95, 10.95), (7.55, 16.35), (7.7, 16.95)] | 10
p1 = (7.7, 16.95) len objs = 7
r is 1.79
new r is 1.79
p1 = (7.7, 16.95)
startIdx = 0 obj (7.35, 13.75)
endIdx = 6 obj (7.45, 13.0)
startDIST = 3.2190837205639737 obj (7.35, 13.75)
endDIST = 3.9579034854326594 obj (7.45, 13.0)
PRIMUL WHILE endIdx = 6 obj (7.45, 13.0) endDist 3.9579034854326594
endDist Il apendeaza pe (7.45, 13.0) endDist 3.9579034854326594
PRIMUL WHILE endIdx = 5 obj (7.55, 12.35) endDist 4.602445002387317
PRIMUL WHILE endIdx = 4 obj (7.35, 14.95) endDist 2.0303940504246953
endDist Il apendeaza pe (7.35, 14.95) endDist 2.0303940504246953
PRIMUL WHILE endIdx = 3 obj (7.3, 14.35) endDist 2.630589287593181
endDist Il apendeaza pe (7.3, 14.35) endDist 2.630589287593181
Pentru (7.35, 15.75) endDist este 1.2499999999999996 iar r-eps este -1.0099999999999998
endDist Il apendeaza pe (7.35, 15.75) endDist 1.2499999999999996
startDist Il apendeaza pe (7.35, 13.75) startDist 3.2190837205639737
Before swap start end (7.35, 13.75) (7.35, 15.75) 0 2
After swap start end (7.35, 15.75) (7.35, 13.75) 0 2
sunt egale 1 1
========================= WIN L ===================
[(7.35, 15.75)]
========================= WIN L END ===================
========================= WIN G ===================
[(7.45, 13.0), (7.35, 14.95), (7.3, 14.35), (7.35, 13.75)]
========================= WIN G END ===================
========================= OBJS first half ===================
[]
========================= OBJS first half END ===================
========================= OBJS last half ===================
[(7.35, 15.75), (7.75, 11.7), (7.35, 13.75), (7.3, 14.35), (7.35, 14.95), (7.55, 12.35), (7.45, 13.0)]
========================= OBJS last half END ===================
p1 = (7.7, 16.95) len objs = 3
r is 4.01
new r is 4.01
p1 = (7.7, 16.95)
startIdx = 0 obj (7.95, 10.95)
endIdx = 2 obj (7.7, 16.95)
startDIST = 6.005206074732157 obj (7.95, 10.95)
endDIST = 0.0 obj (7.7, 16.95)
Pentru (7.7, 16.95) endDist este 0.0 iar r-eps este 1.21
startDist Il apendeaza pe (7.95, 10.95) startDist 6.005206074732157
Before swap start end (7.95, 10.95) (7.7, 16.95) 0 2
After swap start end (7.7, 16.95) (7.95, 10.95) 0 2
sunt egale 1 1
========================= WIN L ===================
[]
========================= WIN L END ===================
========================= WIN G ===================
[(7.95, 10.95)]
========================= WIN G END ===================
========================= OBJS first half ===================
[(7.7, 16.95)]
========================= OBJS first half END ===================
========================= OBJS last half ===================
[(7.55, 16.35), (7.95, 10.95)]
========================= OBJS last half END ===================
nested loop vine din 
nested loop objs1, objs2 [(7.35, 15.75)][(7.95, 10.95)]
nested loop vine din 
nested loop objs1, objs2 [(7.45, 13.0), (7.35, 14.95), (7.3, 14.35), (7.35, 13.75)][]
nested loop vine din 
nested loop objs1, objs2 [(7.35, 15.75)][(7.7, 16.95), (7.55, 16.35)]
nested loop vine din 
nested loop objs1, objs2 [(7.75, 11.7), (7.35, 13.75), (7.3, 14.35), (7.35, 14.95), (7.55, 12.35), (7.45, 13.0)][(7.95, 10.95)]
quick len(objs), constSmallNumber 7 10
quick len(objs), constSmallNumber 3 10
quick len(objs), constSmallNumber 4 10
quick len(objs), constSmallNumber 14 10
p1 = (10.9, 6.65) len objs = 14
r is 3.56
new r is 3.56
p1 = (10.9, 6.65)
startIdx = 0 obj (8.9, 9.05)
endIdx = 13 obj (14.9, 8.7)
startDIST = 3.124099870362662 obj (8.9, 9.05)
endDIST = 4.4947191235938195 obj (14.9, 8.7)
PRIMUL WHILE endIdx = 13 obj (14.9, 8.7) endDist 4.4947191235938195
endDist Il apendeaza pe (14.9, 8.7) endDist 4.4947191235938195
PRIMUL WHILE endIdx = 12 obj (14.45, 8.9) endDist 4.202975136733501
endDist Il apendeaza pe (14.45, 8.9) endDist 4.202975136733501
PRIMUL WHILE endIdx = 11 obj (13.95, 9.3) endDist 4.040420770167384
endDist Il apendeaza pe (13.95, 9.3) endDist 4.040420770167384
PRIMUL WHILE endIdx = 10 obj (13.6, 9.65) endDist 4.036087214122112
endDist Il apendeaza pe (13.6, 9.65) endDist 4.036087214122112
AL DOILEA WHILE startIdx = 0 obj (8.9, 9.05) start 3.124099870362662
startDist Il apendeaza pe (8.9, 9.05) endDist 3.124099870362662
Pentru (12.7, 5.2) endDist este 2.3113848662652434 iar r-eps este 0.7600000000000002
endDist Il apendeaza pe (12.7, 5.2) endDist 2.3113848662652434
startDist Il apendeaza pe (8.55, 9.65) startDist 3.8108398024582453
Before swap start end (8.55, 9.65) (12.7, 5.2) 1 9
After swap start end (12.7, 5.2) (8.55, 9.65) 1 9
p1 = (10.9, 6.65)
startIdx = 2 obj (8.15, 10.35)
endIdx = 8 obj (12.05, 5.65)
startDIST = 4.610043383743801 obj (8.15, 10.35)
endDIST = 1.5239750654128172 obj (12.05, 5.65)
Pentru (12.05, 5.65) endDist este 1.5239750654128172 iar r-eps este 0.7600000000000002
endDist Il apendeaza pe (12.05, 5.65) endDist 1.5239750654128172
startDist Il apendeaza pe (8.15, 10.35) startDist 4.610043383743801
Before swap start end (8.15, 10.35) (12.05, 5.65) 2 8
After swap start end (12.05, 5.65) (8.15, 10.35) 2 8
p1 = (10.9, 6.65)
startIdx = 3 obj (9.35, 8.35)
endIdx = 7 obj (11.45, 6.15)
startDIST = 2.300543414065468 obj (9.35, 8.35)
endDIST = 0.7433034373659245 obj (11.45, 6.15)
AL DOILEA WHILE startIdx = 3 obj (9.35, 8.35) start 2.300543414065468
startDist Il apendeaza pe (9.35, 8.35) endDist 2.300543414065468
AL DOILEA WHILE startIdx = 4 obj (9.7, 7.85) start 1.6970562748477143
startDist Il apendeaza pe (9.7, 7.85) endDist 1.6970562748477143
AL DOILEA WHILE startIdx = 5 obj (10.3, 7.25) start 0.8485281374238566
startDist Il apendeaza pe (10.3, 7.25) endDist 0.8485281374238566
AL DOILEA WHILE startIdx = 6 obj (10.9, 6.65) start 0.0
sunt egale 7 7
========================= WIN L ===================
[(8.9, 9.05), (12.7, 5.2), (12.05, 5.65), (9.35, 8.35), (9.7, 7.85), (10.3, 7.25)]
========================= WIN L END ===================
========================= WIN G ===================
[(14.9, 8.7), (14.45, 8.9), (13.95, 9.3), (13.6, 9.65), (8.55, 9.65), (8.15, 10.35)]
========================= WIN G END ===================
========================= OBJS first half ===================
[(8.9, 9.05), (12.7, 5.2), (12.05, 5.65), (9.35, 8.35), (9.7, 7.85), (10.3, 7.25), (10.9, 6.65)]
========================= OBJS first half END ===================
========================= OBJS last half ===================
[(11.45, 6.15), (8.15, 10.35), (8.55, 9.65), (13.6, 9.65), (13.95, 9.3), (14.45, 8.9), (14.9, 8.7)]
========================= OBJS last half END ===================
Intra in win
win len(objs), len(objs1), len(objs2), constSmallNumber 12 | [(8.9, 9.05), (12.7, 5.2), (12.05, 5.65), (9.35, 8.35), (9.7, 7.85), (10.3, 7.25)] | [(14.9, 8.7), (14.45, 8.9), (13.95, 9.3), (13.6, 9.65), (8.55, 9.65), (8.15, 10.35)] | 10
p1 = (9.7, 7.85) len objs = 6
r is 2.63
new r is 2.63
p1 = (9.7, 7.85)
startIdx = 0 obj (8.9, 9.05)
endIdx = 5 obj (10.3, 7.25)
startDIST = 1.442220510185596 obj (8.9, 9.05)
endDIST = 0.8485281374238578 obj (10.3, 7.25)
AL DOILEA WHILE startIdx = 0 obj (8.9, 9.05) start 1.442220510185596
startDist Il apendeaza pe (8.9, 9.05) endDist 1.442220510185596
Pentru (10.3, 7.25) endDist este 0.8485281374238578 iar r-eps este -0.16999999999999993
endDist Il apendeaza pe (10.3, 7.25) endDist 0.8485281374238578
startDist Il apendeaza pe (12.7, 5.2) startDist 4.002811511925087
Before swap start end (12.7, 5.2) (10.3, 7.25) 1 5
After swap start end (10.3, 7.25) (12.7, 5.2) 1 5
p1 = (9.7, 7.85)
startIdx = 2 obj (12.05, 5.65)
endIdx = 4 obj (9.7, 7.85)
startDIST = 3.219083720563975 obj (12.05, 5.65)
endDIST = 0.0 obj (9.7, 7.85)
Pentru (9.7, 7.85) endDist este 0.0 iar r-eps este -0.16999999999999993
endDist Il apendeaza pe (9.7, 7.85) endDist 0.0
startDist Il apendeaza pe (12.05, 5.65) startDist 3.219083720563975
Before swap start end (12.05, 5.65) (9.7, 7.85) 2 4
After swap start end (9.7, 7.85) (12.05, 5.65) 2 4
sunt egale 3 3
========================= WIN L ===================
[(8.9, 9.05), (10.3, 7.25), (9.7, 7.85), (9.35, 8.35)]
========================= WIN L END ===================
========================= WIN G ===================
[(12.7, 5.2), (12.05, 5.65)]
========================= WIN G END ===================
========================= OBJS first half ===================
[(8.9, 9.05), (10.3, 7.25), (9.7, 7.85)]
========================= OBJS first half END ===================
========================= OBJS last half ===================
[(9.35, 8.35), (12.05, 5.65), (12.7, 5.2)]
========================= OBJS last half END ===================
p1 = (9.7, 7.85) len objs = 6
r is 3.6
new r is 3.6
p1 = (9.7, 7.85)
startIdx = 0 obj (14.9, 8.7)
endIdx = 5 obj (8.15, 10.35)
startDIST = 5.269013190342193 obj (14.9, 8.7)
endDIST = 2.9415132160165447 obj (8.15, 10.35)
Pentru (8.15, 10.35) endDist este 2.9415132160165447 iar r-eps este 0.8000000000000003
endDist Il apendeaza pe (8.15, 10.35) endDist 2.9415132160165447
startDist Il apendeaza pe (14.9, 8.7) startDist 5.269013190342193
Before swap start end (14.9, 8.7) (8.15, 10.35) 0 5
After swap start end (8.15, 10.35) (14.9, 8.7) 0 5
p1 = (9.7, 7.85)
startIdx = 1 obj (14.45, 8.9)
endIdx = 4 obj (8.55, 9.65)
startDIST = 4.864668539582117 obj (14.45, 8.9)
endDIST = 2.1360009363293826 obj (8.55, 9.65)
Pentru (8.55, 9.65) endDist este 2.1360009363293826 iar r-eps este 0.8000000000000003
endDist Il apendeaza pe (8.55, 9.65) endDist 2.1360009363293826
startDist Il apendeaza pe (14.45, 8.9) startDist 4.864668539582117
Before swap start end (14.45, 8.9) (8.55, 9.65) 1 4
After swap start end (8.55, 9.65) (14.45, 8.9) 1 4
p1 = (9.7, 7.85)
startIdx = 2 obj (13.95, 9.3)
endIdx = 3 obj (13.6, 9.65)
startDIST = 4.490545623863541 obj (13.95, 9.3)
endDIST = 4.295346318982907 obj (13.6, 9.65)
PRIMUL WHILE endIdx = 3 obj (13.6, 9.65) endDist 4.295346318982907
endDist Il apendeaza pe (13.6, 9.65) endDist 4.295346318982907
sunt egale 2 2
========================= WIN L ===================
[(8.15, 10.35), (8.55, 9.65)]
========================= WIN L END ===================
========================= WIN G ===================
[(14.9, 8.7), (14.45, 8.9), (13.6, 9.65), (13.95, 9.3)]
========================= WIN G END ===================
========================= OBJS first half ===================
[(8.15, 10.35)]
========================= OBJS first half END ===================
========================= OBJS last half ===================
[(8.55, 9.65), (13.95, 9.3), (13.6, 9.65), (14.45, 8.9), (14.9, 8.7)]
========================= OBJS last half END ===================
Intra in win
win len(objs), len(objs1), len(objs2), constSmallNumber 8 | [(8.9, 9.05), (10.3, 7.25), (9.7, 7.85), (9.35, 8.35)] | [(14.9, 8.7), (14.45, 8.9), (13.6, 9.65), (13.95, 9.3)] | 10
nested loop vine din 
nested loop objs1, objs2 [(8.9, 9.05), (10.3, 7.25), (9.7, 7.85), (9.35, 8.35)][(14.9, 8.7), (14.45, 8.9), (13.6, 9.65), (13.95, 9.3)]
Intra in win
win len(objs), len(objs1), len(objs2), constSmallNumber 4 | [(12.7, 5.2), (12.05, 5.65)] | [(8.15, 10.35), (8.55, 9.65)] | 10
nested loop vine din 
nested loop objs1, objs2 [(12.7, 5.2), (12.05, 5.65)][(8.15, 10.35), (8.55, 9.65)]
Intra in win
win len(objs), len(objs1), len(objs2), constSmallNumber 6 | [(8.9, 9.05), (10.3, 7.25), (9.7, 7.85), (9.35, 8.35)] | [(8.15, 10.35), (8.55, 9.65)] | 10
nested loop vine din 
nested loop objs1, objs2 [(8.9, 9.05), (10.3, 7.25), (9.7, 7.85), (9.35, 8.35)][(8.15, 10.35), (8.55, 9.65)]
Intra in win
win len(objs), len(objs1), len(objs2), constSmallNumber 6 | [(12.05, 5.65), (12.7, 5.2)] | [(13.95, 9.3), (13.6, 9.65), (14.45, 8.9), (14.9, 8.7)] | 10
nested loop vine din 
nested loop objs1, objs2 [(12.05, 5.65), (12.7, 5.2)][(13.95, 9.3), (13.6, 9.65), (14.45, 8.9), (14.9, 8.7)]
quick len(objs), constSmallNumber 8 10
quick len(objs), constSmallNumber 6 10
quick len(objs), constSmallNumber 42 10
p1 = (15.55, 19.85) len objs = 42
r is 6.92
new r is 6.92
p1 = (15.55, 19.85)
startIdx = 0 obj (13.4, 4.75)
endIdx = 41 obj (17.5, 7.35)
startDIST = 15.252294909291521 obj (13.4, 4.75)
endDIST = 12.651185715181011 obj (17.5, 7.35)
PRIMUL WHILE endIdx = 41 obj (17.5, 7.35) endDist 12.651185715181011
PRIMUL WHILE endIdx = 40 obj (16.9, 7.6) endDist 12.324163257600901
PRIMUL WHILE endIdx = 39 obj (16.35, 7.8) endDist 12.076526818584888
PRIMUL WHILE endIdx = 38 obj (15.8, 8.05) endDist 11.802648007968381
PRIMUL WHILE endIdx = 37 obj (15.4, 8.35) endDist 11.500978219264656
Pentru (16.55, 19.9) endDist este 1.001249219725039 iar r-eps este 4.12
Before swap start end (13.4, 4.75) (16.55, 19.9) 0 36
After swap start end (16.55, 19.9) (13.4, 4.75) 0 36
p1 = (15.55, 19.85)
startIdx = 1 obj (8.3, 18.75)
endIdx = 35 obj (16.2, 19.9)
startDIST = 7.3329734760191245 obj (8.3, 18.75)
endDIST = 0.6519202405202632 obj (16.2, 19.9)
Pentru (16.2, 19.9) endDist este 0.6519202405202632 iar r-eps este 4.12
startDist Il apendeaza pe (8.3, 18.75) startDist 7.3329734760191245
Before swap start end (8.3, 18.75) (16.2, 19.9) 1 35
After swap start end (16.2, 19.9) (8.3, 18.75) 1 35
p1 = (15.55, 19.85)
startIdx = 2 obj (8.65, 19.3)
endIdx = 34 obj (15.95, 19.9)
startDIST = 6.921885581256022 obj (8.65, 19.3)
endDIST = 0.40311288741492574 obj (15.95, 19.9)
Pentru (15.95, 19.9) endDist este 0.40311288741492574 iar r-eps este 4.12
startDist Il apendeaza pe (8.65, 19.3) startDist 6.921885581256022
Before swap start end (8.65, 19.3) (15.95, 19.9) 2 34
After swap start end (15.95, 19.9) (8.65, 19.3) 2 34
p1 = (15.55, 19.85)
startIdx = 3 obj (8.9, 19.85)
endIdx = 33 obj (15.55, 19.85)
startDIST = 6.65 obj (8.9, 19.85)
endDIST = 0.0 obj (15.55, 19.85)
AL DOILEA WHILE startIdx = 3 obj (8.9, 19.85) start 6.65
startDist Il apendeaza pe (8.9, 19.85) endDist 6.65
AL DOILEA WHILE startIdx = 4 obj (9.3, 20.3) start 6.266179059043877
startDist Il apendeaza pe (9.3, 20.3) endDist 6.266179059043877
AL DOILEA WHILE startIdx = 5 obj (9.65, 20.8) start 5.97599364122821
startDist Il apendeaza pe (9.65, 20.8) endDist 5.97599364122821
AL DOILEA WHILE startIdx = 6 obj (10.2, 21.25) start 5.530144663568939
startDist Il apendeaza pe (10.2, 21.25) endDist 5.530144663568939
AL DOILEA WHILE startIdx = 7 obj (10.6, 21.65) start 5.267114959823831
startDist Il apendeaza pe (10.6, 21.65) endDist 5.267114959823831
AL DOILEA WHILE startIdx = 8 obj (11.1, 22.15) start 5.009241459542552
startDist Il apendeaza pe (11.1, 22.15) endDist 5.009241459542552
AL DOILEA WHILE startIdx = 9 obj (11.55, 22.45) start 4.7707441767506245
startDist Il apendeaza pe (11.55, 22.45) endDist 4.7707441767506245
AL DOILEA WHILE startIdx = 10 obj (11.95, 22.7) start 4.59156835950419
startDist Il apendeaza pe (11.95, 22.7) endDist 4.59156835950419
AL DOILEA WHILE startIdx = 11 obj (12.55, 23.0) start 4.349999999999999
startDist Il apendeaza pe (12.55, 23.0) endDist 4.349999999999999
AL DOILEA WHILE startIdx = 12 obj (13.05, 23.2) start 4.180011961705371
startDist Il apendeaza pe (13.05, 23.2) endDist 4.180011961705371
AL DOILEA WHILE startIdx = 13 obj (13.45, 23.4) start 4.124621194728067
startDist Il apendeaza pe (13.45, 23.4) endDist 4.124621194728067
AL DOILEA WHILE startIdx = 14 obj (14.0, 23.55) start 4.011545836706842
AL DOILEA WHILE startIdx = 15 obj (14.55, 23.6) start 3.881043674065006
AL DOILEA WHILE startIdx = 16 obj (15.1, 23.75) start 3.9258756984907186
AL DOILEA WHILE startIdx = 17 obj (15.7, 23.75) start 3.9028835493773046
AL DOILEA WHILE startIdx = 18 obj (16.15, 23.85) start 4.044749683231337
AL DOILEA WHILE startIdx = 19 obj (16.7, 23.8) start 4.114000486144842
Pentru (15.55, 19.85) endDist este 0.0 iar r-eps este 4.12
Before swap start end (14.15, 4.4) (15.55, 19.85) 20 33
After swap start end (15.55, 19.85) (14.15, 4.4) 20 33
p1 = (15.55, 19.85)
startIdx = 21 obj (12.3, 17.6)
endIdx = 32 obj (15.25, 19.7)
startDIST = 3.952847075210474 obj (12.3, 17.6)
endDIST = 0.33541019662497007 obj (15.25, 19.7)
AL DOILEA WHILE startIdx = 21 obj (12.3, 17.6) start 3.952847075210474
AL DOILEA WHILE startIdx = 22 obj (12.55, 17.85) start 3.605551275463989
AL DOILEA WHILE startIdx = 23 obj (12.8, 18.05) start 3.2867156859089595
AL DOILEA WHILE startIdx = 24 obj (13.1, 18.4) start 2.846928169097354
AL DOILEA WHILE startIdx = 25 obj (13.3, 18.6) start 2.57390753524675
AL DOILEA WHILE startIdx = 26 obj (13.55, 18.85) start 2.23606797749979
AL DOILEA WHILE startIdx = 27 obj (13.8, 19.05) start 1.924188140489386
AL DOILEA WHILE startIdx = 28 obj (14.15, 19.25) start 1.5231546211727827
AL DOILEA WHILE startIdx = 29 obj (14.45, 19.5) start 1.1543396380615214
AL DOILEA WHILE startIdx = 30 obj (14.85, 19.55) start 0.7615773105863921
AL DOILEA WHILE startIdx = 31 obj (15.0, 19.7) start 0.5700877125495702
sunt egale 32 32
========================= WIN L ===================
[(8.9, 19.85), (9.3, 20.3), (9.65, 20.8), (10.2, 21.25), (10.6, 21.65), (11.1, 22.15), (11.55, 22.45), (11.95, 22.7), (12.55, 23.0), (13.05, 23.2), (13.45, 23.4)]
========================= WIN L END ===================
========================= WIN G ===================
[(8.3, 18.75), (8.65, 19.3)]
========================= WIN G END ===================
========================= OBJS first half ===================
[(16.55, 19.9), (16.2, 19.9), (15.95, 19.9), (8.9, 19.85), (9.3, 20.3), (9.65, 20.8), (10.2, 21.25), (10.6, 21.65), (11.1, 22.15), (11.55, 22.45), (11.95, 22.7), (12.55, 23.0), (13.05, 23.2), (13.45, 23.4), (14.0, 23.55), (14.55, 23.6), (15.1, 23.75), (15.7, 23.75), (16.15, 23.85), (16.7, 23.8), (15.55, 19.85), (12.3, 17.6), (12.55, 17.85), (12.8, 18.05), (13.1, 18.4), (13.3, 18.6), (13.55, 18.85), (13.8, 19.05), (14.15, 19.25), (14.45, 19.5), (14.85, 19.55), (15.0, 19.7)]
========================= OBJS first half END ===================
========================= OBJS last half ===================
[(15.25, 19.7), (14.15, 4.4), (8.65, 19.3), (8.3, 18.75), (13.4, 4.75), (15.4, 8.35), (15.8, 8.05), (16.35, 7.8), (16.9, 7.6), (17.5, 7.35)]
========================= OBJS last half END ===================
Intra in win
win len(objs), len(objs1), len(objs2), constSmallNumber 13 | [(8.9, 19.85), (9.3, 20.3), (9.65, 20.8), (10.2, 21.25), (10.6, 21.65), (11.1, 22.15), (11.55, 22.45), (11.95, 22.7), (12.55, 23.0), (13.05, 23.2), (13.45, 23.4)] | [(8.3, 18.75), (8.65, 19.3)] | 10
p1 = (11.95, 22.7) len objs = 11
r is 2.36
new r is 2.36
p1 = (11.95, 22.7)
startIdx = 0 obj (8.9, 19.85)
endIdx = 10 obj (13.45, 23.4)
startDIST = 4.174326292948359 obj (8.9, 19.85)
endDIST = 1.6552945357246844 obj (13.45, 23.4)
Pentru (13.45, 23.4) endDist este 1.6552945357246844 iar r-eps este -0.43999999999999995
endDist Il apendeaza pe (13.45, 23.4) endDist 1.6552945357246844
startDist Il apendeaza pe (8.9, 19.85) startDist 4.174326292948359
Before swap start end (8.9, 19.85) (13.45, 23.4) 0 10
After swap start end (13.45, 23.4) (8.9, 19.85) 0 10
p1 = (11.95, 22.7)
startIdx = 1 obj (9.3, 20.3)
endIdx = 9 obj (13.05, 23.2)
startDIST = 3.575262228144949 obj (9.3, 20.3)
endDIST = 1.2083045973594584 obj (13.05, 23.2)
Pentru (13.05, 23.2) endDist este 1.2083045973594584 iar r-eps este -0.43999999999999995
endDist Il apendeaza pe (13.05, 23.2) endDist 1.2083045973594584
startDist Il apendeaza pe (9.3, 20.3) startDist 3.575262228144949
Before swap start end (9.3, 20.3) (13.05, 23.2) 1 9
After swap start end (13.05, 23.2) (9.3, 20.3) 1 9
p1 = (11.95, 22.7)
startIdx = 2 obj (9.65, 20.8)
endIdx = 8 obj (12.55, 23.0)
startDIST = 2.9832867780352577 obj (9.65, 20.8)
endDIST = 0.6708203932499385 obj (12.55, 23.0)
Pentru (12.55, 23.0) endDist este 0.6708203932499385 iar r-eps este -0.43999999999999995
endDist Il apendeaza pe (12.55, 23.0) endDist 0.6708203932499385
startDist Il apendeaza pe (9.65, 20.8) startDist 2.9832867780352577
Before swap start end (9.65, 20.8) (12.55, 23.0) 2 8
After swap start end (12.55, 23.0) (9.65, 20.8) 2 8
p1 = (11.95, 22.7)
startIdx = 3 obj (10.2, 21.25)
endIdx = 7 obj (11.95, 22.7)
startDIST = 2.2726636354727017 obj (10.2, 21.25)
endDIST = 0.0 obj (11.95, 22.7)
AL DOILEA WHILE startIdx = 3 obj (10.2, 21.25) start 2.2726636354727017
startDist Il apendeaza pe (10.2, 21.25) endDist 2.2726636354727017
AL DOILEA WHILE startIdx = 4 obj (10.6, 21.65) start 1.7102631376487072
startDist Il apendeaza pe (10.6, 21.65) endDist 1.7102631376487072
AL DOILEA WHILE startIdx = 5 obj (11.1, 22.15) start 1.0124228365658294
startDist Il apendeaza pe (11.1, 22.15) endDist 1.0124228365658294
AL DOILEA WHILE startIdx = 6 obj (11.55, 22.45) start 0.471699056602829
startDist Il apendeaza pe (11.55, 22.45) endDist 0.471699056602829
sunt egale 7 7
========================= WIN L ===================
[(13.45, 23.4), (13.05, 23.2), (12.55, 23.0), (10.2, 21.25), (10.6, 21.65), (11.1, 22.15), (11.55, 22.45), (11.95, 22.7)]
========================= WIN L END ===================
========================= WIN G ===================
[(8.9, 19.85), (9.3, 20.3), (9.65, 20.8)]
========================= WIN G END ===================
========================= OBJS first half ===================
[(13.45, 23.4), (13.05, 23.2), (12.55, 23.0), (10.2, 21.25), (10.6, 21.65), (11.1, 22.15), (11.55, 22.45)]
========================= OBJS first half END ===================
========================= OBJS last half ===================
[(11.95, 22.7), (9.65, 20.8), (9.3, 20.3), (8.9, 19.85)]
========================= OBJS last half END ===================
p1 = (11.95, 22.7) len objs = 2
r is 0.65
new r is 0.65
p1 = (11.95, 22.7)
startIdx = 0 obj (8.3, 18.75)
endIdx = 1 obj (8.65, 19.3)
startDIST = 5.378196723809941 obj (8.3, 18.75)
endDIST = 4.738143096192852 obj (8.65, 19.3)
PRIMUL WHILE endIdx = 1 obj (8.65, 19.3) endDist 4.738143096192852
sunt egale 0 0
========================= WIN L ===================
[]
========================= WIN L END ===================
========================= WIN G ===================
[]
========================= WIN G END ===================
========================= OBJS first half ===================
[(8.3, 18.75)]
========================= OBJS first half END ===================
========================= OBJS last half ===================
[(8.65, 19.3)]
========================= OBJS last half END ===================
nested loop vine din 
nested loop objs1, objs2 [(13.45, 23.4), (13.05, 23.2), (12.55, 23.0), (10.2, 21.25), (10.6, 21.65), (11.1, 22.15), (11.55, 22.45), (11.95, 22.7)][]
nested loop vine din 
nested loop objs1, objs2 [(8.9, 19.85), (9.3, 20.3), (9.65, 20.8)][]
nested loop vine din 
nested loop objs1, objs2 [(13.45, 23.4), (13.05, 23.2), (12.55, 23.0), (10.2, 21.25), (10.6, 21.65), (11.1, 22.15), (11.55, 22.45), (11.95, 22.7)][]
nested loop vine din 
nested loop objs1, objs2 [(9.65, 20.8), (9.3, 20.3), (8.9, 19.85)][(8.3, 18.75), (8.65, 19.3)]
quick len(objs), constSmallNumber 33 10
p1 = (12.8, 18.05) len objs = 33
r is 3.79
new r is 3.79
p1 = (12.8, 18.05)
startIdx = 0 obj (16.55, 19.9)
endIdx = 32 obj (15.25, 19.7)
startDIST = 4.181506905411013 obj (16.55, 19.9)
endDIST = 2.9538110975483844 obj (15.25, 19.7)
Pentru (15.25, 19.7) endDist este 2.9538110975483844 iar r-eps este 0.9900000000000002
endDist Il apendeaza pe (15.25, 19.7) endDist 2.9538110975483844
startDist Il apendeaza pe (16.55, 19.9) startDist 4.181506905411013
Before swap start end (16.55, 19.9) (15.25, 19.7) 0 32
After swap start end (15.25, 19.7) (16.55, 19.9) 0 32
p1 = (12.8, 18.05)
startIdx = 1 obj (16.2, 19.9)
endIdx = 31 obj (15.0, 19.7)
startDIST = 3.8707234465923785 obj (16.2, 19.9)
endDIST = 2.7499999999999987 obj (15.0, 19.7)
Pentru (15.0, 19.7) endDist este 2.7499999999999987 iar r-eps este 0.9900000000000002
endDist Il apendeaza pe (15.0, 19.7) endDist 2.7499999999999987
startDist Il apendeaza pe (16.2, 19.9) startDist 3.8707234465923785
Before swap start end (16.2, 19.9) (15.0, 19.7) 1 31
After swap start end (15.0, 19.7) (16.2, 19.9) 1 31
p1 = (12.8, 18.05)
startIdx = 2 obj (15.95, 19.9)
endIdx = 30 obj (14.85, 19.55)
startDIST = 3.653080891521564 obj (15.95, 19.9)
endDIST = 2.5401771591761064 obj (14.85, 19.55)
AL DOILEA WHILE startIdx = 2 obj (15.95, 19.9) start 3.653080891521564
startDist Il apendeaza pe (15.95, 19.9) endDist 3.653080891521564
Pentru (14.85, 19.55) endDist este 2.5401771591761064 iar r-eps este 0.9900000000000002
endDist Il apendeaza pe (14.85, 19.55) endDist 2.5401771591761064
startDist Il apendeaza pe (8.9, 19.85) startDist 4.295346318982907
Before swap start end (8.9, 19.85) (14.85, 19.55) 3 30
After swap start end (14.85, 19.55) (8.9, 19.85) 3 30
p1 = (12.8, 18.05)
startIdx = 4 obj (9.3, 20.3)
endIdx = 29 obj (14.45, 19.5)
startDIST = 4.16082924427331 obj (9.3, 20.3)
endDIST = 2.196588263648878 obj (14.45, 19.5)
Pentru (14.45, 19.5) endDist este 2.196588263648878 iar r-eps este 0.9900000000000002
endDist Il apendeaza pe (14.45, 19.5) endDist 2.196588263648878
startDist Il apendeaza pe (9.3, 20.3) startDist 4.16082924427331
Before swap start end (9.3, 20.3) (14.45, 19.5) 4 29
After swap start end (14.45, 19.5) (9.3, 20.3) 4 29
p1 = (12.8, 18.05)
startIdx = 5 obj (9.65, 20.8)
endIdx = 28 obj (14.15, 19.25)
startDIST = 4.181506905411015 obj (9.65, 20.8)
endDIST = 1.8062391868188437 obj (14.15, 19.25)
Pentru (14.15, 19.25) endDist este 1.8062391868188437 iar r-eps este 0.9900000000000002
endDist Il apendeaza pe (14.15, 19.25) endDist 1.8062391868188437
startDist Il apendeaza pe (9.65, 20.8) startDist 4.181506905411015
Before swap start end (9.65, 20.8) (14.15, 19.25) 5 28
After swap start end (14.15, 19.25) (9.65, 20.8) 5 28
p1 = (12.8, 18.05)
startIdx = 6 obj (10.2, 21.25)
endIdx = 27 obj (13.8, 19.05)
startDIST = 4.123105625617661 obj (10.2, 21.25)
endDIST = 1.4142135623730951 obj (13.8, 19.05)
Pentru (13.8, 19.05) endDist este 1.4142135623730951 iar r-eps este 0.9900000000000002
endDist Il apendeaza pe (13.8, 19.05) endDist 1.4142135623730951
startDist Il apendeaza pe (10.2, 21.25) startDist 4.123105625617661
Before swap start end (10.2, 21.25) (13.8, 19.05) 6 27
After swap start end (13.8, 19.05) (10.2, 21.25) 6 27
p1 = (12.8, 18.05)
startIdx = 7 obj (10.6, 21.65)
endIdx = 26 obj (13.55, 18.85)
startDIST = 4.219004621945796 obj (10.6, 21.65)
endDIST = 1.096585609973066 obj (13.55, 18.85)
Pentru (13.55, 18.85) endDist este 1.096585609973066 iar r-eps este 0.9900000000000002
endDist Il apendeaza pe (13.55, 18.85) endDist 1.096585609973066
startDist Il apendeaza pe (10.6, 21.65) startDist 4.219004621945796
Before swap start end (10.6, 21.65) (13.55, 18.85) 7 26
After swap start end (13.55, 18.85) (10.6, 21.65) 7 26
p1 = (12.8, 18.05)
startIdx = 8 obj (11.1, 22.15)
endIdx = 25 obj (13.3, 18.6)
startDIST = 4.438468204234428 obj (11.1, 22.15)
endDIST = 0.7433034373659257 obj (13.3, 18.6)
Pentru (13.3, 18.6) endDist este 0.7433034373659257 iar r-eps este 0.9900000000000002
startDist Il apendeaza pe (11.1, 22.15) startDist 4.438468204234428
Before swap start end (11.1, 22.15) (13.3, 18.6) 8 25
After swap start end (13.3, 18.6) (11.1, 22.15) 8 25
p1 = (12.8, 18.05)
startIdx = 9 obj (11.55, 22.45)
endIdx = 24 obj (13.1, 18.4)
startDIST = 4.574111935665763 obj (11.55, 22.45)
endDIST = 0.46097722286464204 obj (13.1, 18.4)
Pentru (13.1, 18.4) endDist este 0.46097722286464204 iar r-eps este 0.9900000000000002
startDist Il apendeaza pe (11.55, 22.45) startDist 4.574111935665763
Before swap start end (11.55, 22.45) (13.1, 18.4) 9 24
After swap start end (13.1, 18.4) (11.55, 22.45) 9 24
p1 = (12.8, 18.05)
startIdx = 10 obj (11.95, 22.7)
endIdx = 23 obj (12.8, 18.05)
startDIST = 4.7270498199193955 obj (11.95, 22.7)
endDIST = 0.0 obj (12.8, 18.05)
Pentru (12.8, 18.05) endDist este 0.0 iar r-eps este 0.9900000000000002
startDist Il apendeaza pe (11.95, 22.7) startDist 4.7270498199193955
Before swap start end (11.95, 22.7) (12.8, 18.05) 10 23
After swap start end (12.8, 18.05) (11.95, 22.7) 10 23
p1 = (12.8, 18.05)
startIdx = 11 obj (12.55, 23.0)
endIdx = 22 obj (12.55, 17.85)
startDIST = 4.956309110618505 obj (12.55, 23.0)
endDIST = 0.320156211871642 obj (12.55, 17.85)
Pentru (12.55, 17.85) endDist este 0.320156211871642 iar r-eps este 0.9900000000000002
startDist Il apendeaza pe (12.55, 23.0) startDist 4.956309110618505
Before swap start end (12.55, 23.0) (12.55, 17.85) 11 22
After swap start end (12.55, 17.85) (12.55, 23.0) 11 22
p1 = (12.8, 18.05)
startIdx = 12 obj (13.05, 23.2)
endIdx = 21 obj (12.3, 17.6)
startDIST = 5.156064390598704 obj (13.05, 23.2)
endDIST = 0.672681202353685 obj (12.3, 17.6)
Pentru (12.3, 17.6) endDist este 0.672681202353685 iar r-eps este 0.9900000000000002
startDist Il apendeaza pe (13.05, 23.2) startDist 5.156064390598704
Before swap start end (13.05, 23.2) (12.3, 17.6) 12 21
After swap start end (12.3, 17.6) (13.05, 23.2) 12 21
p1 = (12.8, 18.05)
startIdx = 13 obj (13.45, 23.4)
endIdx = 20 obj (15.55, 19.85)
startDIST = 5.389341332667655 obj (13.45, 23.4)
endDIST = 3.2867156859089595 obj (15.55, 19.85)
Pentru (15.55, 19.85) endDist este 3.2867156859089595 iar r-eps este 0.9900000000000002
endDist Il apendeaza pe (15.55, 19.85) endDist 3.2867156859089595
startDist Il apendeaza pe (13.45, 23.4) startDist 5.389341332667655
Before swap start end (13.45, 23.4) (15.55, 19.85) 13 20
After swap start end (15.55, 19.85) (13.45, 23.4) 13 20
p1 = (12.8, 18.05)
startIdx = 14 obj (14.0, 23.55)
endIdx = 19 obj (16.7, 23.8)
startDIST = 5.629387178015028 obj (14.0, 23.55)
endDIST = 6.947841391396323 obj (16.7, 23.8)
PRIMUL WHILE endIdx = 19 obj (16.7, 23.8) endDist 6.947841391396323
PRIMUL WHILE endIdx = 18 obj (16.15, 23.85) endDist 6.697947446792935
PRIMUL WHILE endIdx = 17 obj (15.7, 23.75) endDist 6.395310782127791
endDist Il apendeaza pe (15.7, 23.75) endDist 6.395310782127791
PRIMUL WHILE endIdx = 16 obj (15.1, 23.75) endDist 6.146543744251723
endDist Il apendeaza pe (15.1, 23.75) endDist 6.146543744251723
PRIMUL WHILE endIdx = 15 obj (14.55, 23.6) endDist 5.819364226442611
endDist Il apendeaza pe (14.55, 23.6) endDist 5.819364226442611
sunt egale 14 14
========================= WIN L ===================
[(15.25, 19.7), (15.0, 19.7), (15.95, 19.9), (14.85, 19.55), (14.45, 19.5), (14.15, 19.25), (13.8, 19.05), (13.55, 18.85), (15.55, 19.85)]
========================= WIN L END ===================
========================= WIN G ===================
[(16.55, 19.9), (16.2, 19.9), (8.9, 19.85), (9.3, 20.3), (9.65, 20.8), (10.2, 21.25), (10.6, 21.65), (11.1, 22.15), (11.55, 22.45), (11.95, 22.7), (12.55, 23.0), (13.05, 23.2), (13.45, 23.4), (15.7, 23.75), (15.1, 23.75), (14.55, 23.6), (14.0, 23.55)]
========================= WIN G END ===================
========================= OBJS first half ===================
[(15.25, 19.7), (15.0, 19.7), (15.95, 19.9), (14.85, 19.55), (14.45, 19.5), (14.15, 19.25), (13.8, 19.05), (13.55, 18.85), (13.3, 18.6), (13.1, 18.4), (12.8, 18.05), (12.55, 17.85), (12.3, 17.6)]
========================= OBJS first half END ===================
========================= OBJS last half ===================
[(15.55, 19.85), (14.0, 23.55), (14.55, 23.6), (15.1, 23.75), (15.7, 23.75), (16.15, 23.85), (16.7, 23.8), (13.45, 23.4), (13.05, 23.2), (12.55, 23.0), (11.95, 22.7), (11.55, 22.45), (11.1, 22.15), (10.6, 21.65), (10.2, 21.25), (9.65, 20.8), (9.3, 20.3), (8.9, 19.85), (16.2, 19.9), (16.55, 19.9)]
========================= OBJS last half END ===================
Intra in win
win len(objs), len(objs1), len(objs2), constSmallNumber 26 | [(15.25, 19.7), (15.0, 19.7), (15.95, 19.9), (14.85, 19.55), (14.45, 19.5), (14.15, 19.25), (13.8, 19.05), (13.55, 18.85), (15.55, 19.85)] | [(16.55, 19.9), (16.2, 19.9), (8.9, 19.85), (9.3, 20.3), (9.65, 20.8), (10.2, 21.25), (10.6, 21.65), (11.1, 22.15), (11.55, 22.45), (11.95, 22.7), (12.55, 23.0), (13.05, 23.2), (13.45, 23.4), (15.7, 23.75), (15.1, 23.75), (14.55, 23.6), (14.0, 23.55)] | 10
p1 = (15.25, 19.7) len objs = 9
r is 1.07
new r is 1.07
p1 = (15.25, 19.7)
startIdx = 0 obj (15.25, 19.7)
endIdx = 8 obj (15.55, 19.85)
startDIST = 0.0 obj (15.25, 19.7)
endDIST = 0.33541019662497007 obj (15.55, 19.85)
AL DOILEA WHILE startIdx = 0 obj (15.25, 19.7) start 0.0
startDist Il apendeaza pe (15.25, 19.7) endDist 0.0
AL DOILEA WHILE startIdx = 1 obj (15.0, 19.7) start 0.25
startDist Il apendeaza pe (15.0, 19.7) endDist 0.25
AL DOILEA WHILE startIdx = 2 obj (15.95, 19.9) start 0.7280109889280509
startDist Il apendeaza pe (15.95, 19.9) endDist 0.7280109889280509
AL DOILEA WHILE startIdx = 3 obj (14.85, 19.55) start 0.4272001872658764
startDist Il apendeaza pe (14.85, 19.55) endDist 0.4272001872658764
AL DOILEA WHILE startIdx = 4 obj (14.45, 19.5) start 0.8246211251235326
startDist Il apendeaza pe (14.45, 19.5) endDist 0.8246211251235326
Pentru (15.55, 19.85) endDist este 0.33541019662497007 iar r-eps este -1.7299999999999998
endDist Il apendeaza pe (15.55, 19.85) endDist 0.33541019662497007
startDist Il apendeaza pe (14.15, 19.25) startDist 1.1884864324004707
Before swap start end (14.15, 19.25) (15.55, 19.85) 5 8
After swap start end (15.55, 19.85) (14.15, 19.25) 5 8
p1 = (15.25, 19.7)
startIdx = 6 obj (13.8, 19.05)
endIdx = 7 obj (13.55, 18.85)
startDIST = 1.589024858207069 obj (13.8, 19.05)
endDIST = 1.9006577808748195 obj (13.55, 18.85)
PRIMUL WHILE endIdx = 7 obj (13.55, 18.85) endDist 1.9006577808748195
endDist Il apendeaza pe (13.55, 18.85) endDist 1.9006577808748195
sunt egale 6 6
========================= WIN L ===================
[(15.25, 19.7), (15.0, 19.7), (15.95, 19.9), (14.85, 19.55), (14.45, 19.5), (15.55, 19.85)]
========================= WIN L END ===================
========================= WIN G ===================
[(14.15, 19.25), (13.55, 18.85), (13.8, 19.05)]
========================= WIN G END ===================
========================= OBJS first half ===================
[(15.25, 19.7), (15.0, 19.7), (15.95, 19.9), (14.85, 19.55), (14.45, 19.5)]
========================= OBJS first half END ===================
========================= OBJS last half ===================
[(15.55, 19.85), (13.8, 19.05), (13.55, 18.85), (14.15, 19.25)]
========================= OBJS last half END ===================
p1 = (15.25, 19.7) len objs = 17
r is 3.53
new r is 3.53
p1 = (15.25, 19.7)
startIdx = 0 obj (16.55, 19.9)
endIdx = 16 obj (14.0, 23.55)
startDIST = 1.3152946437965911 obj (16.55, 19.9)
endDIST = 4.047838929601821 obj (14.0, 23.55)
PRIMUL WHILE endIdx = 16 obj (14.0, 23.55) endDist 4.047838929601821
endDist Il apendeaza pe (14.0, 23.55) endDist 4.047838929601821
PRIMUL WHILE endIdx = 15 obj (14.55, 23.6) endDist 3.9623225512317917
endDist Il apendeaza pe (14.55, 23.6) endDist 3.9623225512317917
PRIMUL WHILE endIdx = 14 obj (15.1, 23.75) endDist 4.05277682583189
endDist Il apendeaza pe (15.1, 23.75) endDist 4.05277682583189
PRIMUL WHILE endIdx = 13 obj (15.7, 23.75) endDist 4.074923312161839
endDist Il apendeaza pe (15.7, 23.75) endDist 4.074923312161839
PRIMUL WHILE endIdx = 12 obj (13.45, 23.4) endDist 4.114608122288196
endDist Il apendeaza pe (13.45, 23.4) endDist 4.114608122288196
PRIMUL WHILE endIdx = 11 obj (13.05, 23.2) endDist 4.1340053217188775
endDist Il apendeaza pe (13.05, 23.2) endDist 4.1340053217188775
PRIMUL WHILE endIdx = 10 obj (12.55, 23.0) endDist 4.263801121065568
endDist Il apendeaza pe (12.55, 23.0) endDist 4.263801121065568
PRIMUL WHILE endIdx = 9 obj (11.95, 22.7) endDist 4.459820624195552
endDist Il apendeaza pe (11.95, 22.7) endDist 4.459820624195552
PRIMUL WHILE endIdx = 8 obj (11.55, 22.45) endDist 4.610043383743801
endDist Il apendeaza pe (11.55, 22.45) endDist 4.610043383743801
PRIMUL WHILE endIdx = 7 obj (11.1, 22.15) endDist 4.8192323040085965
endDist Il apendeaza pe (11.1, 22.15) endDist 4.8192323040085965
PRIMUL WHILE endIdx = 6 obj (10.6, 21.65) endDist 5.042320894191484
endDist Il apendeaza pe (10.6, 21.65) endDist 5.042320894191484
PRIMUL WHILE endIdx = 5 obj (10.2, 21.25) endDist 5.282518338822878
endDist Il apendeaza pe (10.2, 21.25) endDist 5.282518338822878
PRIMUL WHILE endIdx = 4 obj (9.65, 20.8) endDist 5.7070132293521105
endDist Il apendeaza pe (9.65, 20.8) endDist 5.7070132293521105
PRIMUL WHILE endIdx = 3 obj (9.3, 20.3) endDist 5.980175582706581
endDist Il apendeaza pe (9.3, 20.3) endDist 5.980175582706581
PRIMUL WHILE endIdx = 2 obj (8.9, 19.85) endDist 6.3517714064660735
AL DOILEA WHILE startIdx = 0 obj (16.55, 19.9) start 1.3152946437965911
startDist Il apendeaza pe (16.55, 19.9) endDist 1.3152946437965911
sunt egale 1 1
========================= WIN L ===================
[(16.55, 19.9), (16.2, 19.9)]
========================= WIN L END ===================
========================= WIN G ===================
[(14.0, 23.55), (14.55, 23.6), (15.1, 23.75), (15.7, 23.75), (13.45, 23.4), (13.05, 23.2), (12.55, 23.0), (11.95, 22.7), (11.55, 22.45), (11.1, 22.15), (10.6, 21.65), (10.2, 21.25), (9.65, 20.8), (9.3, 20.3)]
========================= WIN G END ===================
========================= OBJS first half ===================
[(16.55, 19.9)]
========================= OBJS first half END ===================
========================= OBJS last half ===================
[(16.2, 19.9), (8.9, 19.85), (9.3, 20.3), (9.65, 20.8), (10.2, 21.25), (10.6, 21.65), (11.1, 22.15), (11.55, 22.45), (11.95, 22.7), (12.55, 23.0), (13.05, 23.2), (13.45, 23.4), (15.7, 23.75), (15.1, 23.75), (14.55, 23.6), (14.0, 23.55)]
========================= OBJS last half END ===================
Intra in win
win len(objs), len(objs1), len(objs2), constSmallNumber 20 | [(15.25, 19.7), (15.0, 19.7), (15.95, 19.9), (14.85, 19.55), (14.45, 19.5), (15.55, 19.85)] | [(14.0, 23.55), (14.55, 23.6), (15.1, 23.75), (15.7, 23.75), (13.45, 23.4), (13.05, 23.2), (12.55, 23.0), (11.95, 22.7), (11.55, 22.45), (11.1, 22.15), (10.6, 21.65), (10.2, 21.25), (9.65, 20.8), (9.3, 20.3)] | 10
p1 = (11.55, 22.45) len objs = 6
r is 0.69
new r is 0.69
p1 = (11.55, 22.45)
startIdx = 0 obj (15.25, 19.7)
endIdx = 5 obj (15.55, 19.85)
startDIST = 4.610043383743801 obj (15.25, 19.7)
endDIST = 4.7707441767506245 obj (15.55, 19.85)
PRIMUL WHILE endIdx = 5 obj (15.55, 19.85) endDist 4.7707441767506245
PRIMUL WHILE endIdx = 4 obj (14.45, 19.5) endDist 4.1367257583746095
PRIMUL WHILE endIdx = 3 obj (14.85, 19.55) endDist 4.393176527297757
PRIMUL WHILE endIdx = 2 obj (15.95, 19.9) endDist 5.085518655948476
PRIMUL WHILE endIdx = 1 obj (15.0, 19.7) endDist 4.411915683691156
sunt egale 0 0
========================= WIN L ===================
[]
========================= WIN L END ===================
========================= WIN G ===================
[]
========================= WIN G END ===================
========================= OBJS first half ===================
[(15.25, 19.7), (15.0, 19.7), (15.95, 19.9), (14.85, 19.55), (14.45, 19.5)]
========================= OBJS first half END ===================
========================= OBJS last half ===================
[(15.55, 19.85)]
========================= OBJS last half END ===================
p1 = (11.55, 22.45) len objs = 14
r is 2.82
new r is 2.82
p1 = (11.55, 22.45)
startIdx = 0 obj (14.0, 23.55)
endIdx = 13 obj (9.3, 20.3)
startDIST = 2.685609800399157 obj (14.0, 23.55)
endDIST = 3.1120732639190862 obj (9.3, 20.3)
PRIMUL WHILE endIdx = 13 obj (9.3, 20.3) endDist 3.1120732639190862
endDist Il apendeaza pe (9.3, 20.3) endDist 3.1120732639190862
AL DOILEA WHILE startIdx = 0 obj (14.0, 23.55) start 2.685609800399157
startDist Il apendeaza pe (14.0, 23.55) endDist 2.685609800399157
Pentru (9.65, 20.8) endDist este 2.516445906432323 iar r-eps este 0.020000000000000018
endDist Il apendeaza pe (9.65, 20.8) endDist 2.516445906432323
startDist Il apendeaza pe (14.55, 23.6) startDist 3.2128647652834696
Before swap start end (14.55, 23.6) (9.65, 20.8) 1 12
After swap start end (9.65, 20.8) (14.55, 23.6) 1 12
p1 = (11.55, 22.45)
startIdx = 2 obj (15.1, 23.75)
endIdx = 11 obj (10.2, 21.25)
startDIST = 3.780542289143185 obj (15.1, 23.75)
endDIST = 1.8062391868188448 obj (10.2, 21.25)
Pentru (10.2, 21.25) endDist este 1.8062391868188448 iar r-eps este 0.020000000000000018
endDist Il apendeaza pe (10.2, 21.25) endDist 1.8062391868188448
startDist Il apendeaza pe (15.1, 23.75) startDist 3.780542289143185
Before swap start end (15.1, 23.75) (10.2, 21.25) 2 11
After swap start end (10.2, 21.25) (15.1, 23.75) 2 11
p1 = (11.55, 22.45)
startIdx = 3 obj (15.7, 23.75)
endIdx = 10 obj (10.6, 21.65)
startDIST = 4.348850422812906 obj (15.7, 23.75)
endDIST = 1.2419742348374232 obj (10.6, 21.65)
Pentru (10.6, 21.65) endDist este 1.2419742348374232 iar r-eps este 0.020000000000000018
endDist Il apendeaza pe (10.6, 21.65) endDist 1.2419742348374232
startDist Il apendeaza pe (15.7, 23.75) startDist 4.348850422812906
Before swap start end (15.7, 23.75) (10.6, 21.65) 3 10
After swap start end (10.6, 21.65) (15.7, 23.75) 3 10
p1 = (11.55, 22.45)
startIdx = 4 obj (13.45, 23.4)
endIdx = 9 obj (11.1, 22.15)
startDIST = 2.1242645786247984 obj (13.45, 23.4)
endDIST = 0.5408326913195997 obj (11.1, 22.15)
AL DOILEA WHILE startIdx = 4 obj (13.45, 23.4) start 2.1242645786247984
startDist Il apendeaza pe (13.45, 23.4) endDist 2.1242645786247984
AL DOILEA WHILE startIdx = 5 obj (13.05, 23.2) start 1.6770509831248424
startDist Il apendeaza pe (13.05, 23.2) endDist 1.6770509831248424
AL DOILEA WHILE startIdx = 6 obj (12.55, 23.0) start 1.141271221051333
startDist Il apendeaza pe (12.55, 23.0) endDist 1.141271221051333
AL DOILEA WHILE startIdx = 7 obj (11.95, 22.7) start 0.471699056602829
startDist Il apendeaza pe (11.95, 22.7) endDist 0.471699056602829
AL DOILEA WHILE startIdx = 8 obj (11.55, 22.45) start 0.0
sunt egale 9 9
========================= WIN L ===================
[(14.0, 23.55), (9.65, 20.8), (10.2, 21.25), (10.6, 21.65), (13.45, 23.4), (13.05, 23.2), (12.55, 23.0), (11.95, 22.7), (11.1, 22.15)]
========================= WIN L END ===================
========================= WIN G ===================
[(9.3, 20.3), (14.55, 23.6), (15.1, 23.75), (15.7, 23.75)]
========================= WIN G END ===================
========================= OBJS first half ===================
[(14.0, 23.55), (9.65, 20.8), (10.2, 21.25), (10.6, 21.65), (13.45, 23.4), (13.05, 23.2), (12.55, 23.0), (11.95, 22.7), (11.55, 22.45)]
========================= OBJS first half END ===================
========================= OBJS last half ===================
[(11.1, 22.15), (15.7, 23.75), (15.1, 23.75), (14.55, 23.6), (9.3, 20.3)]
========================= OBJS last half END ===================
nested loop vine din 
nested loop objs1, objs2 [][(9.3, 20.3), (14.55, 23.6), (15.1, 23.75), (15.7, 23.75)]
nested loop vine din 
nested loop objs1, objs2 [][(14.0, 23.55), (9.65, 20.8), (10.2, 21.25), (10.6, 21.65), (13.45, 23.4), (13.05, 23.2), (12.55, 23.0), (11.95, 22.7), (11.1, 22.15)]
nested loop vine din 
nested loop objs1, objs2 [][(14.0, 23.55), (9.65, 20.8), (10.2, 21.25), (10.6, 21.65), (13.45, 23.4), (13.05, 23.2), (12.55, 23.0), (11.95, 22.7), (11.55, 22.45), (11.1, 22.15)]
nested loop vine din 
nested loop objs1, objs2 [(15.25, 19.7), (15.0, 19.7), (15.95, 19.9), (14.85, 19.55), (14.45, 19.5), (15.55, 19.85)][(15.7, 23.75), (15.1, 23.75), (14.55, 23.6), (9.3, 20.3)]
Intra in win
win len(objs), len(objs1), len(objs2), constSmallNumber 5 | [(14.15, 19.25), (13.55, 18.85), (13.8, 19.05)] | [(16.55, 19.9), (16.2, 19.9)] | 10
nested loop vine din 
nested loop objs1, objs2 [(14.15, 19.25), (13.55, 18.85), (13.8, 19.05)][(16.55, 19.9), (16.2, 19.9)]
Intra in win
win len(objs), len(objs1), len(objs2), constSmallNumber 8 | [(15.25, 19.7), (15.0, 19.7), (15.95, 19.9), (14.85, 19.55), (14.45, 19.5), (15.55, 19.85)] | [(16.55, 19.9), (16.2, 19.9)] | 10
nested loop vine din 
nested loop objs1, objs2 [(15.25, 19.7), (15.0, 19.7), (15.95, 19.9), (14.85, 19.55), (14.45, 19.5), (15.55, 19.85)][(16.55, 19.9), (16.2, 19.9)]
Intra in win
win len(objs), len(objs1), len(objs2), constSmallNumber 18 | [(13.8, 19.05), (13.55, 18.85), (14.15, 19.25)] | [(8.9, 19.85), (9.3, 20.3), (9.65, 20.8), (10.2, 21.25), (10.6, 21.65), (11.1, 22.15), (11.55, 22.45), (11.95, 22.7), (12.55, 23.0), (13.05, 23.2), (13.45, 23.4), (15.7, 23.75), (15.1, 23.75), (14.55, 23.6), (14.0, 23.55)] | 10
p1 = (15.7, 23.75) len objs = 3
r is 0.48
new r is 0.48
p1 = (15.7, 23.75)
startIdx = 0 obj (13.8, 19.05)
endIdx = 2 obj (14.15, 19.25)
startDIST = 5.0695167422546294 obj (13.8, 19.05)
endDIST = 4.759464255564905 obj (14.15, 19.25)
PRIMUL WHILE endIdx = 2 obj (14.15, 19.25) endDist 4.759464255564905
PRIMUL WHILE endIdx = 1 obj (13.55, 18.85) endDist 5.35093449782372
sunt egale 0 0
========================= WIN L ===================
[]
========================= WIN L END ===================
========================= WIN G ===================
[]
========================= WIN G END ===================
========================= OBJS first half ===================
[(13.8, 19.05), (13.55, 18.85)]
========================= OBJS first half END ===================
========================= OBJS last half ===================
[(14.15, 19.25)]
========================= OBJS last half END ===================
p1 = (15.7, 23.75) len objs = 15
r is 3.03
new r is 3.03
p1 = (15.7, 23.75)
startIdx = 0 obj (8.9, 19.85)
endIdx = 14 obj (14.0, 23.55)
startDIST = 7.839005038906403 obj (8.9, 19.85)
endDIST = 1.7117242768623682 obj (14.0, 23.55)
Pentru (14.0, 23.55) endDist este 1.7117242768623682 iar r-eps este 0.22999999999999998
endDist Il apendeaza pe (14.0, 23.55) endDist 1.7117242768623682
Before swap start end (8.9, 19.85) (14.0, 23.55) 0 14
After swap start end (14.0, 23.55) (8.9, 19.85) 0 14
p1 = (15.7, 23.75)
startIdx = 1 obj (9.3, 20.3)
endIdx = 13 obj (14.55, 23.6)
startDIST = 7.270660217614352 obj (9.3, 20.3)
endDIST = 1.1597413504743186 obj (14.55, 23.6)
Pentru (14.55, 23.6) endDist este 1.1597413504743186 iar r-eps este 0.22999999999999998
endDist Il apendeaza pe (14.55, 23.6) endDist 1.1597413504743186
Before swap start end (9.3, 20.3) (14.55, 23.6) 1 13
After swap start end (14.55, 23.6) (9.3, 20.3) 1 13
p1 = (15.7, 23.75)
startIdx = 2 obj (9.65, 20.8)
endIdx = 12 obj (15.1, 23.75)
startDIST = 6.730898899849854 obj (9.65, 20.8)
endDIST = 0.5999999999999996 obj (15.1, 23.75)
Pentru (15.1, 23.75) endDist este 0.5999999999999996 iar r-eps este 0.22999999999999998
endDist Il apendeaza pe (15.1, 23.75) endDist 0.5999999999999996
Before swap start end (9.65, 20.8) (15.1, 23.75) 2 12
After swap start end (15.1, 23.75) (9.65, 20.8) 2 12
p1 = (15.7, 23.75)
startIdx = 3 obj (10.2, 21.25)
endIdx = 11 obj (15.7, 23.75)
startDIST = 6.041522986797286 obj (10.2, 21.25)
endDIST = 0.0 obj (15.7, 23.75)
Pentru (15.7, 23.75) endDist este 0.0 iar r-eps este 0.22999999999999998
Before swap start end (10.2, 21.25) (15.7, 23.75) 3 11
After swap start end (15.7, 23.75) (10.2, 21.25) 3 11
p1 = (15.7, 23.75)
startIdx = 4 obj (10.6, 21.65)
endIdx = 10 obj (13.45, 23.4)
startDIST = 5.515432893255071 obj (10.6, 21.65)
endDIST = 2.2770595073471402 obj (13.45, 23.4)
Pentru (13.45, 23.4) endDist este 2.2770595073471402 iar r-eps este 0.22999999999999998
endDist Il apendeaza pe (13.45, 23.4) endDist 2.2770595073471402
startDist Il apendeaza pe (10.6, 21.65) startDist 5.515432893255071
Before swap start end (10.6, 21.65) (13.45, 23.4) 4 10
After swap start end (13.45, 23.4) (10.6, 21.65) 4 10
p1 = (15.7, 23.75)
startIdx = 5 obj (11.1, 22.15)
endIdx = 9 obj (13.05, 23.2)
startDIST = 4.870318264754369 obj (11.1, 22.15)
endDIST = 2.7064737205448703 obj (13.05, 23.2)
Pentru (13.05, 23.2) endDist este 2.7064737205448703 iar r-eps este 0.22999999999999998
endDist Il apendeaza pe (13.05, 23.2) endDist 2.7064737205448703
startDist Il apendeaza pe (11.1, 22.15) startDist 4.870318264754369
Before swap start end (11.1, 22.15) (13.05, 23.2) 5 9
After swap start end (13.05, 23.2) (11.1, 22.15) 5 9
p1 = (15.7, 23.75)
startIdx = 6 obj (11.55, 22.45)
endIdx = 8 obj (12.55, 23.0)
startDIST = 4.348850422812906 obj (11.55, 22.45)
endDIST = 3.238054971738434 obj (12.55, 23.0)
PRIMUL WHILE endIdx = 8 obj (12.55, 23.0) endDist 3.238054971738434
endDist Il apendeaza pe (12.55, 23.0) endDist 3.238054971738434
PRIMUL WHILE endIdx = 7 obj (11.95, 22.7) endDist 3.894226495724151
endDist Il apendeaza pe (11.95, 22.7) endDist 3.894226495724151
sunt egale 6 6
========================= WIN L ===================
[(14.0, 23.55), (14.55, 23.6), (15.1, 23.75), (13.45, 23.4), (13.05, 23.2)]
========================= WIN L END ===================
========================= WIN G ===================
[(10.6, 21.65), (11.1, 22.15), (12.55, 23.0), (11.95, 22.7), (11.55, 22.45)]
========================= WIN G END ===================
========================= OBJS first half ===================
[(14.0, 23.55), (14.55, 23.6), (15.1, 23.75), (15.7, 23.75), (13.45, 23.4)]
========================= OBJS first half END ===================
========================= OBJS last half ===================
[(13.05, 23.2), (11.55, 22.45), (11.95, 22.7), (12.55, 23.0), (11.1, 22.15), (10.6, 21.65), (10.2, 21.25), (9.65, 20.8), (9.3, 20.3), (8.9, 19.85)]
========================= OBJS last half END ===================
nested loop vine din 
nested loop objs1, objs2 [][(10.6, 21.65), (11.1, 22.15), (12.55, 23.0), (11.95, 22.7), (11.55, 22.45)]
nested loop vine din 
nested loop objs1, objs2 [][(14.0, 23.55), (14.55, 23.6), (15.1, 23.75), (13.45, 23.4), (13.05, 23.2)]
nested loop vine din 
nested loop objs1, objs2 [][(14.0, 23.55), (14.55, 23.6), (15.1, 23.75), (15.7, 23.75), (13.45, 23.4), (13.05, 23.2)]
nested loop vine din 
nested loop objs1, objs2 [(13.8, 19.05), (13.55, 18.85), (14.15, 19.25)][(11.55, 22.45), (11.95, 22.7), (12.55, 23.0), (11.1, 22.15), (10.6, 21.65), (10.2, 21.25), (9.65, 20.8), (9.3, 20.3), (8.9, 19.85)]
quick len(objs), constSmallNumber 14 10
p1 = (12.55, 17.85) len objs = 14
r is 1.68
new r is 1.68
p1 = (12.55, 17.85)
startIdx = 0 obj (15.25, 19.7)
endIdx = 13 obj (15.55, 19.85)
startDIST = 3.2729955698106266 obj (15.25, 19.7)
endDIST = 3.605551275463989 obj (15.55, 19.85)
PRIMUL WHILE endIdx = 13 obj (15.55, 19.85) endDist 3.605551275463989
endDist Il apendeaza pe (15.55, 19.85) endDist 3.605551275463989
Pentru (12.3, 17.6) endDist este 0.3535533905932738 iar r-eps este -1.1199999999999999
endDist Il apendeaza pe (12.3, 17.6) endDist 0.3535533905932738
startDist Il apendeaza pe (15.25, 19.7) startDist 3.2729955698106266
Before swap start end (15.25, 19.7) (12.3, 17.6) 0 12
After swap start end (12.3, 17.6) (15.25, 19.7) 0 12
p1 = (12.55, 17.85)
startIdx = 1 obj (15.0, 19.7)
endIdx = 11 obj (12.55, 17.85)
startDIST = 3.070016286601749 obj (15.0, 19.7)
endDIST = 0.0 obj (12.55, 17.85)
Pentru (12.55, 17.85) endDist este 0.0 iar r-eps este -1.1199999999999999
endDist Il apendeaza pe (12.55, 17.85) endDist 0.0
startDist Il apendeaza pe (15.0, 19.7) startDist 3.070016286601749
Before swap start end (15.0, 19.7) (12.55, 17.85) 1 11
After swap start end (12.55, 17.85) (15.0, 19.7) 1 11
p1 = (12.55, 17.85)
startIdx = 2 obj (15.95, 19.9)
endIdx = 10 obj (12.8, 18.05)
startDIST = 3.9702015062210605 obj (15.95, 19.9)
endDIST = 0.320156211871642 obj (12.8, 18.05)
Pentru (12.8, 18.05) endDist este 0.320156211871642 iar r-eps este -1.1199999999999999
endDist Il apendeaza pe (12.8, 18.05) endDist 0.320156211871642
startDist Il apendeaza pe (15.95, 19.9) startDist 3.9702015062210605
Before swap start end (15.95, 19.9) (12.8, 18.05) 2 10
After swap start end (12.8, 18.05) (15.95, 19.9) 2 10
p1 = (12.55, 17.85)
startIdx = 3 obj (14.85, 19.55)
endIdx = 9 obj (13.1, 18.4)
startDIST = 2.860069929215017 obj (14.85, 19.55)
endDIST = 0.7778174593051995 obj (13.1, 18.4)
Pentru (13.1, 18.4) endDist este 0.7778174593051995 iar r-eps este -1.1199999999999999
endDist Il apendeaza pe (13.1, 18.4) endDist 0.7778174593051995
startDist Il apendeaza pe (14.85, 19.55) startDist 2.860069929215017
Before swap start end (14.85, 19.55) (13.1, 18.4) 3 9
After swap start end (13.1, 18.4) (14.85, 19.55) 3 9
p1 = (12.55, 17.85)
startIdx = 4 obj (14.45, 19.5)
endIdx = 8 obj (13.3, 18.6)
startDIST = 2.5164459064323217 obj (14.45, 19.5)
endDIST = 1.0606601717798212 obj (13.3, 18.6)
Pentru (13.3, 18.6) endDist este 1.0606601717798212 iar r-eps este -1.1199999999999999
endDist Il apendeaza pe (13.3, 18.6) endDist 1.0606601717798212
startDist Il apendeaza pe (14.45, 19.5) startDist 2.5164459064323217
Before swap start end (14.45, 19.5) (13.3, 18.6) 4 8
After swap start end (13.3, 18.6) (14.45, 19.5) 4 8
p1 = (12.55, 17.85)
startIdx = 5 obj (14.15, 19.25)
endIdx = 7 obj (13.55, 18.85)
startDIST = 2.1260291625469283 obj (14.15, 19.25)
endDIST = 1.4142135623730951 obj (13.55, 18.85)
Pentru (13.55, 18.85) endDist este 1.4142135623730951 iar r-eps este -1.1199999999999999
endDist Il apendeaza pe (13.55, 18.85) endDist 1.4142135623730951
startDist Il apendeaza pe (14.15, 19.25) startDist 2.1260291625469283
Before swap start end (14.15, 19.25) (13.55, 18.85) 5 7
After swap start end (13.55, 18.85) (14.15, 19.25) 5 7
sunt egale 6 6
========================= WIN L ===================
[(12.3, 17.6), (12.55, 17.85), (12.8, 18.05), (13.1, 18.4), (13.3, 18.6), (13.55, 18.85)]
========================= WIN L END ===================
========================= WIN G ===================
[(15.55, 19.85), (15.25, 19.7), (15.0, 19.7), (15.95, 19.9), (14.85, 19.55), (14.45, 19.5), (14.15, 19.25), (13.8, 19.05)]
========================= WIN G END ===================
========================= OBJS first half ===================
[(12.3, 17.6), (12.55, 17.85), (12.8, 18.05), (13.1, 18.4), (13.3, 18.6)]
========================= OBJS first half END ===================
========================= OBJS last half ===================
[(13.55, 18.85), (13.8, 19.05), (14.15, 19.25), (14.45, 19.5), (14.85, 19.55), (15.95, 19.9), (15.0, 19.7), (15.25, 19.7), (15.55, 19.85)]
========================= OBJS last half END ===================
Intra in win
win len(objs), len(objs1), len(objs2), constSmallNumber 14 | [(12.3, 17.6), (12.55, 17.85), (12.8, 18.05), (13.1, 18.4), (13.3, 18.6), (13.55, 18.85)] | [(15.55, 19.85), (15.25, 19.7), (15.0, 19.7), (15.95, 19.9), (14.85, 19.55), (14.45, 19.5), (14.15, 19.25), (13.8, 19.05)] | 10
p1 = (13.1, 18.4) len objs = 6
r is 0.83
new r is 0.83
p1 = (13.1, 18.4)
startIdx = 0 obj (12.3, 17.6)
endIdx = 5 obj (13.55, 18.85)
startDIST = 1.1313708498984734 obj (12.3, 17.6)
endDIST = 0.6363961030678955 obj (13.55, 18.85)
Pentru (13.55, 18.85) endDist este 0.6363961030678955 iar r-eps este -1.9699999999999998
endDist Il apendeaza pe (13.55, 18.85) endDist 0.6363961030678955
startDist Il apendeaza pe (12.3, 17.6) startDist 1.1313708498984734
Before swap start end (12.3, 17.6) (13.55, 18.85) 0 5
After swap start end (13.55, 18.85) (12.3, 17.6) 0 5
p1 = (13.1, 18.4)
startIdx = 1 obj (12.55, 17.85)
endIdx = 4 obj (13.3, 18.6)
startDIST = 0.7778174593051995 obj (12.55, 17.85)
endDIST = 0.2828427124746218 obj (13.3, 18.6)
AL DOILEA WHILE startIdx = 1 obj (12.55, 17.85) start 0.7778174593051995
startDist Il apendeaza pe (12.55, 17.85) endDist 0.7778174593051995
AL DOILEA WHILE startIdx = 2 obj (12.8, 18.05) start 0.46097722286464204
startDist Il apendeaza pe (12.8, 18.05) endDist 0.46097722286464204
AL DOILEA WHILE startIdx = 3 obj (13.1, 18.4) start 0.0
startDist Il apendeaza pe (13.1, 18.4) endDist 0.0
sunt egale 4 4
========================= WIN L ===================
[(13.55, 18.85), (12.55, 17.85), (12.8, 18.05), (13.1, 18.4), (13.3, 18.6)]
========================= WIN L END ===================
========================= WIN G ===================
[(12.3, 17.6)]
========================= WIN G END ===================
========================= OBJS first half ===================
[(13.55, 18.85), (12.55, 17.85), (12.8, 18.05), (13.1, 18.4)]
========================= OBJS first half END ===================
========================= OBJS last half ===================
[(13.3, 18.6), (12.3, 17.6)]
========================= OBJS last half END ===================
p1 = (13.1, 18.4) len objs = 8
r is 0.95
new r is 0.95
p1 = (13.1, 18.4)
startIdx = 0 obj (15.55, 19.85)
endIdx = 7 obj (13.8, 19.05)
startDIST = 2.846928169097354 obj (15.55, 19.85)
endDIST = 0.9552486587271423 obj (13.8, 19.05)
PRIMUL WHILE endIdx = 7 obj (13.8, 19.05) endDist 0.9552486587271423
endDist Il apendeaza pe (13.8, 19.05) endDist 0.9552486587271423
PRIMUL WHILE endIdx = 6 obj (14.15, 19.25) endDist 1.3509256086106312
endDist Il apendeaza pe (14.15, 19.25) endDist 1.3509256086106312
PRIMUL WHILE endIdx = 5 obj (14.45, 19.5) endDist 1.7414074767268006
endDist Il apendeaza pe (14.45, 19.5) endDist 1.7414074767268006
PRIMUL WHILE endIdx = 4 obj (14.85, 19.55) endDist 2.0940391591371936
endDist Il apendeaza pe (14.85, 19.55) endDist 2.0940391591371936
PRIMUL WHILE endIdx = 3 obj (15.95, 19.9) endDist 3.220636583037583
endDist Il apendeaza pe (15.95, 19.9) endDist 3.220636583037583
PRIMUL WHILE endIdx = 2 obj (15.0, 19.7) endDist 2.3021728866442683
endDist Il apendeaza pe (15.0, 19.7) endDist 2.3021728866442683
PRIMUL WHILE endIdx = 1 obj (15.25, 19.7) endDist 2.5124689052802234
endDist Il apendeaza pe (15.25, 19.7) endDist 2.5124689052802234
sunt egale 0 0
========================= WIN L ===================
[]
========================= WIN L END ===================
========================= WIN G ===================
[(13.8, 19.05), (14.15, 19.25), (14.45, 19.5), (14.85, 19.55), (15.95, 19.9), (15.0, 19.7), (15.25, 19.7), (15.55, 19.85)]
========================= WIN G END ===================
========================= OBJS first half ===================
[(15.55, 19.85), (15.25, 19.7), (15.0, 19.7), (15.95, 19.9), (14.85, 19.55), (14.45, 19.5), (14.15, 19.25)]
========================= OBJS first half END ===================
========================= OBJS last half ===================
[(13.8, 19.05)]
========================= OBJS last half END ===================
nested loop vine din 
nested loop objs1, objs2 [(13.55, 18.85), (12.55, 17.85), (12.8, 18.05), (13.1, 18.4), (13.3, 18.6)][(13.8, 19.05), (14.15, 19.25), (14.45, 19.5), (14.85, 19.55), (15.95, 19.9), (15.0, 19.7), (15.25, 19.7), (15.55, 19.85)]
nested loop vine din 
nested loop objs1, objs2 [(12.3, 17.6)][]
nested loop vine din 
nested loop objs1, objs2 [(13.55, 18.85), (12.55, 17.85), (12.8, 18.05), (13.1, 18.4), (13.3, 18.6)][]
nested loop vine din 
nested loop objs1, objs2 [(12.3, 17.6)][(15.55, 19.85), (15.25, 19.7), (15.0, 19.7), (15.95, 19.9), (14.85, 19.55), (14.45, 19.5), (14.15, 19.25), (13.8, 19.05)]
quick len(objs), constSmallNumber 6 10
quick len(objs), constSmallNumber 8 10
quick len(objs), constSmallNumber 19 10
p1 = (13.45, 23.4) len objs = 19
r is 3.71
new r is 3.71
p1 = (13.45, 23.4)
startIdx = 0 obj (14.0, 23.55)
endIdx = 18 obj (16.55, 19.9)
startDIST = 0.5700877125495702 obj (14.0, 23.55)
endDIST = 4.675467891024384 obj (16.55, 19.9)
PRIMUL WHILE endIdx = 18 obj (16.55, 19.9) endDist 4.675467891024384
endDist Il apendeaza pe (16.55, 19.9) endDist 4.675467891024384
PRIMUL WHILE endIdx = 17 obj (16.2, 19.9) endDist 4.451123453691214
endDist Il apendeaza pe (16.2, 19.9) endDist 4.451123453691214
PRIMUL WHILE endIdx = 16 obj (8.9, 19.85) endDist 5.771048431611017
endDist Il apendeaza pe (8.9, 19.85) endDist 5.771048431611017
PRIMUL WHILE endIdx = 15 obj (9.3, 20.3) endDist 5.180009652500657
endDist Il apendeaza pe (9.3, 20.3) endDist 5.180009652500657
PRIMUL WHILE endIdx = 14 obj (9.65, 20.8) endDist 4.604345773288533
endDist Il apendeaza pe (9.65, 20.8) endDist 4.604345773288533
PRIMUL WHILE endIdx = 13 obj (10.2, 21.25) endDist 3.8967935536797422
endDist Il apendeaza pe (10.2, 21.25) endDist 3.8967935536797422
AL DOILEA WHILE startIdx = 0 obj (14.0, 23.55) start 0.5700877125495702
AL DOILEA WHILE startIdx = 1 obj (14.55, 23.6) start 1.1180339887498967
startDist Il apendeaza pe (14.55, 23.6) endDist 1.1180339887498967
AL DOILEA WHILE startIdx = 2 obj (15.1, 23.75) start 1.6867127793433006
startDist Il apendeaza pe (15.1, 23.75) endDist 1.6867127793433006
AL DOILEA WHILE startIdx = 3 obj (15.7, 23.75) start 2.2770595073471402
startDist Il apendeaza pe (15.7, 23.75) endDist 2.2770595073471402
AL DOILEA WHILE startIdx = 4 obj (16.15, 23.85) start 2.7372431386341987
startDist Il apendeaza pe (16.15, 23.85) endDist 2.7372431386341987
AL DOILEA WHILE startIdx = 5 obj (16.7, 23.8) start 3.2745228660065884
startDist Il apendeaza pe (16.7, 23.8) endDist 3.2745228660065884
AL DOILEA WHILE startIdx = 6 obj (13.45, 23.4) start 0.0
AL DOILEA WHILE startIdx = 7 obj (13.05, 23.2) start 0.4472135954999563
AL DOILEA WHILE startIdx = 8 obj (12.55, 23.0) start 0.9848857801796086
startDist Il apendeaza pe (12.55, 23.0) endDist 0.9848857801796086
AL DOILEA WHILE startIdx = 9 obj (11.95, 22.7) start 1.6552945357246844
startDist Il apendeaza pe (11.95, 22.7) endDist 1.6552945357246844
AL DOILEA WHILE startIdx = 10 obj (11.55, 22.45) start 2.1242645786247984
startDist Il apendeaza pe (11.55, 22.45) endDist 2.1242645786247984
AL DOILEA WHILE startIdx = 11 obj (11.1, 22.15) start 2.6617663308412327
startDist Il apendeaza pe (11.1, 22.15) endDist 2.6617663308412327
sunt egale 12 12
========================= WIN L ===================
[(14.55, 23.6), (15.1, 23.75), (15.7, 23.75), (16.15, 23.85), (16.7, 23.8), (12.55, 23.0), (11.95, 22.7), (11.55, 22.45), (11.1, 22.15), (10.6, 21.65)]
========================= WIN L END ===================
========================= WIN G ===================
[(16.55, 19.9), (16.2, 19.9), (8.9, 19.85), (9.3, 20.3), (9.65, 20.8), (10.2, 21.25)]
========================= WIN G END ===================
========================= OBJS first half ===================
[(14.0, 23.55), (14.55, 23.6), (15.1, 23.75), (15.7, 23.75), (16.15, 23.85), (16.7, 23.8), (13.45, 23.4), (13.05, 23.2), (12.55, 23.0), (11.95, 22.7), (11.55, 22.45), (11.1, 22.15)]
========================= OBJS first half END ===================
========================= OBJS last half ===================
[(10.6, 21.65), (10.2, 21.25), (9.65, 20.8), (9.3, 20.3), (8.9, 19.85), (16.2, 19.9), (16.55, 19.9)]
========================= OBJS last half END ===================
Intra in win
win len(objs), len(objs1), len(objs2), constSmallNumber 16 | [(14.55, 23.6), (15.1, 23.75), (15.7, 23.75), (16.15, 23.85), (16.7, 23.8), (12.55, 23.0), (11.95, 22.7), (11.55, 22.45), (11.1, 22.15), (10.6, 21.65)] | [(16.55, 19.9), (16.2, 19.9), (8.9, 19.85), (9.3, 20.3), (9.65, 20.8), (10.2, 21.25)] | 10
p1 = (8.9, 19.85) len objs = 10
r is 2.9
new r is 2.9
p1 = (8.9, 19.85)
startIdx = 0 obj (14.55, 23.6)
endIdx = 9 obj (10.6, 21.65)
startDIST = 6.78122407829147 obj (14.55, 23.6)
endDIST = 2.475883680627987 obj (10.6, 21.65)
Pentru (10.6, 21.65) endDist este 2.475883680627987 iar r-eps este 0.10000000000000009
endDist Il apendeaza pe (10.6, 21.65) endDist 2.475883680627987
Before swap start end (14.55, 23.6) (10.6, 21.65) 0 9
After swap start end (10.6, 21.65) (14.55, 23.6) 0 9
p1 = (8.9, 19.85)
startIdx = 1 obj (15.1, 23.75)
endIdx = 8 obj (11.1, 22.15)
startDIST = 7.324616030891994 obj (15.1, 23.75)
endDIST = 3.182766092567907 obj (11.1, 22.15)
PRIMUL WHILE endIdx = 8 obj (11.1, 22.15) endDist 3.182766092567907
endDist Il apendeaza pe (11.1, 22.15) endDist 3.182766092567907
PRIMUL WHILE endIdx = 7 obj (11.55, 22.45) endDist 3.712478956169313
endDist Il apendeaza pe (11.55, 22.45) endDist 3.712478956169313
PRIMUL WHILE endIdx = 6 obj (11.95, 22.7) endDist 4.174326292948359
endDist Il apendeaza pe (11.95, 22.7) endDist 4.174326292948359
PRIMUL WHILE endIdx = 5 obj (12.55, 23.0) endDist 4.821306876771068
endDist Il apendeaza pe (12.55, 23.0) endDist 4.821306876771068
PRIMUL WHILE endIdx = 4 obj (16.7, 23.8) endDist 8.743140168154687
PRIMUL WHILE endIdx = 3 obj (16.15, 23.85) endDist 8.280247580839596
PRIMUL WHILE endIdx = 2 obj (15.7, 23.75) endDist 7.839005038906403
sunt egale 1 1
========================= WIN L ===================
[(10.6, 21.65)]
========================= WIN L END ===================
========================= WIN G ===================
[(11.1, 22.15), (11.55, 22.45), (11.95, 22.7), (12.55, 23.0)]
========================= WIN G END ===================
========================= OBJS first half ===================
[]
========================= OBJS first half END ===================
========================= OBJS last half ===================
[(10.6, 21.65), (15.1, 23.75), (15.7, 23.75), (16.15, 23.85), (16.7, 23.8), (12.55, 23.0), (11.95, 22.7), (11.55, 22.45), (11.1, 22.15), (14.55, 23.6)]
========================= OBJS last half END ===================
p1 = (8.9, 19.85) len objs = 6
r is 4.14
new r is 4.14
p1 = (8.9, 19.85)
startIdx = 0 obj (16.55, 19.9)
endIdx = 5 obj (10.2, 21.25)
startDIST = 7.650163396947807 obj (16.55, 19.9)
endDIST = 1.9104973174542783 obj (10.2, 21.25)
Pentru (10.2, 21.25) endDist este 1.9104973174542783 iar r-eps este 1.3399999999999999
endDist Il apendeaza pe (10.2, 21.25) endDist 1.9104973174542783
Before swap start end (16.55, 19.9) (10.2, 21.25) 0 5
After swap start end (10.2, 21.25) (16.55, 19.9) 0 5
p1 = (8.9, 19.85)
startIdx = 1 obj (16.2, 19.9)
endIdx = 4 obj (9.65, 20.8)
startDIST = 7.300171230868491 obj (16.2, 19.9)
endDIST = 1.2103718436910198 obj (9.65, 20.8)
Pentru (9.65, 20.8) endDist este 1.2103718436910198 iar r-eps este 1.3399999999999999
Before swap start end (16.2, 19.9) (9.65, 20.8) 1 4
After swap start end (9.65, 20.8) (16.2, 19.9) 1 4
p1 = (8.9, 19.85)
startIdx = 2 obj (8.9, 19.85)
endIdx = 3 obj (9.3, 20.3)
startDIST = 0.0 obj (8.9, 19.85)
endDIST = 0.6020797289396145 obj (9.3, 20.3)
AL DOILEA WHILE startIdx = 2 obj (8.9, 19.85) start 0.0
sunt egale 3 3
========================= WIN L ===================
[(10.2, 21.25)]
========================= WIN L END ===================
========================= WIN G ===================
[]
========================= WIN G END ===================
========================= OBJS first half ===================
[(10.2, 21.25), (9.65, 20.8), (8.9, 19.85)]
========================= OBJS first half END ===================
========================= OBJS last half ===================
[(9.3, 20.3), (16.2, 19.9), (16.55, 19.9)]
========================= OBJS last half END ===================
nested loop vine din 
nested loop objs1, objs2 [(10.6, 21.65)][]
nested loop vine din 
nested loop objs1, objs2 [(11.1, 22.15), (11.55, 22.45), (11.95, 22.7), (12.55, 23.0)][(10.2, 21.25)]
nested loop vine din 
nested loop objs1, objs2 [(10.6, 21.65)][(10.2, 21.25), (9.65, 20.8), (8.9, 19.85), (9.3, 20.3)]
nested loop vine din 
nested loop objs1, objs2 [(15.1, 23.75), (15.7, 23.75), (16.15, 23.85), (16.7, 23.8), (12.55, 23.0), (11.95, 22.7), (11.55, 22.45), (11.1, 22.15), (14.55, 23.6)][(16.2, 19.9), (16.55, 19.9)]
quick len(objs), constSmallNumber 13 10
p1 = (12.55, 23.0) len objs = 13
r is 2.54
new r is 2.54
p1 = (12.55, 23.0)
startIdx = 0 obj (14.0, 23.55)
endIdx = 12 obj (10.6, 21.65)
startDIST = 1.5508062419270818 obj (14.0, 23.55)
endDIST = 2.3717082451262863 obj (10.6, 21.65)
AL DOILEA WHILE startIdx = 0 obj (14.0, 23.55) start 1.5508062419270818
startDist Il apendeaza pe (14.0, 23.55) endDist 1.5508062419270818
AL DOILEA WHILE startIdx = 1 obj (14.55, 23.6) start 2.0880613017821106
startDist Il apendeaza pe (14.55, 23.6) endDist 2.0880613017821106
Pentru (10.6, 21.65) endDist este 2.3717082451262863 iar r-eps este -0.2599999999999998
endDist Il apendeaza pe (10.6, 21.65) endDist 2.3717082451262863
startDist Il apendeaza pe (15.1, 23.75) startDist 2.6580067720004013
Before swap start end (15.1, 23.75) (10.6, 21.65) 2 12
After swap start end (10.6, 21.65) (15.1, 23.75) 2 12
p1 = (12.55, 23.0)
startIdx = 3 obj (15.7, 23.75)
endIdx = 11 obj (11.1, 22.15)
startDIST = 3.238054971738434 obj (15.7, 23.75)
endDIST = 1.6807736313971628 obj (11.1, 22.15)
Pentru (11.1, 22.15) endDist este 1.6807736313971628 iar r-eps este -0.2599999999999998
endDist Il apendeaza pe (11.1, 22.15) endDist 1.6807736313971628
startDist Il apendeaza pe (15.7, 23.75) startDist 3.238054971738434
Before swap start end (15.7, 23.75) (11.1, 22.15) 3 11
After swap start end (11.1, 22.15) (15.7, 23.75) 3 11
p1 = (12.55, 23.0)
startIdx = 4 obj (16.15, 23.85)
endIdx = 10 obj (11.55, 22.45)
startDIST = 3.698986347636334 obj (16.15, 23.85)
endDIST = 1.141271221051333 obj (11.55, 22.45)
Pentru (11.55, 22.45) endDist este 1.141271221051333 iar r-eps este -0.2599999999999998
endDist Il apendeaza pe (11.55, 22.45) endDist 1.141271221051333
startDist Il apendeaza pe (16.15, 23.85) startDist 3.698986347636334
Before swap start end (16.15, 23.85) (11.55, 22.45) 4 10
After swap start end (11.55, 22.45) (16.15, 23.85) 4 10
p1 = (12.55, 23.0)
startIdx = 5 obj (16.7, 23.8)
endIdx = 9 obj (11.95, 22.7)
startDIST = 4.226405091800831 obj (16.7, 23.8)
endDIST = 0.6708203932499385 obj (11.95, 22.7)
Pentru (11.95, 22.7) endDist este 0.6708203932499385 iar r-eps este -0.2599999999999998
endDist Il apendeaza pe (11.95, 22.7) endDist 0.6708203932499385
startDist Il apendeaza pe (16.7, 23.8) startDist 4.226405091800831
Before swap start end (16.7, 23.8) (11.95, 22.7) 5 9
After swap start end (11.95, 22.7) (16.7, 23.8) 5 9
p1 = (12.55, 23.0)
startIdx = 6 obj (13.45, 23.4)
endIdx = 8 obj (12.55, 23.0)
startDIST = 0.9848857801796086 obj (13.45, 23.4)
endDIST = 0.0 obj (12.55, 23.0)
AL DOILEA WHILE startIdx = 6 obj (13.45, 23.4) start 0.9848857801796086
startDist Il apendeaza pe (13.45, 23.4) endDist 0.9848857801796086
AL DOILEA WHILE startIdx = 7 obj (13.05, 23.2) start 0.5385164807134502
startDist Il apendeaza pe (13.05, 23.2) endDist 0.5385164807134502
sunt egale 8 8
========================= WIN L ===================
[(14.0, 23.55), (14.55, 23.6), (10.6, 21.65), (11.1, 22.15), (11.55, 22.45), (11.95, 22.7), (13.45, 23.4), (13.05, 23.2), (12.55, 23.0)]
========================= WIN L END ===================
========================= WIN G ===================
[(15.1, 23.75), (15.7, 23.75), (16.15, 23.85), (16.7, 23.8)]
========================= WIN G END ===================
========================= OBJS first half ===================
[(14.0, 23.55), (14.55, 23.6), (10.6, 21.65), (11.1, 22.15), (11.55, 22.45), (11.95, 22.7), (13.45, 23.4), (13.05, 23.2)]
========================= OBJS first half END ===================
========================= OBJS last half ===================
[(12.55, 23.0), (16.7, 23.8), (16.15, 23.85), (15.7, 23.75), (15.1, 23.75)]
========================= OBJS last half END ===================
Intra in win
win len(objs), len(objs1), len(objs2), constSmallNumber 13 | [(14.0, 23.55), (14.55, 23.6), (10.6, 21.65), (11.1, 22.15), (11.55, 22.45), (11.95, 22.7), (13.45, 23.4), (13.05, 23.2), (12.55, 23.0)] | [(15.1, 23.75), (15.7, 23.75), (16.15, 23.85), (16.7, 23.8)] | 10
p1 = (11.1, 22.15) len objs = 9
r is 1.83
new r is 1.83
p1 = (11.1, 22.15)
startIdx = 0 obj (14.0, 23.55)
endIdx = 8 obj (12.55, 23.0)
startDIST = 3.220248437620925 obj (14.0, 23.55)
endDIST = 1.6807736313971628 obj (12.55, 23.0)
Pentru (12.55, 23.0) endDist este 1.6807736313971628 iar r-eps este -0.9699999999999998
endDist Il apendeaza pe (12.55, 23.0) endDist 1.6807736313971628
startDist Il apendeaza pe (14.0, 23.55) startDist 3.220248437620925
Before swap start end (14.0, 23.55) (12.55, 23.0) 0 8
After swap start end (12.55, 23.0) (14.0, 23.55) 0 8
p1 = (11.1, 22.15)
startIdx = 1 obj (14.55, 23.6)
endIdx = 7 obj (13.05, 23.2)
startDIST = 3.742325480232848 obj (14.55, 23.6)
endDIST = 2.2147234590350116 obj (13.05, 23.2)
PRIMUL WHILE endIdx = 7 obj (13.05, 23.2) endDist 2.2147234590350116
endDist Il apendeaza pe (13.05, 23.2) endDist 2.2147234590350116
PRIMUL WHILE endIdx = 6 obj (13.45, 23.4) endDist 2.6617663308412327
endDist Il apendeaza pe (13.45, 23.4) endDist 2.6617663308412327
Pentru (11.95, 22.7) endDist este 1.0124228365658294 iar r-eps este -0.9699999999999998
endDist Il apendeaza pe (11.95, 22.7) endDist 1.0124228365658294
startDist Il apendeaza pe (14.55, 23.6) startDist 3.742325480232848
Before swap start end (14.55, 23.6) (11.95, 22.7) 1 5
After swap start end (11.95, 22.7) (14.55, 23.6) 1 5
p1 = (11.1, 22.15)
startIdx = 2 obj (10.6, 21.65)
endIdx = 4 obj (11.55, 22.45)
startDIST = 0.7071067811865476 obj (10.6, 21.65)
endDIST = 0.5408326913195997 obj (11.55, 22.45)
AL DOILEA WHILE startIdx = 2 obj (10.6, 21.65) start 0.7071067811865476
startDist Il apendeaza pe (10.6, 21.65) endDist 0.7071067811865476
AL DOILEA WHILE startIdx = 3 obj (11.1, 22.15) start 0.0
startDist Il apendeaza pe (11.1, 22.15) endDist 0.0
sunt egale 4 4
========================= WIN L ===================
[(12.55, 23.0), (11.95, 22.7), (10.6, 21.65), (11.1, 22.15), (11.55, 22.45)]
========================= WIN L END ===================
========================= WIN G ===================
[(14.0, 23.55), (13.05, 23.2), (13.45, 23.4), (14.55, 23.6)]
========================= WIN G END ===================
========================= OBJS first half ===================
[(12.55, 23.0), (11.95, 22.7), (10.6, 21.65), (11.1, 22.15)]
========================= OBJS first half END ===================
========================= OBJS last half ===================
[(11.55, 22.45), (14.55, 23.6), (13.45, 23.4), (13.05, 23.2), (14.0, 23.55)]
========================= OBJS last half END ===================
p1 = (11.1, 22.15) len objs = 4
r is 0.88
new r is 0.88
p1 = (11.1, 22.15)
startIdx = 0 obj (15.1, 23.75)
endIdx = 3 obj (16.7, 23.8)
startDIST = 4.308131845707604 obj (15.1, 23.75)
endDIST = 5.838021925275719 obj (16.7, 23.8)
PRIMUL WHILE endIdx = 3 obj (16.7, 23.8) endDist 5.838021925275719
PRIMUL WHILE endIdx = 2 obj (16.15, 23.85) endDist 5.328461316365166
PRIMUL WHILE endIdx = 1 obj (15.7, 23.75) endDist 4.870318264754369
sunt egale 0 0
========================= WIN L ===================
[]
========================= WIN L END ===================
========================= WIN G ===================
[]
========================= WIN G END ===================
========================= OBJS first half ===================
[(15.1, 23.75), (15.7, 23.75), (16.15, 23.85)]
========================= OBJS first half END ===================
========================= OBJS last half ===================
[(16.7, 23.8)]
========================= OBJS last half END ===================
nested loop vine din 
nested loop objs1, objs2 [(12.55, 23.0), (11.95, 22.7), (10.6, 21.65), (11.1, 22.15), (11.55, 22.45)][]
nested loop vine din 
nested loop objs1, objs2 [(14.0, 23.55), (13.05, 23.2), (13.45, 23.4), (14.55, 23.6)][]
nested loop vine din 
nested loop objs1, objs2 [(12.55, 23.0), (11.95, 22.7), (10.6, 21.65), (11.1, 22.15), (11.55, 22.45)][]
nested loop vine din 
nested loop objs1, objs2 [(14.55, 23.6), (13.45, 23.4), (13.05, 23.2), (14.0, 23.55)][(15.1, 23.75), (15.7, 23.75), (16.15, 23.85), (16.7, 23.8)]
quick len(objs), constSmallNumber 9 10
quick len(objs), constSmallNumber 4 10
quick len(objs), constSmallNumber 6 10
quick len(objs), constSmallNumber 9 10
quick len(objs), constSmallNumber 114 10
p1 = (31.65, 18.15) len objs = 114
r is 11.53
new r is 11.53
p1 = (31.65, 18.15)
startIdx = 0 obj (23.2, 18.05)
endIdx = 113 obj (31.95, 7.95)
startDIST = 8.45059169526016 obj (23.2, 18.05)
endDIST = 10.204410811016968 obj (31.95, 7.95)
AL DOILEA WHILE startIdx = 0 obj (23.2, 18.05) start 8.45059169526016
AL DOILEA WHILE startIdx = 1 obj (23.2, 17.8) start 8.457245414436073
AL DOILEA WHILE startIdx = 2 obj (23.1, 17.45) start 8.578607113045797
AL DOILEA WHILE startIdx = 3 obj (23.05, 17.15) start 8.657944328765343
AL DOILEA WHILE startIdx = 4 obj (22.9, 16.9) start 8.838834764831844
startDist Il apendeaza pe (22.9, 16.9) endDist 8.838834764831844
AL DOILEA WHILE startIdx = 5 obj (22.85, 16.6) start 8.935463054593194
startDist Il apendeaza pe (22.85, 16.6) endDist 8.935463054593194
AL DOILEA WHILE startIdx = 6 obj (22.7, 16.4) start 9.119484634561319
startDist Il apendeaza pe (22.7, 16.4) endDist 9.119484634561319
AL DOILEA WHILE startIdx = 7 obj (22.6, 16.2) start 9.257699498255489
startDist Il apendeaza pe (22.6, 16.2) endDist 9.257699498255489
AL DOILEA WHILE startIdx = 8 obj (22.55, 16.05) start 9.339164844888431
startDist Il apendeaza pe (22.55, 16.05) endDist 9.339164844888431
AL DOILEA WHILE startIdx = 9 obj (22.4, 15.95) start 9.508022928032936
startDist Il apendeaza pe (22.4, 15.95) endDist 9.508022928032936
AL DOILEA WHILE startIdx = 10 obj (22.35, 15.8) start 9.592314632037459
startDist Il apendeaza pe (22.35, 15.8) endDist 9.592314632037459
AL DOILEA WHILE startIdx = 11 obj (22.2, 15.65) start 9.775095907457889
startDist Il apendeaza pe (22.2, 15.65) endDist 9.775095907457889
AL DOILEA WHILE startIdx = 12 obj (22.15, 15.55) start 9.849365461794987
startDist Il apendeaza pe (22.15, 15.55) endDist 9.849365461794987
AL DOILEA WHILE startIdx = 13 obj (22.0, 15.4) start 10.034191546906007
startDist Il apendeaza pe (22.0, 15.4) endDist 10.034191546906007
AL DOILEA WHILE startIdx = 14 obj (21.9, 15.3) start 10.158001772002207
startDist Il apendeaza pe (21.9, 15.3) endDist 10.158001772002207
AL DOILEA WHILE startIdx = 15 obj (21.85, 15.25) start 10.22007827758672
startDist Il apendeaza pe (21.85, 15.25) endDist 10.22007827758672
AL DOILEA WHILE startIdx = 16 obj (21.75, 15.15) start 10.344563789739999
startDist Il apendeaza pe (21.75, 15.15) endDist 10.344563789739999
AL DOILEA WHILE startIdx = 17 obj (21.65, 15.05) start 10.469479452198184
startDist Il apendeaza pe (21.65, 15.05) endDist 10.469479452198184
AL DOILEA WHILE startIdx = 18 obj (21.55, 15.0) start 10.57981568837567
startDist Il apendeaza pe (21.55, 15.0) endDist 10.57981568837567
AL DOILEA WHILE startIdx = 19 obj (21.5, 14.9) start 10.657626377388164
startDist Il apendeaza pe (21.5, 14.9) endDist 10.657626377388164
Pentru (31.95, 7.95) endDist este 10.204410811016968 iar r-eps este 8.73
endDist Il apendeaza pe (31.95, 7.95) endDist 10.204410811016968
Before swap start end (19.35, 31.65) (31.95, 7.95) 20 113
After swap start end (31.95, 7.95) (19.35, 31.65) 20 113
p1 = (31.65, 18.15)
startIdx = 21 obj (20.35, 31.45)
endIdx = 112 obj (31.15, 7.3)
startDIST = 17.45222048909536 obj (20.35, 31.45)
endDIST = 10.861514627343645 obj (31.15, 7.3)
Pentru (31.15, 7.3) endDist este 10.861514627343645 iar r-eps este 8.73
endDist Il apendeaza pe (31.15, 7.3) endDist 10.861514627343645
Before swap start end (20.35, 31.45) (31.15, 7.3) 21 112
After swap start end (31.15, 7.3) (20.35, 31.45) 21 112
p1 = (31.65, 18.15)
startIdx = 22 obj (21.35, 31.1)
endIdx = 111 obj (30.45, 6.65)
startDIST = 16.546676403435225 obj (21.35, 31.1)
endDIST = 11.562439189029275 obj (30.45, 6.65)
PRIMUL WHILE endIdx = 111 obj (30.45, 6.65) endDist 11.562439189029275
endDist Il apendeaza pe (30.45, 6.65) endDist 11.562439189029275
PRIMUL WHILE endIdx = 110 obj (29.7, 6.0) endDist 12.30548658119621
endDist Il apendeaza pe (29.7, 6.0) endDist 12.30548658119621
PRIMUL WHILE endIdx = 109 obj (28.9, 5.55) endDist 12.896608081197162
endDist Il apendeaza pe (28.9, 5.55) endDist 12.896608081197162
PRIMUL WHILE endIdx = 108 obj (28.05, 5.0) endDist 13.633873257442286
endDist Il apendeaza pe (28.05, 5.0) endDist 13.633873257442286
PRIMUL WHILE endIdx = 107 obj (27.2, 4.55) endDist 14.309524799936577
endDist Il apendeaza pe (27.2, 4.55) endDist 14.309524799936577
PRIMUL WHILE endIdx = 106 obj (26.35, 4.15) endDist 14.969635934116765
PRIMUL WHILE endIdx = 105 obj (25.4, 3.85) endDist 15.606168652170846
PRIMUL WHILE endIdx = 104 obj (24.6, 3.6) endDist 16.16802399800297
PRIMUL WHILE endIdx = 103 obj (23.6, 3.3) endDist 16.891565942801154
PRIMUL WHILE endIdx = 102 obj (22.75, 3.15) endDist 17.44161689752415
PRIMUL WHILE endIdx = 101 obj (21.85, 3.05) endDist 18.001388835309346
PRIMUL WHILE endIdx = 100 obj (20.9, 3.0) endDist 18.576463603172698
PRIMUL WHILE endIdx = 99 obj (20.0, 2.9) endDist 19.190752981579433
PRIMUL WHILE endIdx = 98 obj (19.1, 3.0) endDist 19.672950973354247
PRIMUL WHILE endIdx = 97 obj (18.2, 3.2) endDist 20.109823470135186
PRIMUL WHILE endIdx = 96 obj (17.3, 3.25) endDist 20.686529433425992
PRIMUL WHILE endIdx = 95 obj (16.55, 3.5) endDist 21.038833142548565
PRIMUL WHILE endIdx = 94 obj (15.7, 3.7) endDist 21.522197843157187
PRIMUL WHILE endIdx = 93 obj (14.85, 4.1) endDist 21.90074199656258
PRIMUL WHILE endIdx = 92 obj (17.15, 23.75) endDist 15.543809056984713
PRIMUL WHILE endIdx = 91 obj (17.75, 23.75) endDist 14.985659811966904
PRIMUL WHILE endIdx = 90 obj (18.2, 23.6) endDist 14.51223621637961
PRIMUL WHILE endIdx = 89 obj (18.65, 23.5) endDist 14.057827001354086
endDist Il apendeaza pe (18.65, 23.5) endDist 14.057827001354086
PRIMUL WHILE endIdx = 88 obj (19.1, 23.35) endDist 13.584642063742422
endDist Il apendeaza pe (19.1, 23.35) endDist 13.584642063742422
PRIMUL WHILE endIdx = 87 obj (19.6, 23.15) endDist 13.046168019767334
endDist Il apendeaza pe (19.6, 23.15) endDist 13.046168019767334
PRIMUL WHILE endIdx = 86 obj (20.0, 22.95) endDist 12.600099205958657
endDist Il apendeaza pe (20.0, 22.95) endDist 12.600099205958657
PRIMUL WHILE endIdx = 85 obj (20.4, 22.7) endDist 12.135279148004797
endDist Il apendeaza pe (20.4, 22.7) endDist 12.135279148004797
PRIMUL WHILE endIdx = 84 obj (20.7, 22.55) endDist 11.800953351318698
endDist Il apendeaza pe (20.7, 22.55) endDist 11.800953351318698
Pentru (21.0, 22.15) endDist este 11.376401012622575 iar r-eps este 8.73
endDist Il apendeaza pe (21.0, 22.15) endDist 11.376401012622575
Before swap start end (21.35, 31.1) (21.0, 22.15) 22 83
After swap start end (21.0, 22.15) (21.35, 31.1) 22 83
p1 = (31.65, 18.15)
startIdx = 23 obj (22.25, 30.9)
endIdx = 82 obj (21.45, 21.95)
startDIST = 15.840533450613334 obj (22.25, 30.9)
endDIST = 10.884851859350222 obj (21.45, 21.95)
Pentru (21.45, 21.95) endDist este 10.884851859350222 iar r-eps este 8.73
endDist Il apendeaza pe (21.45, 21.95) endDist 10.884851859350222
Before swap start end (22.25, 30.9) (21.45, 21.95) 23 82
After swap start end (21.45, 21.95) (22.25, 30.9) 23 82
p1 = (31.65, 18.15)
startIdx = 24 obj (23.2, 30.45)
endIdx = 81 obj (21.75, 21.55)
startDIST = 14.922885109790265 obj (23.2, 30.45)
endDIST = 10.467568963231146 obj (21.75, 21.55)
Pentru (21.75, 21.55) endDist este 10.467568963231146 iar r-eps este 8.73
endDist Il apendeaza pe (21.75, 21.55) endDist 10.467568963231146
Before swap start end (23.2, 30.45) (21.75, 21.55) 24 81
After swap start end (21.75, 21.55) (23.2, 30.45) 24 81
p1 = (31.65, 18.15)
startIdx = 25 obj (23.95, 30.05)
endIdx = 80 obj (22.0, 21.25)
startDIST = 14.173919711921613 obj (23.95, 30.05)
endDIST = 10.135704218257358 obj (22.0, 21.25)
Pentru (22.0, 21.25) endDist este 10.135704218257358 iar r-eps este 8.73
endDist Il apendeaza pe (22.0, 21.25) endDist 10.135704218257358
startDist Il apendeaza pe (23.95, 30.05) startDist 14.173919711921613
Before swap start end (23.95, 30.05) (22.0, 21.25) 25 80
After swap start end (22.0, 21.25) (23.95, 30.05) 25 80
p1 = (31.65, 18.15)
startIdx = 26 obj (24.9, 29.65)
endIdx = 79 obj (22.25, 21.0)
startDIST = 13.334635353094587 obj (24.9, 29.65)
endDIST = 9.822550585260428 obj (22.25, 21.0)
Pentru (22.25, 21.0) endDist este 9.822550585260428 iar r-eps este 8.73
endDist Il apendeaza pe (22.25, 21.0) endDist 9.822550585260428
startDist Il apendeaza pe (24.9, 29.65) startDist 13.334635353094587
Before swap start end (24.9, 29.65) (22.25, 21.0) 26 79
After swap start end (22.25, 21.0) (24.9, 29.65) 26 79
p1 = (31.65, 18.15)
startIdx = 27 obj (25.6, 29.05)
endIdx = 78 obj (22.5, 20.7)
startDIST = 12.466454989290261 obj (25.6, 29.05)
endDIST = 9.498684119392536 obj (22.5, 20.7)
Pentru (22.5, 20.7) endDist este 9.498684119392536 iar r-eps este 8.73
endDist Il apendeaza pe (22.5, 20.7) endDist 9.498684119392536
startDist Il apendeaza pe (25.6, 29.05) startDist 12.466454989290261
Before swap start end (25.6, 29.05) (22.5, 20.7) 27 78
After swap start end (22.5, 20.7) (25.6, 29.05) 27 78
p1 = (31.65, 18.15)
startIdx = 28 obj (26.35, 28.5)
endIdx = 77 obj (22.65, 20.35)
startDIST = 11.628090986916124 obj (26.35, 28.5)
endDIST = 9.264987857520376 obj (22.65, 20.35)
Pentru (22.65, 20.35) endDist este 9.264987857520376 iar r-eps este 8.73
endDist Il apendeaza pe (22.65, 20.35) endDist 9.264987857520376
startDist Il apendeaza pe (26.35, 28.5) startDist 11.628090986916124
Before swap start end (26.35, 28.5) (22.65, 20.35) 28 77
After swap start end (22.65, 20.35) (26.35, 28.5) 28 77
p1 = (31.65, 18.15)
startIdx = 29 obj (27.15, 27.9)
endIdx = 76 obj (22.75, 20.05)
startDIST = 10.738365797457265 obj (27.15, 27.9)
endDIST = 9.100549433962765 obj (22.75, 20.05)
AL DOILEA WHILE startIdx = 29 obj (27.15, 27.9) start 10.738365797457265
startDist Il apendeaza pe (27.15, 27.9) endDist 10.738365797457265
AL DOILEA WHILE startIdx = 30 obj (27.75, 27.35) start 9.992497185388649
startDist Il apendeaza pe (27.75, 27.35) endDist 9.992497185388649
AL DOILEA WHILE startIdx = 31 obj (28.3, 26.6) start 9.089829481348923
startDist Il apendeaza pe (28.3, 26.6) endDist 9.089829481348923
AL DOILEA WHILE startIdx = 32 obj (28.95, 25.85) start 8.159656855530141
AL DOILEA WHILE startIdx = 33 obj (29.5, 25.15) start 7.322738558763381
AL DOILEA WHILE startIdx = 34 obj (29.95, 24.45) start 6.525335240430182
AL DOILEA WHILE startIdx = 35 obj (30.4, 23.7) start 5.6890245209526045
AL DOILEA WHILE startIdx = 36 obj (30.6, 22.9) start 4.864668539582116
AL DOILEA WHILE startIdx = 37 obj (30.9, 22.1) start 4.020572098594927
AL DOILEA WHILE startIdx = 38 obj (31.25, 21.3) start 3.1752952618614874
AL DOILEA WHILE startIdx = 39 obj (31.35, 20.55) start 2.4186773244895665
AL DOILEA WHILE startIdx = 40 obj (31.5, 19.7) start 1.5572411502397443
AL DOILEA WHILE startIdx = 41 obj (31.55, 18.9) start 0.7566372975210776
AL DOILEA WHILE startIdx = 42 obj (31.65, 18.15) start 0.0
AL DOILEA WHILE startIdx = 43 obj (31.6, 17.35) start 0.8015609770940668
AL DOILEA WHILE startIdx = 44 obj (31.45, 16.55) start 1.6124515496597078
AL DOILEA WHILE startIdx = 45 obj (31.3, 15.8) start 2.375920874103342
AL DOILEA WHILE startIdx = 46 obj (31.15, 15.05) start 3.140063693621514
AL DOILEA WHILE startIdx = 47 obj (30.9, 14.35) start 3.8733060813728617
AL DOILEA WHILE startIdx = 48 obj (30.6, 13.65) start 4.620876540224807
AL DOILEA WHILE startIdx = 49 obj (30.3, 13.0) start 5.324002253943924
AL DOILEA WHILE startIdx = 50 obj (29.9, 12.3) start 6.106144446375304
AL DOILEA WHILE startIdx = 51 obj (29.5, 11.75) start 6.751481318940309
AL DOILEA WHILE startIdx = 52 obj (29.0, 11.15) start 7.484817967058382
AL DOILEA WHILE startIdx = 53 obj (28.5, 10.6) start 8.180770134895612
AL DOILEA WHILE startIdx = 54 obj (28.0, 10.1) start 8.838834764831843
startDist Il apendeaza pe (28.0, 10.1) endDist 8.838834764831843
AL DOILEA WHILE startIdx = 55 obj (27.55, 9.65) start 9.437160589923218
startDist Il apendeaza pe (27.55, 9.65) endDist 9.437160589923218
AL DOILEA WHILE startIdx = 56 obj (26.9, 9.1) start 10.220812100806862
startDist Il apendeaza pe (26.9, 9.1) endDist 10.220812100806862
AL DOILEA WHILE startIdx = 57 obj (26.25, 8.8) start 10.79733763480609
startDist Il apendeaza pe (26.25, 8.8) endDist 10.79733763480609
AL DOILEA WHILE startIdx = 58 obj (25.7, 8.4) start 11.422127647684558
startDist Il apendeaza pe (25.7, 8.4) endDist 11.422127647684558
Pentru (22.75, 20.05) endDist este 9.100549433962765 iar r-eps este 8.73
endDist Il apendeaza pe (22.75, 20.05) endDist 9.100549433962765
startDist Il apendeaza pe (25.15, 8.05) startDist 12.010828447696685
Before swap start end (25.15, 8.05) (22.75, 20.05) 59 76
After swap start end (22.75, 20.05) (25.15, 8.05) 59 76
p1 = (31.65, 18.15)
startIdx = 60 obj (24.5, 7.75)
endIdx = 75 obj (22.9, 19.65)
startDIST = 12.620717095315937 obj (24.5, 7.75)
endDIST = 8.877640452282352 obj (22.9, 19.65)
Pentru (22.9, 19.65) endDist este 8.877640452282352 iar r-eps este 8.73
endDist Il apendeaza pe (22.9, 19.65) endDist 8.877640452282352
startDist Il apendeaza pe (24.5, 7.75) startDist 12.620717095315937
Before swap start end (24.5, 7.75) (22.9, 19.65) 60 75
After swap start end (22.9, 19.65) (24.5, 7.75) 60 75
p1 = (31.65, 18.15)
startIdx = 61 obj (23.9, 7.65)
endIdx = 74 obj (23.0, 19.35)
startDIST = 13.050383136138185 obj (23.9, 7.65)
endDIST = 8.732840316872855 obj (23.0, 19.35)
Pentru (23.0, 19.35) endDist este 8.732840316872855 iar r-eps este 8.73
endDist Il apendeaza pe (23.0, 19.35) endDist 8.732840316872855
startDist Il apendeaza pe (23.9, 7.65) startDist 13.050383136138185
Before swap start end (23.9, 7.65) (23.0, 19.35) 61 74
After swap start end (23.0, 19.35) (23.9, 7.65) 61 74
p1 = (31.65, 18.15)
startIdx = 62 obj (23.15, 7.4)
endIdx = 73 obj (23.1, 19.0)
startDIST = 13.704470073665743 obj (23.15, 7.4)
endDIST = 8.592147577875973 obj (23.1, 19.0)
Pentru (23.1, 19.0) endDist este 8.592147577875973 iar r-eps este 8.73
startDist Il apendeaza pe (23.15, 7.4) startDist 13.704470073665743
Before swap start end (23.15, 7.4) (23.1, 19.0) 62 73
After swap start end (23.1, 19.0) (23.15, 7.4) 62 73
p1 = (31.65, 18.15)
startIdx = 63 obj (22.5, 7.3)
endIdx = 72 obj (23.15, 18.65)
startDIST = 14.193132141990363 obj (22.5, 7.3)
endDIST = 8.514693182963201 obj (23.15, 18.65)
Pentru (23.15, 18.65) endDist este 8.514693182963201 iar r-eps este 8.73
startDist Il apendeaza pe (22.5, 7.3) startDist 14.193132141990363
Before swap start end (22.5, 7.3) (23.15, 18.65) 63 72
After swap start end (23.15, 18.65) (22.5, 7.3) 63 72
p1 = (31.65, 18.15)
startIdx = 64 obj (21.9, 7.1)
endIdx = 71 obj (23.2, 18.25)
startDIST = 14.736519263381023 obj (21.9, 7.1)
endDIST = 8.45059169526016 obj (23.2, 18.25)
Pentru (23.2, 18.25) endDist este 8.45059169526016 iar r-eps este 8.73
Before swap start end (21.9, 7.1) (23.2, 18.25) 64 71
After swap start end (23.2, 18.25) (21.9, 7.1) 64 71
p1 = (31.65, 18.15)
startIdx = 65 obj (21.25, 7.05)
endIdx = 70 obj (18.05, 7.25)
startDIST = 15.21085138971517 obj (21.25, 7.05)
endDIST = 17.428998823799372 obj (18.05, 7.25)
PRIMUL WHILE endIdx = 70 obj (18.05, 7.25) endDist 17.428998823799372
PRIMUL WHILE endIdx = 69 obj (18.75, 7.1) endDist 16.98565571298323
PRIMUL WHILE endIdx = 68 obj (19.25, 7.05) endDist 16.642415690037307
PRIMUL WHILE endIdx = 67 obj (19.9, 6.95) endDist 16.232760085703234
PRIMUL WHILE endIdx = 66 obj (20.5, 7.0) endDist 15.768481220460007
sunt egale 65 65
========================= WIN L ===================
[(22.9, 16.9), (22.85, 16.6), (22.7, 16.4), (22.6, 16.2), (22.55, 16.05), (22.4, 15.95), (22.35, 15.8), (22.2, 15.65), (22.15, 15.55), (22.0, 15.4), (21.9, 15.3), (21.85, 15.25), (21.75, 15.15), (21.65, 15.05), (21.55, 15.0), (21.5, 14.9), (31.95, 7.95), (31.15, 7.3), (21.0, 22.15), (21.45, 21.95), (21.75, 21.55), (22.0, 21.25), (22.25, 21.0), (22.5, 20.7), (22.65, 20.35), (27.15, 27.9), (27.75, 27.35), (28.3, 26.6), (28.0, 10.1), (27.55, 9.65), (26.9, 9.1), (26.25, 8.8), (25.7, 8.4), (22.75, 20.05), (22.9, 19.65), (23.0, 19.35)]
========================= WIN L END ===================
========================= WIN G ===================
[(30.45, 6.65), (29.7, 6.0), (28.9, 5.55), (28.05, 5.0), (27.2, 4.55), (18.65, 23.5), (19.1, 23.35), (19.6, 23.15), (20.0, 22.95), (20.4, 22.7), (20.7, 22.55), (23.95, 30.05), (24.9, 29.65), (25.6, 29.05), (26.35, 28.5), (25.15, 8.05), (24.5, 7.75), (23.9, 7.65), (23.15, 7.4), (22.5, 7.3)]
========================= WIN G END ===================
========================= OBJS first half ===================
[(23.2, 18.05), (23.2, 17.8), (23.1, 17.45), (23.05, 17.15), (22.9, 16.9), (22.85, 16.6), (22.7, 16.4), (22.6, 16.2), (22.55, 16.05), (22.4, 15.95), (22.35, 15.8), (22.2, 15.65), (22.15, 15.55), (22.0, 15.4), (21.9, 15.3), (21.85, 15.25), (21.75, 15.15), (21.65, 15.05), (21.55, 15.0), (21.5, 14.9), (31.95, 7.95), (31.15, 7.3), (21.0, 22.15), (21.45, 21.95), (21.75, 21.55), (22.0, 21.25), (22.25, 21.0), (22.5, 20.7), (22.65, 20.35), (27.15, 27.9), (27.75, 27.35), (28.3, 26.6), (28.95, 25.85), (29.5, 25.15), (29.95, 24.45), (30.4, 23.7), (30.6, 22.9), (30.9, 22.1), (31.25, 21.3), (31.35, 20.55), (31.5, 19.7), (31.55, 18.9), (31.65, 18.15), (31.6, 17.35), (31.45, 16.55), (31.3, 15.8), (31.15, 15.05), (30.9, 14.35), (30.6, 13.65), (30.3, 13.0), (29.9, 12.3), (29.5, 11.75), (29.0, 11.15), (28.5, 10.6), (28.0, 10.1), (27.55, 9.65), (26.9, 9.1), (26.25, 8.8), (25.7, 8.4), (22.75, 20.05), (22.9, 19.65), (23.0, 19.35), (23.1, 19.0), (23.15, 18.65)]
========================= OBJS first half END ===================
========================= OBJS last half ===================
[(23.2, 18.25), (21.25, 7.05), (20.5, 7.0), (19.9, 6.95), (19.25, 7.05), (18.75, 7.1), (18.05, 7.25), (21.9, 7.1), (22.5, 7.3), (23.15, 7.4), (23.9, 7.65), (24.5, 7.75), (25.15, 8.05), (26.35, 28.5), (25.6, 29.05), (24.9, 29.65), (23.95, 30.05), (23.2, 30.45), (22.25, 30.9), (21.35, 31.1), (20.7, 22.55), (20.4, 22.7), (20.0, 22.95), (19.6, 23.15), (19.1, 23.35), (18.65, 23.5), (18.2, 23.6), (17.75, 23.75), (17.15, 23.75), (14.85, 4.1), (15.7, 3.7), (16.55, 3.5), (17.3, 3.25), (18.2, 3.2), (19.1, 3.0), (20.0, 2.9), (20.9, 3.0), (21.85, 3.05), (22.75, 3.15), (23.6, 3.3), (24.6, 3.6), (25.4, 3.85), (26.35, 4.15), (27.2, 4.55), (28.05, 5.0), (28.9, 5.55), (29.7, 6.0), (30.45, 6.65), (20.35, 31.45), (19.35, 31.65)]
========================= OBJS last half END ===================
Intra in win
win len(objs), len(objs1), len(objs2), constSmallNumber 56 | [(22.9, 16.9), (22.85, 16.6), (22.7, 16.4), (22.6, 16.2), (22.55, 16.05), (22.4, 15.95), (22.35, 15.8), (22.2, 15.65), (22.15, 15.55), (22.0, 15.4), (21.9, 15.3), (21.85, 15.25), (21.75, 15.15), (21.65, 15.05), (21.55, 15.0), (21.5, 14.9), (31.95, 7.95), (31.15, 7.3), (21.0, 22.15), (21.45, 21.95), (21.75, 21.55), (22.0, 21.25), (22.25, 21.0), (22.5, 20.7), (22.65, 20.35), (27.15, 27.9), (27.75, 27.35), (28.3, 26.6), (28.0, 10.1), (27.55, 9.65), (26.9, 9.1), (26.25, 8.8), (25.7, 8.4), (22.75, 20.05), (22.9, 19.65), (23.0, 19.35)] | [(30.45, 6.65), (29.7, 6.0), (28.9, 5.55), (28.05, 5.0), (27.2, 4.55), (18.65, 23.5), (19.1, 23.35), (19.6, 23.15), (20.0, 22.95), (20.4, 22.7), (20.7, 22.55), (23.95, 30.05), (24.9, 29.65), (25.6, 29.05), (26.35, 28.5), (25.15, 8.05), (24.5, 7.75), (23.9, 7.65), (23.15, 7.4), (22.5, 7.3)] | 10
p1 = (25.15, 8.05) len objs = 36
r is 6.87
new r is 6.87
p1 = (25.15, 8.05)
startIdx = 0 obj (22.9, 16.9)
endIdx = 35 obj (23.0, 19.35)
startDIST = 9.131538753134652 obj (22.9, 16.9)
endDIST = 11.502717070327341 obj (23.0, 19.35)
PRIMUL WHILE endIdx = 35 obj (23.0, 19.35) endDist 11.502717070327341
PRIMUL WHILE endIdx = 34 obj (22.9, 19.65) endDist 11.816196511568346
PRIMUL WHILE endIdx = 33 obj (22.75, 20.05) endDist 12.237646832622683
Pentru (25.7, 8.4) endDist este 0.6519202405202652 iar r-eps este 4.07
startDist Il apendeaza pe (22.9, 16.9) startDist 9.131538753134652
Before swap start end (22.9, 16.9) (25.7, 8.4) 0 32
After swap start end (25.7, 8.4) (22.9, 16.9) 0 32
p1 = (25.15, 8.05)
startIdx = 1 obj (22.85, 16.6)
endIdx = 31 obj (26.25, 8.8)
startDIST = 8.85395391901268 obj (22.85, 16.6)
endDIST = 1.331352695569436 obj (26.25, 8.8)
Pentru (26.25, 8.8) endDist este 1.331352695569436 iar r-eps este 4.07
startDist Il apendeaza pe (22.85, 16.6) startDist 8.85395391901268
Before swap start end (22.85, 16.6) (26.25, 8.8) 1 31
After swap start end (26.25, 8.8) (22.85, 16.6) 1 31
p1 = (25.15, 8.05)
startIdx = 2 obj (22.7, 16.4)
endIdx = 30 obj (26.9, 9.1)
startDIST = 8.702011261771613 obj (22.7, 16.4)
endDIST = 2.0408331631958547 obj (26.9, 9.1)
Pentru (26.9, 9.1) endDist este 2.0408331631958547 iar r-eps este 4.07
startDist Il apendeaza pe (22.7, 16.4) startDist 8.702011261771613
Before swap start end (22.7, 16.4) (26.9, 9.1) 2 30
After swap start end (26.9, 9.1) (22.7, 16.4) 2 30
p1 = (25.15, 8.05)
startIdx = 3 obj (22.6, 16.2)
endIdx = 29 obj (27.55, 9.65)
startDIST = 8.539613574395505 obj (22.6, 16.2)
endDIST = 2.884441020371193 obj (27.55, 9.65)
Pentru (27.55, 9.65) endDist este 2.884441020371193 iar r-eps este 4.07
startDist Il apendeaza pe (22.6, 16.2) startDist 8.539613574395505
Before swap start end (22.6, 16.2) (27.55, 9.65) 3 29
After swap start end (27.55, 9.65) (22.6, 16.2) 3 29
p1 = (25.15, 8.05)
startIdx = 4 obj (22.55, 16.05)
endIdx = 28 obj (28.0, 10.1)
startDIST = 8.411896337925235 obj (22.55, 16.05)
endDIST = 3.510697936308392 obj (28.0, 10.1)
Pentru (28.0, 10.1) endDist este 3.510697936308392 iar r-eps este 4.07
startDist Il apendeaza pe (22.55, 16.05) startDist 8.411896337925235
Before swap start end (22.55, 16.05) (28.0, 10.1) 4 28
After swap start end (28.0, 10.1) (22.55, 16.05) 4 28
p1 = (25.15, 8.05)
startIdx = 5 obj (22.4, 15.95)
endIdx = 27 obj (28.3, 26.6)
startDIST = 8.364956664561985 obj (22.4, 15.95)
endDIST = 18.815552078001858 obj (28.3, 26.6)
PRIMUL WHILE endIdx = 27 obj (28.3, 26.6) endDist 18.815552078001858
PRIMUL WHILE endIdx = 26 obj (27.75, 27.35) endDist 19.474342094150447
PRIMUL WHILE endIdx = 25 obj (27.15, 27.9) endDist 19.950501246835877
PRIMUL WHILE endIdx = 24 obj (22.65, 20.35) endDist 12.551493934986386
PRIMUL WHILE endIdx = 23 obj (22.5, 20.7) endDist 12.924588968319261
PRIMUL WHILE endIdx = 22 obj (22.25, 21.0) endDist 13.270738487363843
PRIMUL WHILE endIdx = 21 obj (22.0, 21.25) endDist 13.570648473820253
PRIMUL WHILE endIdx = 20 obj (21.75, 21.55) endDist 13.921566003866088
PRIMUL WHILE endIdx = 19 obj (21.45, 21.95) endDist 14.384018909887457
PRIMUL WHILE endIdx = 18 obj (21.0, 22.15) endDist 14.698044087564847
Pentru (31.15, 7.3) endDist este 6.046693311223912 iar r-eps este 4.07
endDist Il apendeaza pe (31.15, 7.3) endDist 6.046693311223912
startDist Il apendeaza pe (22.4, 15.95) startDist 8.364956664561985
Before swap start end (22.4, 15.95) (31.15, 7.3) 5 17
After swap start end (31.15, 7.3) (22.4, 15.95) 5 17
p1 = (25.15, 8.05)
startIdx = 6 obj (22.35, 15.8)
endIdx = 16 obj (31.95, 7.95)
startDIST = 8.240297324732888 obj (22.35, 15.8)
endDIST = 6.800735254367722 obj (31.95, 7.95)
Pentru (31.95, 7.95) endDist este 6.800735254367722 iar r-eps este 4.07
endDist Il apendeaza pe (31.95, 7.95) endDist 6.800735254367722
startDist Il apendeaza pe (22.35, 15.8) startDist 8.240297324732888
Before swap start end (22.35, 15.8) (31.95, 7.95) 6 16
After swap start end (31.95, 7.95) (22.35, 15.8) 6 16
p1 = (25.15, 8.05)
startIdx = 7 obj (22.2, 15.65)
endIdx = 15 obj (21.5, 14.9)
startDIST = 8.152453618389988 obj (22.2, 15.65)
endDIST = 7.761765263134411 obj (21.5, 14.9)
PRIMUL WHILE endIdx = 15 obj (21.5, 14.9) endDist 7.761765263134411
endDist Il apendeaza pe (21.5, 14.9) endDist 7.761765263134411
PRIMUL WHILE endIdx = 14 obj (21.55, 15.0) endDist 7.827036476214991
endDist Il apendeaza pe (21.55, 15.0) endDist 7.827036476214991
PRIMUL WHILE endIdx = 13 obj (21.65, 15.05) endDist 7.826237921249264
endDist Il apendeaza pe (21.65, 15.05) endDist 7.826237921249264
PRIMUL WHILE endIdx = 12 obj (21.75, 15.15) endDist 7.872102641607259
endDist Il apendeaza pe (21.75, 15.15) endDist 7.872102641607259
PRIMUL WHILE endIdx = 11 obj (21.85, 15.25) endDist 7.92022726946645
endDist Il apendeaza pe (21.85, 15.25) endDist 7.92022726946645
PRIMUL WHILE endIdx = 10 obj (21.9, 15.3) endDist 7.945124291035352
endDist Il apendeaza pe (21.9, 15.3) endDist 7.945124291035352
PRIMUL WHILE endIdx = 9 obj (22.0, 15.4) endDist 7.9965617611571025
endDist Il apendeaza pe (22.0, 15.4) endDist 7.9965617611571025
PRIMUL WHILE endIdx = 8 obj (22.15, 15.55) endDist 8.077747210701755
endDist Il apendeaza pe (22.15, 15.55) endDist 8.077747210701755
sunt egale 7 7
========================= WIN L ===================
[(31.15, 7.3), (31.95, 7.95)]
========================= WIN L END ===================
========================= WIN G ===================
[(22.9, 16.9), (22.85, 16.6), (22.7, 16.4), (22.6, 16.2), (22.55, 16.05), (22.4, 15.95), (22.35, 15.8), (21.5, 14.9), (21.55, 15.0), (21.65, 15.05), (21.75, 15.15), (21.85, 15.25), (21.9, 15.3), (22.0, 15.4), (22.15, 15.55), (22.2, 15.65)]
========================= WIN G END ===================
========================= OBJS first half ===================
[(25.7, 8.4), (26.25, 8.8), (26.9, 9.1), (27.55, 9.65), (28.0, 10.1), (31.15, 7.3)]
========================= OBJS first half END ===================
========================= OBJS last half ===================
[(31.95, 7.95), (22.2, 15.65), (22.15, 15.55), (22.0, 15.4), (21.9, 15.3), (21.85, 15.25), (21.75, 15.15), (21.65, 15.05), (21.55, 15.0), (21.5, 14.9), (22.35, 15.8), (22.4, 15.95), (21.0, 22.15), (21.45, 21.95), (21.75, 21.55), (22.0, 21.25), (22.25, 21.0), (22.5, 20.7), (22.65, 20.35), (27.15, 27.9), (27.75, 27.35), (28.3, 26.6), (22.55, 16.05), (22.6, 16.2), (22.7, 16.4), (22.85, 16.6), (22.9, 16.9), (22.75, 20.05), (22.9, 19.65), (23.0, 19.35)]
========================= OBJS last half END ===================
p1 = (25.15, 8.05) len objs = 20
r is 12.58
new r is 12.58
p1 = (25.15, 8.05)
startIdx = 0 obj (30.45, 6.65)
endIdx = 19 obj (22.5, 7.3)
startDIST = 5.481788029466299 obj (30.45, 6.65)
endDIST = 2.754087870784081 obj (22.5, 7.3)
AL DOILEA WHILE startIdx = 0 obj (30.45, 6.65) start 5.481788029466299
AL DOILEA WHILE startIdx = 1 obj (29.7, 6.0) start 4.990490957811668
AL DOILEA WHILE startIdx = 2 obj (28.9, 5.55) start 4.506939094329987
AL DOILEA WHILE startIdx = 3 obj (28.05, 5.0) start 4.208622102303795
AL DOILEA WHILE startIdx = 4 obj (27.2, 4.55) start 4.0561681424714155
Pentru (22.5, 7.3) endDist este 2.754087870784081 iar r-eps este 9.780000000000001
Before swap start end (18.65, 23.5) (22.5, 7.3) 5 19
After swap start end (22.5, 7.3) (18.65, 23.5) 5 19
p1 = (25.15, 8.05)
startIdx = 6 obj (19.1, 23.35)
endIdx = 18 obj (23.15, 7.4)
startDIST = 16.452735334891884 obj (19.1, 23.35)
endDIST = 2.102974084481309 obj (23.15, 7.4)
Pentru (23.15, 7.4) endDist este 2.102974084481309 iar r-eps este 9.780000000000001
Before swap start end (19.1, 23.35) (23.15, 7.4) 6 18
After swap start end (23.15, 7.4) (19.1, 23.35) 6 18
p1 = (25.15, 8.05)
startIdx = 7 obj (19.6, 23.15)
endIdx = 17 obj (23.9, 7.65)
startDIST = 16.087650543196165 obj (19.6, 23.15)
endDIST = 1.3124404748406688 obj (23.9, 7.65)
Pentru (23.9, 7.65) endDist este 1.3124404748406688 iar r-eps este 9.780000000000001
Before swap start end (19.6, 23.15) (23.9, 7.65) 7 17
After swap start end (23.9, 7.65) (19.6, 23.15) 7 17
p1 = (25.15, 8.05)
startIdx = 8 obj (20.0, 22.95)
endIdx = 16 obj (24.5, 7.75)
startDIST = 15.764913574136711 obj (20.0, 22.95)
endDIST = 0.7158910531638167 obj (24.5, 7.75)
Pentru (24.5, 7.75) endDist este 0.7158910531638167 iar r-eps este 9.780000000000001
Before swap start end (20.0, 22.95) (24.5, 7.75) 8 16
After swap start end (24.5, 7.75) (20.0, 22.95) 8 16
p1 = (25.15, 8.05)
startIdx = 9 obj (20.4, 22.7)
endIdx = 15 obj (25.15, 8.05)
startDIST = 15.400811666921973 obj (20.4, 22.7)
endDIST = 0.0 obj (25.15, 8.05)
Pentru (25.15, 8.05) endDist este 0.0 iar r-eps este 9.780000000000001
Before swap start end (20.4, 22.7) (25.15, 8.05) 9 15
After swap start end (25.15, 8.05) (20.4, 22.7) 9 15
p1 = (25.15, 8.05)
startIdx = 10 obj (20.7, 22.55)
endIdx = 14 obj (26.35, 28.5)
startDIST = 15.16748166308435 obj (20.7, 22.55)
endDIST = 20.485177568183293 obj (26.35, 28.5)
PRIMUL WHILE endIdx = 14 obj (26.35, 28.5) endDist 20.485177568183293
PRIMUL WHILE endIdx = 13 obj (25.6, 29.05) endDist 21.004820875218147
PRIMUL WHILE endIdx = 12 obj (24.9, 29.65) endDist 21.601446710810826
PRIMUL WHILE endIdx = 11 obj (23.95, 30.05) endDist 22.03270296627266
sunt egale 10 10
========================= WIN L ===================
[]
========================= WIN L END ===================
========================= WIN G ===================
[(20.7, 22.55)]
========================= WIN G END ===================
========================= OBJS first half ===================
[(30.45, 6.65), (29.7, 6.0), (28.9, 5.55), (28.05, 5.0), (27.2, 4.55), (22.5, 7.3), (23.15, 7.4), (23.9, 7.65), (24.5, 7.75)]
========================= OBJS first half END ===================
========================= OBJS last half ===================
[(25.15, 8.05), (20.7, 22.55), (23.95, 30.05), (24.9, 29.65), (25.6, 29.05), (26.35, 28.5), (20.4, 22.7), (20.0, 22.95), (19.6, 23.15), (19.1, 23.35), (18.65, 23.5)]
========================= OBJS last half END ===================
nested loop vine din 
nested loop objs1, objs2 [(31.15, 7.3), (31.95, 7.95)][(20.7, 22.55)]
nested loop vine din 
nested loop objs1, objs2 [(22.9, 16.9), (22.85, 16.6), (22.7, 16.4), (22.6, 16.2), (22.55, 16.05), (22.4, 15.95), (22.35, 15.8), (21.5, 14.9), (21.55, 15.0), (21.65, 15.05), (21.75, 15.15), (21.85, 15.25), (21.9, 15.3), (22.0, 15.4), (22.15, 15.55), (22.2, 15.65)][]
nested loop vine din 
nested loop objs1, objs2 [(25.7, 8.4), (26.25, 8.8), (26.9, 9.1), (27.55, 9.65), (28.0, 10.1), (31.15, 7.3), (31.95, 7.95)][(30.45, 6.65), (29.7, 6.0), (28.9, 5.55), (28.05, 5.0), (27.2, 4.55), (22.5, 7.3), (23.15, 7.4), (23.9, 7.65), (24.5, 7.75), (25.15, 8.05)]
nested loop vine din 
nested loop objs1, objs2 [(22.2, 15.65), (22.15, 15.55), (22.0, 15.4), (21.9, 15.3), (21.85, 15.25), (21.75, 15.15), (21.65, 15.05), (21.55, 15.0), (21.5, 14.9), (22.35, 15.8), (22.4, 15.95), (21.0, 22.15), (21.45, 21.95), (21.75, 21.55), (22.0, 21.25), (22.25, 21.0), (22.5, 20.7), (22.65, 20.35), (27.15, 27.9), (27.75, 27.35), (28.3, 26.6), (22.55, 16.05), (22.6, 16.2), (22.7, 16.4), (22.85, 16.6), (22.9, 16.9), (22.75, 20.05), (22.9, 19.65), (23.0, 19.35)][(20.7, 22.55), (23.95, 30.05), (24.9, 29.65), (25.6, 29.05), (26.35, 28.5), (20.4, 22.7), (20.0, 22.95), (19.6, 23.15), (19.1, 23.35), (18.65, 23.5)]
quick len(objs), constSmallNumber 65 10
p1 = (22.15, 15.55) len objs = 65
r is 7.76
new r is 7.76
p1 = (22.15, 15.55)
startIdx = 0 obj (23.2, 18.05)
endIdx = 64 obj (23.2, 18.25)
startDIST = 2.71154937259125 obj (23.2, 18.05)
endDIST = 2.8969811873741946 obj (23.2, 18.25)
AL DOILEA WHILE startIdx = 0 obj (23.2, 18.05) start 2.71154937259125
AL DOILEA WHILE startIdx = 1 obj (23.2, 17.8) start 2.482941803587028
AL DOILEA WHILE startIdx = 2 obj (23.1, 17.45) start 2.1242645786248002
AL DOILEA WHILE startIdx = 3 obj (23.05, 17.15) start 1.8357559750685812
AL DOILEA WHILE startIdx = 4 obj (22.9, 16.9) start 1.5443445211480482
AL DOILEA WHILE startIdx = 5 obj (22.85, 16.6) start 1.2619429464123986
AL DOILEA WHILE startIdx = 6 obj (22.7, 16.4) start 1.0124228365658279
AL DOILEA WHILE startIdx = 7 obj (22.6, 16.2) start 0.7905694150420952
AL DOILEA WHILE startIdx = 8 obj (22.55, 16.05) start 0.6403124237432862
AL DOILEA WHILE startIdx = 9 obj (22.4, 15.95) start 0.471699056602829
AL DOILEA WHILE startIdx = 10 obj (22.35, 15.8) start 0.3201562118716442
AL DOILEA WHILE startIdx = 11 obj (22.2, 15.65) start 0.11180339887498948
AL DOILEA WHILE startIdx = 12 obj (22.15, 15.55) start 0.0
AL DOILEA WHILE startIdx = 13 obj (22.0, 15.4) start 0.2121320343559635
AL DOILEA WHILE startIdx = 14 obj (21.9, 15.3) start 0.3535533905932738
AL DOILEA WHILE startIdx = 15 obj (21.85, 15.25) start 0.424264068711927
AL DOILEA WHILE startIdx = 16 obj (21.75, 15.15) start 0.5656854249492372
AL DOILEA WHILE startIdx = 17 obj (21.65, 15.05) start 0.7071067811865476
AL DOILEA WHILE startIdx = 18 obj (21.55, 15.0) start 0.8139410298049842
AL DOILEA WHILE startIdx = 19 obj (21.5, 14.9) start 0.9192388155425111
Pentru (23.2, 18.25) endDist este 2.8969811873741946 iar r-eps este 4.96
Before swap start end (31.95, 7.95) (23.2, 18.25) 20 64
After swap start end (23.2, 18.25) (31.95, 7.95) 20 64
p1 = (22.15, 15.55)
startIdx = 21 obj (31.15, 7.3)
endIdx = 63 obj (23.15, 18.65)
startDIST = 12.20911544707478 obj (31.15, 7.3)
endDIST = 3.2572994949804643 obj (23.15, 18.65)
Pentru (23.15, 18.65) endDist este 3.2572994949804643 iar r-eps este 4.96
Before swap start end (31.15, 7.3) (23.15, 18.65) 21 63
After swap start end (23.15, 18.65) (31.15, 7.3) 21 63
p1 = (22.15, 15.55)
startIdx = 22 obj (21.0, 22.15)
endIdx = 62 obj (23.1, 19.0)
startDIST = 6.699440275127466 obj (21.0, 22.15)
endDIST = 3.5784074670165777 obj (23.1, 19.0)
AL DOILEA WHILE startIdx = 22 obj (21.0, 22.15) start 6.699440275127466
startDist Il apendeaza pe (21.0, 22.15) endDist 6.699440275127466
AL DOILEA WHILE startIdx = 23 obj (21.45, 21.95) start 6.4381674411279475
startDist Il apendeaza pe (21.45, 21.95) endDist 6.4381674411279475
AL DOILEA WHILE startIdx = 24 obj (21.75, 21.55) start 6.013318551349163
startDist Il apendeaza pe (21.75, 21.55) endDist 6.013318551349163
AL DOILEA WHILE startIdx = 25 obj (22.0, 21.25) start 5.701973342624464
startDist Il apendeaza pe (22.0, 21.25) endDist 5.701973342624464
AL DOILEA WHILE startIdx = 26 obj (22.25, 21.0) start 5.450917353987308
startDist Il apendeaza pe (22.25, 21.0) endDist 5.450917353987308
AL DOILEA WHILE startIdx = 27 obj (22.5, 20.7) start 5.161879502661796
startDist Il apendeaza pe (22.5, 20.7) endDist 5.161879502661796
AL DOILEA WHILE startIdx = 28 obj (22.65, 20.35) start 4.825971404805462
Pentru (23.1, 19.0) endDist este 3.5784074670165777 iar r-eps este 4.96
Before swap start end (27.15, 27.9) (23.1, 19.0) 29 62
After swap start end (23.1, 19.0) (27.15, 27.9) 29 62
p1 = (22.15, 15.55)
startIdx = 30 obj (27.75, 27.35)
endIdx = 61 obj (23.0, 19.35)
startDIST = 13.061393493804557 obj (27.75, 27.35)
endDIST = 3.8939054944875084 obj (23.0, 19.35)
Pentru (23.0, 19.35) endDist este 3.8939054944875084 iar r-eps este 4.96
Before swap start end (27.75, 27.35) (23.0, 19.35) 30 61
After swap start end (23.0, 19.35) (27.75, 27.35) 30 61
p1 = (22.15, 15.55)
startIdx = 31 obj (28.3, 26.6)
endIdx = 60 obj (22.9, 19.65)
startDIST = 12.64614565786746 obj (28.3, 26.6)
endDIST = 4.168033109273483 obj (22.9, 19.65)
Pentru (22.9, 19.65) endDist este 4.168033109273483 iar r-eps este 4.96
Before swap start end (28.3, 26.6) (22.9, 19.65) 31 60
After swap start end (22.9, 19.65) (28.3, 26.6) 31 60
p1 = (22.15, 15.55)
startIdx = 32 obj (28.95, 25.85)
endIdx = 59 obj (22.75, 20.05)
startDIST = 12.34220401711137 obj (28.95, 25.85)
endDIST = 4.539823785126467 obj (22.75, 20.05)
Pentru (22.75, 20.05) endDist este 4.539823785126467 iar r-eps este 4.96
Before swap start end (28.95, 25.85) (22.75, 20.05) 32 59
After swap start end (22.75, 20.05) (28.95, 25.85) 32 59
p1 = (22.15, 15.55)
startIdx = 33 obj (29.5, 25.15)
endIdx = 58 obj (25.7, 8.4)
startDIST = 12.09059551883198 obj (29.5, 25.15)
endDIST = 7.982793997091495 obj (25.7, 8.4)
PRIMUL WHILE endIdx = 58 obj (25.7, 8.4) endDist 7.982793997091495
endDist Il apendeaza pe (25.7, 8.4) endDist 7.982793997091495
PRIMUL WHILE endIdx = 57 obj (26.25, 8.8) endDist 7.897626225645274
endDist Il apendeaza pe (26.25, 8.8) endDist 7.897626225645274
PRIMUL WHILE endIdx = 56 obj (26.9, 9.1) endDist 8.010305861825753
endDist Il apendeaza pe (26.9, 9.1) endDist 8.010305861825753
PRIMUL WHILE endIdx = 55 obj (27.55, 9.65) endDist 7.998124780221926
endDist Il apendeaza pe (27.55, 9.65) endDist 7.998124780221926
PRIMUL WHILE endIdx = 54 obj (28.0, 10.1) endDist 7.995311125903734
endDist Il apendeaza pe (28.0, 10.1) endDist 7.995311125903734
PRIMUL WHILE endIdx = 53 obj (28.5, 10.6) endDist 8.051397394241576
endDist Il apendeaza pe (28.5, 10.6) endDist 8.051397394241576
PRIMUL WHILE endIdx = 52 obj (29.0, 11.15) endDist 8.141406512390843
endDist Il apendeaza pe (29.0, 11.15) endDist 8.141406512390843
PRIMUL WHILE endIdx = 51 obj (29.5, 11.75) endDist 8.274206910635003
endDist Il apendeaza pe (29.5, 11.75) endDist 8.274206910635003
PRIMUL WHILE endIdx = 50 obj (29.9, 12.3) endDist 8.403868156985805
endDist Il apendeaza pe (29.9, 12.3) endDist 8.403868156985805
PRIMUL WHILE endIdx = 49 obj (30.3, 13.0) endDist 8.539613574395508
endDist Il apendeaza pe (30.3, 13.0) endDist 8.539613574395508
PRIMUL WHILE endIdx = 48 obj (30.6, 13.65) endDist 8.660975695613056
endDist Il apendeaza pe (30.6, 13.65) endDist 8.660975695613056
PRIMUL WHILE endIdx = 47 obj (30.9, 14.35) endDist 8.831902399823042
endDist Il apendeaza pe (30.9, 14.35) endDist 8.831902399823042
PRIMUL WHILE endIdx = 46 obj (31.15, 15.05) endDist 9.013878188659973
endDist Il apendeaza pe (31.15, 15.05) endDist 9.013878188659973
PRIMUL WHILE endIdx = 45 obj (31.3, 15.8) endDist 9.15341466339202
endDist Il apendeaza pe (31.3, 15.8) endDist 9.15341466339202
PRIMUL WHILE endIdx = 44 obj (31.45, 16.55) endDist 9.353608929178085
endDist Il apendeaza pe (31.45, 16.55) endDist 9.353608929178085
PRIMUL WHILE endIdx = 43 obj (31.6, 17.35) endDist 9.619901246894381
endDist Il apendeaza pe (31.6, 17.35) endDist 9.619901246894381
PRIMUL WHILE endIdx = 42 obj (31.65, 18.15) endDist 9.849365461794987
endDist Il apendeaza pe (31.65, 18.15) endDist 9.849365461794987
PRIMUL WHILE endIdx = 41 obj (31.55, 18.9) endDist 9.979103166116683
endDist Il apendeaza pe (31.55, 18.9) endDist 9.979103166116683
PRIMUL WHILE endIdx = 40 obj (31.5, 19.7) endDist 10.22961387345583
endDist Il apendeaza pe (31.5, 19.7) endDist 10.22961387345583
PRIMUL WHILE endIdx = 39 obj (31.35, 20.55) endDist 10.470912090166742
endDist Il apendeaza pe (31.35, 20.55) endDist 10.470912090166742
PRIMUL WHILE endIdx = 38 obj (31.25, 21.3) endDist 10.764408948010106
PRIMUL WHILE endIdx = 37 obj (30.9, 22.1) endDist 10.930004574564459
PRIMUL WHILE endIdx = 36 obj (30.6, 22.9) endDist 11.199330337122841
PRIMUL WHILE endIdx = 35 obj (30.4, 23.7) endDist 11.5967667907913
PRIMUL WHILE endIdx = 34 obj (29.95, 24.45) endDist 11.83427226321923
sunt egale 33 33
========================= WIN L ===================
[(21.0, 22.15), (21.45, 21.95), (21.75, 21.55), (22.0, 21.25), (22.25, 21.0), (22.5, 20.7)]
========================= WIN L END ===================
========================= WIN G ===================
[(25.7, 8.4), (26.25, 8.8), (26.9, 9.1), (27.55, 9.65), (28.0, 10.1), (28.5, 10.6), (29.0, 11.15), (29.5, 11.75), (29.9, 12.3), (30.3, 13.0), (30.6, 13.65), (30.9, 14.35), (31.15, 15.05), (31.3, 15.8), (31.45, 16.55), (31.6, 17.35), (31.65, 18.15), (31.55, 18.9), (31.5, 19.7), (31.35, 20.55)]
========================= WIN G END ===================
========================= OBJS first half ===================
[(23.2, 18.05), (23.2, 17.8), (23.1, 17.45), (23.05, 17.15), (22.9, 16.9), (22.85, 16.6), (22.7, 16.4), (22.6, 16.2), (22.55, 16.05), (22.4, 15.95), (22.35, 15.8), (22.2, 15.65), (22.15, 15.55), (22.0, 15.4), (21.9, 15.3), (21.85, 15.25), (21.75, 15.15), (21.65, 15.05), (21.55, 15.0), (21.5, 14.9), (23.2, 18.25), (23.15, 18.65), (21.0, 22.15), (21.45, 21.95), (21.75, 21.55), (22.0, 21.25), (22.25, 21.0), (22.5, 20.7), (22.65, 20.35), (23.1, 19.0), (23.0, 19.35), (22.9, 19.65)]
========================= OBJS first half END ===================
========================= OBJS last half ===================
[(22.75, 20.05), (29.5, 25.15), (29.95, 24.45), (30.4, 23.7), (30.6, 22.9), (30.9, 22.1), (31.25, 21.3), (31.35, 20.55), (31.5, 19.7), (31.55, 18.9), (31.65, 18.15), (31.6, 17.35), (31.45, 16.55), (31.3, 15.8), (31.15, 15.05), (30.9, 14.35), (30.6, 13.65), (30.3, 13.0), (29.9, 12.3), (29.5, 11.75), (29.0, 11.15), (28.5, 10.6), (28.0, 10.1), (27.55, 9.65), (26.9, 9.1), (26.25, 8.8), (25.7, 8.4), (28.95, 25.85), (28.3, 26.6), (27.75, 27.35), (27.15, 27.9), (31.15, 7.3), (31.95, 7.95)]
========================= OBJS last half END ===================
Intra in win
win len(objs), len(objs1), len(objs2), constSmallNumber 26 | [(21.0, 22.15), (21.45, 21.95), (21.75, 21.55), (22.0, 21.25), (22.25, 21.0), (22.5, 20.7)] | [(25.7, 8.4), (26.25, 8.8), (26.9, 9.1), (27.55, 9.65), (28.0, 10.1), (28.5, 10.6), (29.0, 11.15), (29.5, 11.75), (29.9, 12.3), (30.3, 13.0), (30.6, 13.65), (30.9, 14.35), (31.15, 15.05), (31.3, 15.8), (31.45, 16.55), (31.6, 17.35), (31.65, 18.15), (31.55, 18.9), (31.5, 19.7), (31.35, 20.55)] | 10
p1 = (31.55, 18.9) len objs = 6
r is 0.97
new r is 0.97
p1 = (31.55, 18.9)
startIdx = 0 obj (21.0, 22.15)
endIdx = 5 obj (22.5, 20.7)
startDIST = 11.039248162805292 obj (21.0, 22.15)
endDIST = 9.227269368561862 obj (22.5, 20.7)
PRIMUL WHILE endIdx = 5 obj (22.5, 20.7) endDist 9.227269368561862
PRIMUL WHILE endIdx = 4 obj (22.25, 21.0) endDist 9.534149149242424
PRIMUL WHILE endIdx = 3 obj (22.0, 21.25) endDist 9.834886882928549
PRIMUL WHILE endIdx = 2 obj (21.75, 21.55) endDist 10.151970252123478
PRIMUL WHILE endIdx = 1 obj (21.45, 21.95) endDist 10.5504739230046
sunt egale 0 0
========================= WIN L ===================
[]
========================= WIN L END ===================
========================= WIN G ===================
[]
========================= WIN G END ===================
========================= OBJS first half ===================
[(21.0, 22.15), (21.45, 21.95), (21.75, 21.55), (22.0, 21.25), (22.25, 21.0)]
========================= OBJS first half END ===================
========================= OBJS last half ===================
[(22.5, 20.7)]
========================= OBJS last half END ===================
p1 = (31.55, 18.9) len objs = 20
r is 5.15
new r is 5.15
p1 = (31.55, 18.9)
startIdx = 0 obj (25.7, 8.4)
endIdx = 19 obj (31.35, 20.55)
startDIST = 12.019671376539376 obj (25.7, 8.4)
endDIST = 1.6620770138594683 obj (31.35, 20.55)
Pentru (31.35, 20.55) endDist este 1.6620770138594683 iar r-eps este 2.3500000000000005
Before swap start end (25.7, 8.4) (31.35, 20.55) 0 19
After swap start end (31.35, 20.55) (25.7, 8.4) 0 19
p1 = (31.55, 18.9)
startIdx = 1 obj (26.25, 8.8)
endIdx = 18 obj (31.5, 19.7)
startDIST = 11.406138698087094 obj (26.25, 8.8)
endDIST = 0.8015609770940706 obj (31.5, 19.7)
Pentru (31.5, 19.7) endDist este 0.8015609770940706 iar r-eps este 2.3500000000000005
Before swap start end (26.25, 8.8) (31.5, 19.7) 1 18
After swap start end (31.5, 19.7) (26.25, 8.8) 1 18
p1 = (31.55, 18.9)
startIdx = 2 obj (26.9, 9.1)
endIdx = 17 obj (31.55, 18.9)
startDIST = 10.84723467064302 obj (26.9, 9.1)
endDIST = 0.0 obj (31.55, 18.9)
Pentru (31.55, 18.9) endDist este 0.0 iar r-eps este 2.3500000000000005
Before swap start end (26.9, 9.1) (31.55, 18.9) 2 17
After swap start end (31.55, 18.9) (26.9, 9.1) 2 17
p1 = (31.55, 18.9)
startIdx = 3 obj (27.55, 9.65)
endIdx = 16 obj (31.65, 18.15)
startDIST = 10.077822185373186 obj (27.55, 9.65)
endDIST = 0.7566372975210776 obj (31.65, 18.15)
Pentru (31.65, 18.15) endDist este 0.7566372975210776 iar r-eps este 2.3500000000000005
Before swap start end (27.55, 9.65) (31.65, 18.15) 3 16
After swap start end (31.65, 18.15) (27.55, 9.65) 3 16
p1 = (31.55, 18.9)
startIdx = 4 obj (28.0, 10.1)
endIdx = 15 obj (31.6, 17.35)
startDIST = 9.48907266280536 obj (28.0, 10.1)
endDIST = 1.5508062419270794 obj (31.6, 17.35)
Pentru (31.6, 17.35) endDist este 1.5508062419270794 iar r-eps este 2.3500000000000005
Before swap start end (28.0, 10.1) (31.6, 17.35) 4 15
After swap start end (31.6, 17.35) (28.0, 10.1) 4 15
p1 = (31.55, 18.9)
startIdx = 5 obj (28.5, 10.6)
endIdx = 14 obj (31.45, 16.55)
startDIST = 8.84265231703701 obj (28.5, 10.6)
endDIST = 2.352126697267813 obj (31.45, 16.55)
Pentru (31.45, 16.55) endDist este 2.352126697267813 iar r-eps este 2.3500000000000005
endDist Il apendeaza pe (31.45, 16.55) endDist 2.352126697267813
Before swap start end (28.5, 10.6) (31.45, 16.55) 5 14
After swap start end (31.45, 16.55) (28.5, 10.6) 5 14
p1 = (31.55, 18.9)
startIdx = 6 obj (29.0, 11.15)
endIdx = 13 obj (31.3, 15.8)
startDIST = 8.158737647455025 obj (29.0, 11.15)
endDIST = 3.110064308016795 obj (31.3, 15.8)
Pentru (31.3, 15.8) endDist este 3.110064308016795 iar r-eps este 2.3500000000000005
endDist Il apendeaza pe (31.3, 15.8) endDist 3.110064308016795
Before swap start end (29.0, 11.15) (31.3, 15.8) 6 13
After swap start end (31.3, 15.8) (29.0, 11.15) 6 13
p1 = (31.55, 18.9)
startIdx = 7 obj (29.5, 11.75)
endIdx = 12 obj (31.15, 15.05)
startDIST = 7.438077708655643 obj (29.5, 11.75)
endDIST = 3.870723446592379 obj (31.15, 15.05)
Pentru (31.15, 15.05) endDist este 3.870723446592379 iar r-eps este 2.3500000000000005
endDist Il apendeaza pe (31.15, 15.05) endDist 3.870723446592379
startDist Il apendeaza pe (29.5, 11.75) startDist 7.438077708655643
Before swap start end (29.5, 11.75) (31.15, 15.05) 7 12
After swap start end (31.15, 15.05) (29.5, 11.75) 7 12
p1 = (31.55, 18.9)
startIdx = 8 obj (29.9, 12.3)
endIdx = 11 obj (30.9, 14.35)
startDIST = 6.803124282269139 obj (29.9, 12.3)
endDIST = 4.596194077712558 obj (30.9, 14.35)
Pentru (30.9, 14.35) endDist este 4.596194077712558 iar r-eps este 2.3500000000000005
endDist Il apendeaza pe (30.9, 14.35) endDist 4.596194077712558
startDist Il apendeaza pe (29.9, 12.3) startDist 6.803124282269139
Before swap start end (29.9, 12.3) (30.9, 14.35) 8 11
After swap start end (30.9, 14.35) (29.9, 12.3) 8 11
p1 = (31.55, 18.9)
startIdx = 9 obj (30.3, 13.0)
endIdx = 10 obj (30.6, 13.65)
startDIST = 6.030961780678102 obj (30.3, 13.0)
endDIST = 5.3352600686377025 obj (30.6, 13.65)
PRIMUL WHILE endIdx = 10 obj (30.6, 13.65) endDist 5.3352600686377025
endDist Il apendeaza pe (30.6, 13.65) endDist 5.3352600686377025
sunt egale 9 9
========================= WIN L ===================
[(31.45, 16.55), (31.3, 15.8), (31.15, 15.05), (30.9, 14.35)]
========================= WIN L END ===================
========================= WIN G ===================
[(29.5, 11.75), (29.9, 12.3), (30.6, 13.65), (30.3, 13.0)]
========================= WIN G END ===================
========================= OBJS first half ===================
[(31.35, 20.55), (31.5, 19.7), (31.55, 18.9), (31.65, 18.15), (31.6, 17.35), (31.45, 16.55), (31.3, 15.8), (31.15, 15.05)]
========================= OBJS first half END ===================
========================= OBJS last half ===================
[(30.9, 14.35), (30.3, 13.0), (30.6, 13.65), (29.9, 12.3), (29.5, 11.75), (29.0, 11.15), (28.5, 10.6), (28.0, 10.1), (27.55, 9.65), (26.9, 9.1), (26.25, 8.8), (25.7, 8.4)]
========================= OBJS last half END ===================
nested loop vine din 
nested loop objs1, objs2 [][(29.5, 11.75), (29.9, 12.3), (30.6, 13.65), (30.3, 13.0)]
nested loop vine din 
nested loop objs1, objs2 [][(31.45, 16.55), (31.3, 15.8), (31.15, 15.05), (30.9, 14.35)]
nested loop vine din 
nested loop objs1, objs2 [][(31.35, 20.55), (31.5, 19.7), (31.55, 18.9), (31.65, 18.15), (31.6, 17.35), (31.45, 16.55), (31.3, 15.8), (31.15, 15.05), (30.9, 14.35)]
nested loop vine din 
nested loop objs1, objs2 [(21.0, 22.15), (21.45, 21.95), (21.75, 21.55), (22.0, 21.25), (22.25, 21.0), (22.5, 20.7)][(30.3, 13.0), (30.6, 13.65), (29.9, 12.3), (29.5, 11.75), (29.0, 11.15), (28.5, 10.6), (28.0, 10.1), (27.55, 9.65), (26.9, 9.1), (26.25, 8.8), (25.7, 8.4)]
quick len(objs), constSmallNumber 33 10
p1 = (22.9, 19.65) len objs = 33
r is 2.85
new r is 2.85
p1 = (22.9, 19.65)
startIdx = 0 obj (23.2, 18.05)
endIdx = 32 obj (22.75, 20.05)
startDIST = 1.6278820596099688 obj (23.2, 18.05)
endDIST = 0.42720018726587805 obj (22.75, 20.05)
AL DOILEA WHILE startIdx = 0 obj (23.2, 18.05) start 1.6278820596099688
startDist Il apendeaza pe (23.2, 18.05) endDist 1.6278820596099688
AL DOILEA WHILE startIdx = 1 obj (23.2, 17.8) start 1.8741664813991292
startDist Il apendeaza pe (23.2, 17.8) endDist 1.8741664813991292
AL DOILEA WHILE startIdx = 2 obj (23.1, 17.45) start 2.2090722034374517
startDist Il apendeaza pe (23.1, 17.45) endDist 2.2090722034374517
AL DOILEA WHILE startIdx = 3 obj (23.05, 17.15) start 2.504495957273639
startDist Il apendeaza pe (23.05, 17.15) endDist 2.504495957273639
AL DOILEA WHILE startIdx = 4 obj (22.9, 16.9) start 2.75
startDist Il apendeaza pe (22.9, 16.9) endDist 2.75
Pentru (22.75, 20.05) endDist este 0.42720018726587805 iar r-eps este 0.050000000000000266
endDist Il apendeaza pe (22.75, 20.05) endDist 0.42720018726587805
startDist Il apendeaza pe (22.85, 16.6) startDist 3.0504098085339257
Before swap start end (22.85, 16.6) (22.75, 20.05) 5 32
After swap start end (22.75, 20.05) (22.85, 16.6) 5 32
p1 = (22.9, 19.65)
startIdx = 6 obj (22.7, 16.4)
endIdx = 31 obj (22.9, 19.65)
startDIST = 3.2561480310329873 obj (22.7, 16.4)
endDIST = 0.0 obj (22.9, 19.65)
Pentru (22.9, 19.65) endDist este 0.0 iar r-eps este 0.050000000000000266
startDist Il apendeaza pe (22.7, 16.4) startDist 3.2561480310329873
Before swap start end (22.7, 16.4) (22.9, 19.65) 6 31
After swap start end (22.9, 19.65) (22.7, 16.4) 6 31
p1 = (22.9, 19.65)
startIdx = 7 obj (22.6, 16.2)
endIdx = 30 obj (23.0, 19.35)
startDIST = 3.4630189141845578 obj (22.6, 16.2)
endDIST = 0.31622776601683567 obj (23.0, 19.35)
Pentru (23.0, 19.35) endDist este 0.31622776601683567 iar r-eps este 0.050000000000000266
endDist Il apendeaza pe (23.0, 19.35) endDist 0.31622776601683567
startDist Il apendeaza pe (22.6, 16.2) startDist 3.4630189141845578
Before swap start end (22.6, 16.2) (23.0, 19.35) 7 30
After swap start end (23.0, 19.35) (22.6, 16.2) 7 30
p1 = (22.9, 19.65)
startIdx = 8 obj (22.55, 16.05)
endIdx = 29 obj (23.1, 19.0)
startDIST = 3.6169738732813626 obj (22.55, 16.05)
endDIST = 0.6800735254367717 obj (23.1, 19.0)
Pentru (23.1, 19.0) endDist este 0.6800735254367717 iar r-eps este 0.050000000000000266
endDist Il apendeaza pe (23.1, 19.0) endDist 0.6800735254367717
startDist Il apendeaza pe (22.55, 16.05) startDist 3.6169738732813626
Before swap start end (22.55, 16.05) (23.1, 19.0) 8 29
After swap start end (23.1, 19.0) (22.55, 16.05) 8 29
p1 = (22.9, 19.65)
startIdx = 9 obj (22.4, 15.95)
endIdx = 28 obj (22.65, 20.35)
startDIST = 3.733630940518893 obj (22.4, 15.95)
endDIST = 0.743303437365928 obj (22.65, 20.35)
Pentru (22.65, 20.35) endDist este 0.743303437365928 iar r-eps este 0.050000000000000266
endDist Il apendeaza pe (22.65, 20.35) endDist 0.743303437365928
startDist Il apendeaza pe (22.4, 15.95) startDist 3.733630940518893
Before swap start end (22.4, 15.95) (22.65, 20.35) 9 28
After swap start end (22.65, 20.35) (22.4, 15.95) 9 28
p1 = (22.9, 19.65)
startIdx = 10 obj (22.35, 15.8)
endIdx = 27 obj (22.5, 20.7)
startDIST = 3.889087296526009 obj (22.35, 15.8)
endDIST = 1.1236102527122118 obj (22.5, 20.7)
Pentru (22.5, 20.7) endDist este 1.1236102527122118 iar r-eps este 0.050000000000000266
endDist Il apendeaza pe (22.5, 20.7) endDist 1.1236102527122118
startDist Il apendeaza pe (22.35, 15.8) startDist 3.889087296526009
Before swap start end (22.35, 15.8) (22.5, 20.7) 10 27
After swap start end (22.5, 20.7) (22.35, 15.8) 10 27
p1 = (22.9, 19.65)
startIdx = 11 obj (22.2, 15.65)
endIdx = 26 obj (22.25, 21.0)
startDIST = 4.060788100849389 obj (22.2, 15.65)
endDIST = 1.4983324063771704 obj (22.25, 21.0)
Pentru (22.25, 21.0) endDist este 1.4983324063771704 iar r-eps este 0.050000000000000266
endDist Il apendeaza pe (22.25, 21.0) endDist 1.4983324063771704
startDist Il apendeaza pe (22.2, 15.65) startDist 4.060788100849389
Before swap start end (22.2, 15.65) (22.25, 21.0) 11 26
After swap start end (22.25, 21.0) (22.2, 15.65) 11 26
p1 = (22.9, 19.65)
startIdx = 12 obj (22.15, 15.55)
endIdx = 25 obj (22.0, 21.25)
startDIST = 4.168033109273483 obj (22.15, 15.55)
endDIST = 1.8357559750685823 obj (22.0, 21.25)
Pentru (22.0, 21.25) endDist este 1.8357559750685823 iar r-eps este 0.050000000000000266
endDist Il apendeaza pe (22.0, 21.25) endDist 1.8357559750685823
startDist Il apendeaza pe (22.15, 15.55) startDist 4.168033109273483
Before swap start end (22.15, 15.55) (22.0, 21.25) 12 25
After swap start end (22.0, 21.25) (22.15, 15.55) 12 25
p1 = (22.9, 19.65)
startIdx = 13 obj (22.0, 15.4)
endIdx = 24 obj (21.75, 21.55)
startDIST = 4.34424907204916 obj (22.0, 15.4)
endDIST = 2.220923231451282 obj (21.75, 21.55)
Pentru (21.75, 21.55) endDist este 2.220923231451282 iar r-eps este 0.050000000000000266
endDist Il apendeaza pe (21.75, 21.55) endDist 2.220923231451282
startDist Il apendeaza pe (22.0, 15.4) startDist 4.34424907204916
Before swap start end (22.0, 15.4) (21.75, 21.55) 13 24
After swap start end (21.75, 21.55) (22.0, 15.4) 13 24
p1 = (22.9, 19.65)
startIdx = 14 obj (21.9, 15.3)
endIdx = 23 obj (21.45, 21.95)
startDIST = 4.46346278129436 obj (21.9, 15.3)
endDIST = 2.718915224864505 obj (21.45, 21.95)
Pentru (21.45, 21.95) endDist este 2.718915224864505 iar r-eps este 0.050000000000000266
endDist Il apendeaza pe (21.45, 21.95) endDist 2.718915224864505
startDist Il apendeaza pe (21.9, 15.3) startDist 4.46346278129436
Before swap start end (21.9, 15.3) (21.45, 21.95) 14 23
After swap start end (21.45, 21.95) (21.9, 15.3) 14 23
p1 = (22.9, 19.65)
startIdx = 15 obj (21.85, 15.25)
endIdx = 22 obj (21.0, 22.15)
startDIST = 4.523549491273417 obj (21.85, 15.25)
endDIST = 3.1400636936215154 obj (21.0, 22.15)
PRIMUL WHILE endIdx = 22 obj (21.0, 22.15) endDist 3.1400636936215154
endDist Il apendeaza pe (21.0, 22.15) endDist 3.1400636936215154
Pentru (23.15, 18.65) endDist este 1.0307764064044151 iar r-eps este 0.050000000000000266
endDist Il apendeaza pe (23.15, 18.65) endDist 1.0307764064044151
startDist Il apendeaza pe (21.85, 15.25) startDist 4.523549491273417
Before swap start end (21.85, 15.25) (23.15, 18.65) 15 21
After swap start end (23.15, 18.65) (21.85, 15.25) 15 21
p1 = (22.9, 19.65)
startIdx = 16 obj (21.75, 15.15)
endIdx = 20 obj (23.2, 18.25)
startDIST = 4.644620544242552 obj (21.75, 15.15)
endDIST = 1.431782106327634 obj (23.2, 18.25)
Pentru (23.2, 18.25) endDist este 1.431782106327634 iar r-eps este 0.050000000000000266
endDist Il apendeaza pe (23.2, 18.25) endDist 1.431782106327634
startDist Il apendeaza pe (21.75, 15.15) startDist 4.644620544242552
Before swap start end (21.75, 15.15) (23.2, 18.25) 16 20
After swap start end (23.2, 18.25) (21.75, 15.15) 16 20
p1 = (22.9, 19.65)
startIdx = 17 obj (21.65, 15.05)
endIdx = 19 obj (21.5, 14.9)
startDIST = 4.766812352086033 obj (21.65, 15.05)
endDIST = 4.952019789944299 obj (21.5, 14.9)
PRIMUL WHILE endIdx = 19 obj (21.5, 14.9) endDist 4.952019789944299
endDist Il apendeaza pe (21.5, 14.9) endDist 4.952019789944299
PRIMUL WHILE endIdx = 18 obj (21.55, 15.0) endDist 4.84200371747069
endDist Il apendeaza pe (21.55, 15.0) endDist 4.84200371747069
sunt egale 17 17
========================= WIN L ===================
[(23.2, 18.05), (23.2, 17.8), (23.1, 17.45), (23.05, 17.15), (22.9, 16.9), (22.75, 20.05), (23.0, 19.35), (23.1, 19.0), (22.65, 20.35), (22.5, 20.7), (22.25, 21.0), (22.0, 21.25), (21.75, 21.55), (21.45, 21.95), (23.15, 18.65), (23.2, 18.25)]
========================= WIN L END ===================
========================= WIN G ===================
[(22.85, 16.6), (22.7, 16.4), (22.6, 16.2), (22.55, 16.05), (22.4, 15.95), (22.35, 15.8), (22.2, 15.65), (22.15, 15.55), (22.0, 15.4), (21.9, 15.3), (21.0, 22.15), (21.85, 15.25), (21.75, 15.15), (21.5, 14.9), (21.55, 15.0), (21.65, 15.05)]
========================= WIN G END ===================
========================= OBJS first half ===================
[(23.2, 18.05), (23.2, 17.8), (23.1, 17.45), (23.05, 17.15), (22.9, 16.9), (22.75, 20.05), (22.9, 19.65), (23.0, 19.35), (23.1, 19.0), (22.65, 20.35), (22.5, 20.7), (22.25, 21.0), (22.0, 21.25), (21.75, 21.55), (21.45, 21.95), (23.15, 18.65)]
========================= OBJS first half END ===================
========================= OBJS last half ===================
[(23.2, 18.25), (21.65, 15.05), (21.55, 15.0), (21.5, 14.9), (21.75, 15.15), (21.85, 15.25), (21.0, 22.15), (21.9, 15.3), (22.0, 15.4), (22.15, 15.55), (22.2, 15.65), (22.35, 15.8), (22.4, 15.95), (22.55, 16.05), (22.6, 16.2), (22.7, 16.4), (22.85, 16.6)]
========================= OBJS last half END ===================
Intra in win
win len(objs), len(objs1), len(objs2), constSmallNumber 32 | [(23.2, 18.05), (23.2, 17.8), (23.1, 17.45), (23.05, 17.15), (22.9, 16.9), (22.75, 20.05), (23.0, 19.35), (23.1, 19.0), (22.65, 20.35), (22.5, 20.7), (22.25, 21.0), (22.0, 21.25), (21.75, 21.55), (21.45, 21.95), (23.15, 18.65), (23.2, 18.25)] | [(22.85, 16.6), (22.7, 16.4), (22.6, 16.2), (22.55, 16.05), (22.4, 15.95), (22.35, 15.8), (22.2, 15.65), (22.15, 15.55), (22.0, 15.4), (21.9, 15.3), (21.0, 22.15), (21.85, 15.25), (21.75, 15.15), (21.5, 14.9), (21.55, 15.0), (21.65, 15.05)] | 10
p1 = (22.55, 16.05) len objs = 16
r is 2.1
new r is 2.1
p1 = (22.55, 16.05)
startIdx = 0 obj (23.2, 18.05)
endIdx = 15 obj (23.2, 18.25)
startDIST = 2.1029740844813087 obj (23.2, 18.05)
endDIST = 2.2940139493908913 obj (23.2, 18.25)
PRIMUL WHILE endIdx = 15 obj (23.2, 18.25) endDist 2.2940139493908913
endDist Il apendeaza pe (23.2, 18.25) endDist 2.2940139493908913
PRIMUL WHILE endIdx = 14 obj (23.15, 18.65) endDist 2.6683328128252644
endDist Il apendeaza pe (23.15, 18.65) endDist 2.6683328128252644
PRIMUL WHILE endIdx = 13 obj (21.45, 21.95) endDist 6.0016664352494615
PRIMUL WHILE endIdx = 12 obj (21.75, 21.55) endDist 5.5578772926361015
PRIMUL WHILE endIdx = 11 obj (22.0, 21.25) endDist 5.229005641611032
PRIMUL WHILE endIdx = 10 obj (22.25, 21.0) endDist 4.9590825764449615
PRIMUL WHILE endIdx = 9 obj (22.5, 20.7) endDist 4.650268809434568
endDist Il apendeaza pe (22.5, 20.7) endDist 4.650268809434568
PRIMUL WHILE endIdx = 8 obj (22.65, 20.35) endDist 4.301162633521314
endDist Il apendeaza pe (22.65, 20.35) endDist 4.301162633521314
PRIMUL WHILE endIdx = 7 obj (23.1, 19.0) endDist 3.0008332176247308
endDist Il apendeaza pe (23.1, 19.0) endDist 3.0008332176247308
PRIMUL WHILE endIdx = 6 obj (23.0, 19.35) endDist 3.330540496676178
endDist Il apendeaza pe (23.0, 19.35) endDist 3.330540496676178
PRIMUL WHILE endIdx = 5 obj (22.75, 20.05) endDist 4.004996878900157
endDist Il apendeaza pe (22.75, 20.05) endDist 4.004996878900157
Pentru (22.9, 16.9) endDist este 0.919238815542509 iar r-eps este -0.6999999999999997
endDist Il apendeaza pe (22.9, 16.9) endDist 0.919238815542509
startDist Il apendeaza pe (23.2, 18.05) startDist 2.1029740844813087
Before swap start end (23.2, 18.05) (22.9, 16.9) 0 4
After swap start end (22.9, 16.9) (23.2, 18.05) 0 4
p1 = (22.55, 16.05)
startIdx = 1 obj (23.2, 17.8)
endIdx = 3 obj (23.05, 17.15)
startDIST = 1.8668154702594464 obj (23.2, 17.8)
endDIST = 1.2083045973594553 obj (23.05, 17.15)
AL DOILEA WHILE startIdx = 1 obj (23.2, 17.8) start 1.8668154702594464
startDist Il apendeaza pe (23.2, 17.8) endDist 1.8668154702594464
AL DOILEA WHILE startIdx = 2 obj (23.1, 17.45) start 1.5041608956491312
startDist Il apendeaza pe (23.1, 17.45) endDist 1.5041608956491312
sunt egale 3 3
========================= WIN L ===================
[(22.9, 16.9), (23.2, 17.8), (23.1, 17.45), (23.05, 17.15)]
========================= WIN L END ===================
========================= WIN G ===================
[(23.2, 18.25), (23.15, 18.65), (22.5, 20.7), (22.65, 20.35), (23.1, 19.0), (23.0, 19.35), (22.75, 20.05), (23.2, 18.05)]
========================= WIN G END ===================
========================= OBJS first half ===================
[(22.9, 16.9), (23.2, 17.8), (23.1, 17.45)]
========================= OBJS first half END ===================
========================= OBJS last half ===================
[(23.05, 17.15), (23.2, 18.05), (22.75, 20.05), (23.0, 19.35), (23.1, 19.0), (22.65, 20.35), (22.5, 20.7), (22.25, 21.0), (22.0, 21.25), (21.75, 21.55), (21.45, 21.95), (23.15, 18.65), (23.2, 18.25)]
========================= OBJS last half END ===================
p1 = (22.55, 16.05) len objs = 16
r is 1.54
new r is 1.54
p1 = (22.55, 16.05)
startIdx = 0 obj (22.85, 16.6)
endIdx = 15 obj (21.65, 15.05)
startDIST = 0.6264982043070844 obj (22.85, 16.6)
endDIST = 1.3453624047073725 obj (21.65, 15.05)
AL DOILEA WHILE startIdx = 0 obj (22.85, 16.6) start 0.6264982043070844
startDist Il apendeaza pe (22.85, 16.6) endDist 0.6264982043070844
AL DOILEA WHILE startIdx = 1 obj (22.7, 16.4) start 0.3807886552931929
startDist Il apendeaza pe (22.7, 16.4) endDist 0.3807886552931929
AL DOILEA WHILE startIdx = 2 obj (22.6, 16.2) start 0.15811388300841783
startDist Il apendeaza pe (22.6, 16.2) endDist 0.15811388300841783
AL DOILEA WHILE startIdx = 3 obj (22.55, 16.05) start 0.0
startDist Il apendeaza pe (22.55, 16.05) endDist 0.0
AL DOILEA WHILE startIdx = 4 obj (22.4, 15.95) start 0.18027756377320203
startDist Il apendeaza pe (22.4, 15.95) endDist 0.18027756377320203
AL DOILEA WHILE startIdx = 5 obj (22.35, 15.8) start 0.320156211871642
startDist Il apendeaza pe (22.35, 15.8) endDist 0.320156211871642
AL DOILEA WHILE startIdx = 6 obj (22.2, 15.65) start 0.5315072906367337
startDist Il apendeaza pe (22.2, 15.65) endDist 0.5315072906367337
AL DOILEA WHILE startIdx = 7 obj (22.15, 15.55) start 0.6403124237432862
startDist Il apendeaza pe (22.15, 15.55) endDist 0.6403124237432862
AL DOILEA WHILE startIdx = 8 obj (22.0, 15.4) start 0.8514693182963208
startDist Il apendeaza pe (22.0, 15.4) endDist 0.8514693182963208
AL DOILEA WHILE startIdx = 9 obj (21.9, 15.3) start 0.9924716620639618
startDist Il apendeaza pe (21.9, 15.3) endDist 0.9924716620639618
Pentru (21.65, 15.05) endDist este 1.3453624047073725 iar r-eps este -1.2599999999999998
endDist Il apendeaza pe (21.65, 15.05) endDist 1.3453624047073725
Before swap start end (21.0, 22.15) (21.65, 15.05) 10 15
After swap start end (21.65, 15.05) (21.0, 22.15) 10 15
p1 = (22.55, 16.05)
startIdx = 11 obj (21.85, 15.25)
endIdx = 14 obj (21.55, 15.0)
startDIST = 1.063014581273465 obj (21.85, 15.25)
endDIST = 1.4500000000000006 obj (21.55, 15.0)
AL DOILEA WHILE startIdx = 11 obj (21.85, 15.25) start 1.063014581273465
startDist Il apendeaza pe (21.85, 15.25) endDist 1.063014581273465
AL DOILEA WHILE startIdx = 12 obj (21.75, 15.15) start 1.2041594578792303
startDist Il apendeaza pe (21.75, 15.15) endDist 1.2041594578792303
Pentru (21.55, 15.0) endDist este 1.4500000000000006 iar r-eps este -1.2599999999999998
endDist Il apendeaza pe (21.55, 15.0) endDist 1.4500000000000006
startDist Il apendeaza pe (21.5, 14.9) startDist 1.5572411502397445
Before swap start end (21.5, 14.9) (21.55, 15.0) 13 14
After swap start end (21.55, 15.0) (21.5, 14.9) 13 14
========================= WIN L ===================
[(22.85, 16.6), (22.7, 16.4), (22.6, 16.2), (22.55, 16.05), (22.4, 15.95), (22.35, 15.8), (22.2, 15.65), (22.15, 15.55), (22.0, 15.4), (21.9, 15.3), (21.65, 15.05), (21.85, 15.25), (21.75, 15.15), (21.55, 15.0)]
========================= WIN L END ===================
========================= WIN G ===================
[(21.5, 14.9)]
========================= WIN G END ===================
========================= OBJS first half ===================
[(22.85, 16.6), (22.7, 16.4), (22.6, 16.2), (22.55, 16.05), (22.4, 15.95), (22.35, 15.8), (22.2, 15.65), (22.15, 15.55), (22.0, 15.4), (21.9, 15.3), (21.65, 15.05), (21.85, 15.25), (21.75, 15.15)]
========================= OBJS first half END ===================
========================= OBJS last half ===================
[(21.55, 15.0), (21.5, 14.9), (21.0, 22.15)]
========================= OBJS last half END ===================
Intra in win
win len(objs), len(objs1), len(objs2), constSmallNumber 5 | [(22.9, 16.9), (23.2, 17.8), (23.1, 17.45), (23.05, 17.15)] | [(21.5, 14.9)] | 10
nested loop vine din 
nested loop objs1, objs2 [(22.9, 16.9), (23.2, 17.8), (23.1, 17.45), (23.05, 17.15)][(21.5, 14.9)]
Intra in win
win len(objs), len(objs1), len(objs2), constSmallNumber 22 | [(23.2, 18.25), (23.15, 18.65), (22.5, 20.7), (22.65, 20.35), (23.1, 19.0), (23.0, 19.35), (22.75, 20.05), (23.2, 18.05)] | [(22.85, 16.6), (22.7, 16.4), (22.6, 16.2), (22.55, 16.05), (22.4, 15.95), (22.35, 15.8), (22.2, 15.65), (22.15, 15.55), (22.0, 15.4), (21.9, 15.3), (21.65, 15.05), (21.85, 15.25), (21.75, 15.15), (21.55, 15.0)] | 10
p1 = (22.75, 20.05) len objs = 8
r is 1.25
new r is 1.25
p1 = (22.75, 20.05)
startIdx = 0 obj (23.2, 18.25)
endIdx = 7 obj (23.2, 18.05)
startDIST = 1.8553975315279476 obj (23.2, 18.25)
endDIST = 2.05 obj (23.2, 18.05)
PRIMUL WHILE endIdx = 7 obj (23.2, 18.05) endDist 2.05
endDist Il apendeaza pe (23.2, 18.05) endDist 2.05
Pentru (22.75, 20.05) endDist este 0.0 iar r-eps este -1.5499999999999998
endDist Il apendeaza pe (22.75, 20.05) endDist 0.0
startDist Il apendeaza pe (23.2, 18.25) startDist 1.8553975315279476
Before swap start end (23.2, 18.25) (22.75, 20.05) 0 6
After swap start end (22.75, 20.05) (23.2, 18.25) 0 6
p1 = (22.75, 20.05)
startIdx = 1 obj (23.15, 18.65)
endIdx = 5 obj (23.0, 19.35)
startDIST = 1.4560219778561054 obj (23.15, 18.65)
endDIST = 0.7433034373659246 obj (23.0, 19.35)
Pentru (23.0, 19.35) endDist este 0.7433034373659246 iar r-eps este -1.5499999999999998
endDist Il apendeaza pe (23.0, 19.35) endDist 0.7433034373659246
startDist Il apendeaza pe (23.15, 18.65) startDist 1.4560219778561054
Before swap start end (23.15, 18.65) (23.0, 19.35) 1 5
After swap start end (23.0, 19.35) (23.15, 18.65) 1 5
p1 = (22.75, 20.05)
startIdx = 2 obj (22.5, 20.7)
endIdx = 4 obj (23.1, 19.0)
startDIST = 0.6964194138592047 obj (22.5, 20.7)
endDIST = 1.1067971810589339 obj (23.1, 19.0)
AL DOILEA WHILE startIdx = 2 obj (22.5, 20.7) start 0.6964194138592047
startDist Il apendeaza pe (22.5, 20.7) endDist 0.6964194138592047
AL DOILEA WHILE startIdx = 3 obj (22.65, 20.35) start 0.31622776601683905
startDist Il apendeaza pe (22.65, 20.35) endDist 0.31622776601683905
sunt egale 4 4
========================= WIN L ===================
[(22.75, 20.05), (23.0, 19.35), (22.5, 20.7), (22.65, 20.35), (23.1, 19.0)]
========================= WIN L END ===================
========================= WIN G ===================
[(23.2, 18.05), (23.2, 18.25), (23.15, 18.65)]
========================= WIN G END ===================
========================= OBJS first half ===================
[(22.75, 20.05), (23.0, 19.35), (22.5, 20.7), (22.65, 20.35)]
========================= OBJS first half END ===================
========================= OBJS last half ===================
[(23.1, 19.0), (23.15, 18.65), (23.2, 18.25), (23.2, 18.05)]
========================= OBJS last half END ===================
p1 = (22.75, 20.05) len objs = 14
r is 0.78
new r is 0.78
p1 = (22.75, 20.05)
startIdx = 0 obj (22.85, 16.6)
endIdx = 13 obj (21.55, 15.0)
startDIST = 3.4514489710844622 obj (22.85, 16.6)
endDIST = 5.1906165337077255 obj (21.55, 15.0)
PRIMUL WHILE endIdx = 13 obj (21.55, 15.0) endDist 5.1906165337077255
PRIMUL WHILE endIdx = 12 obj (21.75, 15.15) endDist 5.000999900019996
PRIMUL WHILE endIdx = 11 obj (21.85, 15.25) endDist 4.883646178829912
PRIMUL WHILE endIdx = 10 obj (21.65, 15.05) endDist 5.119570294468082
PRIMUL WHILE endIdx = 9 obj (21.9, 15.3) endDist 4.825453346577915
PRIMUL WHILE endIdx = 8 obj (22.0, 15.4) endDist 4.710095540432275
PRIMUL WHILE endIdx = 7 obj (22.15, 15.55) endDist 4.539823785126467
PRIMUL WHILE endIdx = 6 obj (22.2, 15.65) endDist 4.434241761564203
PRIMUL WHILE endIdx = 5 obj (22.35, 15.8) endDist 4.268782027698299
PRIMUL WHILE endIdx = 4 obj (22.4, 15.95) endDist 4.1149119067119795
PRIMUL WHILE endIdx = 3 obj (22.55, 16.05) endDist 4.004996878900157
PRIMUL WHILE endIdx = 2 obj (22.6, 16.2) endDist 3.852920969861698
PRIMUL WHILE endIdx = 1 obj (22.7, 16.4) endDist 3.650342449688798
sunt egale 0 0
========================= WIN L ===================
[]
========================= WIN L END ===================
========================= WIN G ===================
[(22.85, 16.6)]
========================= WIN G END ===================
========================= OBJS first half ===================
[(22.85, 16.6), (22.7, 16.4), (22.6, 16.2), (22.55, 16.05), (22.4, 15.95), (22.35, 15.8), (22.2, 15.65), (22.15, 15.55), (22.0, 15.4), (21.9, 15.3), (21.65, 15.05), (21.85, 15.25), (21.75, 15.15)]
========================= OBJS first half END ===================
========================= OBJS last half ===================
[(21.55, 15.0)]
========================= OBJS last half END ===================
nested loop vine din 
nested loop objs1, objs2 [(22.75, 20.05), (23.0, 19.35), (22.5, 20.7), (22.65, 20.35), (23.1, 19.0)][(22.85, 16.6)]
nested loop vine din 
nested loop objs1, objs2 [(23.2, 18.05), (23.2, 18.25), (23.15, 18.65)][]
nested loop vine din 
nested loop objs1, objs2 [(22.75, 20.05), (23.0, 19.35), (22.5, 20.7), (22.65, 20.35), (23.1, 19.0)][]
nested loop vine din 
nested loop objs1, objs2 [(23.15, 18.65), (23.2, 18.25), (23.2, 18.05)][(22.85, 16.6), (22.7, 16.4), (22.6, 16.2), (22.55, 16.05), (22.4, 15.95), (22.35, 15.8), (22.2, 15.65), (22.15, 15.55), (22.0, 15.4), (21.9, 15.3), (21.65, 15.05), (21.85, 15.25), (21.75, 15.15), (21.55, 15.0)]
Intra in win
win len(objs), len(objs1), len(objs2), constSmallNumber 18 | [(22.9, 16.9), (23.2, 17.8), (23.1, 17.45), (23.05, 17.15)] | [(22.85, 16.6), (22.7, 16.4), (22.6, 16.2), (22.55, 16.05), (22.4, 15.95), (22.35, 15.8), (22.2, 15.65), (22.15, 15.55), (22.0, 15.4), (21.9, 15.3), (21.65, 15.05), (21.85, 15.25), (21.75, 15.15), (21.55, 15.0)] | 10
p1 = (22.7, 16.4) len objs = 4
r is 0.53
new r is 0.53
p1 = (22.7, 16.4)
startIdx = 0 obj (22.9, 16.9)
endIdx = 3 obj (23.05, 17.15)
startDIST = 0.5385164807134502 obj (22.9, 16.9)
endDIST = 0.827647267862343 obj (23.05, 17.15)
PRIMUL WHILE endIdx = 3 obj (23.05, 17.15) endDist 0.827647267862343
endDist Il apendeaza pe (23.05, 17.15) endDist 0.827647267862343
PRIMUL WHILE endIdx = 2 obj (23.1, 17.45) endDist 1.1236102527122132
endDist Il apendeaza pe (23.1, 17.45) endDist 1.1236102527122132
PRIMUL WHILE endIdx = 1 obj (23.2, 17.8) endDist 1.4866068747318526
endDist Il apendeaza pe (23.2, 17.8) endDist 1.4866068747318526
sunt egale 0 0
========================= WIN L ===================
[]
========================= WIN L END ===================
========================= WIN G ===================
[(23.05, 17.15), (23.1, 17.45), (23.2, 17.8), (22.9, 16.9)]
========================= WIN G END ===================
========================= OBJS first half ===================
[(22.9, 16.9), (23.2, 17.8), (23.1, 17.45)]
========================= OBJS first half END ===================
========================= OBJS last half ===================
[(23.05, 17.15)]
========================= OBJS last half END ===================
p1 = (22.7, 16.4) len objs = 14
r is 0.78
new r is 0.78
p1 = (22.7, 16.4)
startIdx = 0 obj (22.85, 16.6)
endIdx = 13 obj (21.55, 15.0)
startDIST = 0.25000000000000355 obj (22.85, 16.6)
endDIST = 1.811767093199342 obj (21.55, 15.0)
PRIMUL WHILE endIdx = 13 obj (21.55, 15.0) endDist 1.811767093199342
endDist Il apendeaza pe (21.55, 15.0) endDist 1.811767093199342
PRIMUL WHILE endIdx = 12 obj (21.75, 15.15) endDist 1.5700318468107564
endDist Il apendeaza pe (21.75, 15.15) endDist 1.5700318468107564
PRIMUL WHILE endIdx = 11 obj (21.85, 15.25) endDist 1.4300349646075066
endDist Il apendeaza pe (21.85, 15.25) endDist 1.4300349646075066
PRIMUL WHILE endIdx = 10 obj (21.65, 15.05) endDist 1.7102631376487059
endDist Il apendeaza pe (21.65, 15.05) endDist 1.7102631376487059
PRIMUL WHILE endIdx = 9 obj (21.9, 15.3) endDist 1.3601470508735432
endDist Il apendeaza pe (21.9, 15.3) endDist 1.3601470508735432
PRIMUL WHILE endIdx = 8 obj (22.0, 15.4) endDist 1.2206555615733683
endDist Il apendeaza pe (22.0, 15.4) endDist 1.2206555615733683
PRIMUL WHILE endIdx = 7 obj (22.15, 15.55) endDist 1.0124228365658279
endDist Il apendeaza pe (22.15, 15.55) endDist 1.0124228365658279
PRIMUL WHILE endIdx = 6 obj (22.2, 15.65) endDist 0.9013878188659958
endDist Il apendeaza pe (22.2, 15.65) endDist 0.9013878188659958
AL DOILEA WHILE startIdx = 0 obj (22.85, 16.6) start 0.25000000000000355
startDist Il apendeaza pe (22.85, 16.6) endDist 0.25000000000000355
AL DOILEA WHILE startIdx = 1 obj (22.7, 16.4) start 0.0
startDist Il apendeaza pe (22.7, 16.4) endDist 0.0
AL DOILEA WHILE startIdx = 2 obj (22.6, 16.2) start 0.22360679774997738
startDist Il apendeaza pe (22.6, 16.2) endDist 0.22360679774997738
AL DOILEA WHILE startIdx = 3 obj (22.55, 16.05) start 0.3807886552931929
startDist Il apendeaza pe (22.55, 16.05) endDist 0.3807886552931929
AL DOILEA WHILE startIdx = 4 obj (22.4, 15.95) start 0.5408326913195982
startDist Il apendeaza pe (22.4, 15.95) endDist 0.5408326913195982
sunt egale 5 5
========================= WIN L ===================
[(22.85, 16.6), (22.7, 16.4), (22.6, 16.2), (22.55, 16.05), (22.4, 15.95), (22.35, 15.8)]
========================= WIN L END ===================
========================= WIN G ===================
[(21.55, 15.0), (21.75, 15.15), (21.85, 15.25), (21.65, 15.05), (21.9, 15.3), (22.0, 15.4), (22.15, 15.55), (22.2, 15.65)]
========================= WIN G END ===================
========================= OBJS first half ===================
[(22.85, 16.6), (22.7, 16.4), (22.6, 16.2), (22.55, 16.05), (22.4, 15.95)]
========================= OBJS first half END ===================
========================= OBJS last half ===================
[(22.35, 15.8), (22.2, 15.65), (22.15, 15.55), (22.0, 15.4), (21.9, 15.3), (21.65, 15.05), (21.85, 15.25), (21.75, 15.15), (21.55, 15.0)]
========================= OBJS last half END ===================
nested loop vine din 
nested loop objs1, objs2 [][(21.55, 15.0), (21.75, 15.15), (21.85, 15.25), (21.65, 15.05), (21.9, 15.3), (22.0, 15.4), (22.15, 15.55), (22.2, 15.65)]
nested loop vine din 
nested loop objs1, objs2 [(23.05, 17.15), (23.1, 17.45), (23.2, 17.8), (22.9, 16.9)][(22.85, 16.6), (22.7, 16.4), (22.6, 16.2), (22.55, 16.05), (22.4, 15.95), (22.35, 15.8)]
nested loop vine din 
nested loop objs1, objs2 [][(22.85, 16.6), (22.7, 16.4), (22.6, 16.2), (22.55, 16.05), (22.4, 15.95), (22.35, 15.8)]
nested loop vine din 
nested loop objs1, objs2 [(22.9, 16.9), (23.2, 17.8), (23.1, 17.45), (23.05, 17.15)][(22.2, 15.65), (22.15, 15.55), (22.0, 15.4), (21.9, 15.3), (21.65, 15.05), (21.85, 15.25), (21.75, 15.15), (21.55, 15.0)]
Intra in win
win len(objs), len(objs1), len(objs2), constSmallNumber 14 | [(23.2, 18.05), (22.75, 20.05), (23.0, 19.35), (23.1, 19.0), (22.65, 20.35), (22.5, 20.7), (22.25, 21.0), (22.0, 21.25), (21.75, 21.55), (21.45, 21.95), (23.15, 18.65), (23.2, 18.25)] | [(21.5, 14.9), (21.0, 22.15)] | 10
p1 = (21.75, 21.55) len objs = 12
r is 1.76
new r is 1.76
p1 = (21.75, 21.55)
startIdx = 0 obj (23.2, 18.05)
endIdx = 11 obj (23.2, 18.25)
startDIST = 3.788469347902923 obj (23.2, 18.05)
endDIST = 3.6045110625437125 obj (23.2, 18.25)
PRIMUL WHILE endIdx = 11 obj (23.2, 18.25) endDist 3.6045110625437125
endDist Il apendeaza pe (23.2, 18.25) endDist 3.6045110625437125
PRIMUL WHILE endIdx = 10 obj (23.15, 18.65) endDist 3.220248437620925
endDist Il apendeaza pe (23.15, 18.65) endDist 3.220248437620925
Pentru (21.45, 21.95) endDist este 0.4999999999999993 iar r-eps este -1.0399999999999998
endDist Il apendeaza pe (21.45, 21.95) endDist 0.4999999999999993
startDist Il apendeaza pe (23.2, 18.05) startDist 3.788469347902923
Before swap start end (23.2, 18.05) (21.45, 21.95) 0 9
After swap start end (21.45, 21.95) (23.2, 18.05) 0 9
p1 = (21.75, 21.55)
startIdx = 1 obj (22.75, 20.05)
endIdx = 8 obj (21.75, 21.55)
startDIST = 1.8027756377319946 obj (22.75, 20.05)
endDIST = 0.0 obj (21.75, 21.55)
Pentru (21.75, 21.55) endDist este 0.0 iar r-eps este -1.0399999999999998
endDist Il apendeaza pe (21.75, 21.55) endDist 0.0
startDist Il apendeaza pe (22.75, 20.05) startDist 1.8027756377319946
Before swap start end (22.75, 20.05) (21.75, 21.55) 1 8
After swap start end (21.75, 21.55) (22.75, 20.05) 1 8
p1 = (21.75, 21.55)
startIdx = 2 obj (23.0, 19.35)
endIdx = 7 obj (22.0, 21.25)
startDIST = 2.5303161857759986 obj (23.0, 19.35)
endDIST = 0.39051248379533327 obj (22.0, 21.25)
Pentru (22.0, 21.25) endDist este 0.39051248379533327 iar r-eps este -1.0399999999999998
endDist Il apendeaza pe (22.0, 21.25) endDist 0.39051248379533327
startDist Il apendeaza pe (23.0, 19.35) startDist 2.5303161857759986
Before swap start end (23.0, 19.35) (22.0, 21.25) 2 7
After swap start end (22.0, 21.25) (23.0, 19.35) 2 7
p1 = (21.75, 21.55)
startIdx = 3 obj (23.1, 19.0)
endIdx = 6 obj (22.25, 21.0)
startDIST = 2.8853076092507033 obj (23.1, 19.0)
endDIST = 0.7433034373659257 obj (22.25, 21.0)
Pentru (22.25, 21.0) endDist este 0.7433034373659257 iar r-eps este -1.0399999999999998
endDist Il apendeaza pe (22.25, 21.0) endDist 0.7433034373659257
startDist Il apendeaza pe (23.1, 19.0) startDist 2.8853076092507033
Before swap start end (23.1, 19.0) (22.25, 21.0) 3 6
After swap start end (22.25, 21.0) (23.1, 19.0) 3 6
p1 = (21.75, 21.55)
startIdx = 4 obj (22.65, 20.35)
endIdx = 5 obj (22.5, 20.7)
startDIST = 1.4999999999999984 obj (22.65, 20.35)
endDIST = 1.1335784048754645 obj (22.5, 20.7)
AL DOILEA WHILE startIdx = 4 obj (22.65, 20.35) start 1.4999999999999984
startDist Il apendeaza pe (22.65, 20.35) endDist 1.4999999999999984
sunt egale 5 5
========================= WIN L ===================
[(21.45, 21.95), (21.75, 21.55), (22.0, 21.25), (22.25, 21.0), (22.65, 20.35), (22.5, 20.7)]
========================= WIN L END ===================
========================= WIN G ===================
[(23.2, 18.25), (23.15, 18.65), (23.2, 18.05), (22.75, 20.05), (23.0, 19.35), (23.1, 19.0)]
========================= WIN G END ===================
========================= OBJS first half ===================
[(21.45, 21.95), (21.75, 21.55), (22.0, 21.25), (22.25, 21.0), (22.65, 20.35)]
========================= OBJS first half END ===================
========================= OBJS last half ===================
[(22.5, 20.7), (23.1, 19.0), (23.0, 19.35), (22.75, 20.05), (23.2, 18.05), (23.15, 18.65), (23.2, 18.25)]
========================= OBJS last half END ===================
p1 = (21.75, 21.55) len objs = 2
r is 7.27
new r is 7.27
p1 = (21.75, 21.55)
startIdx = 0 obj (21.5, 14.9)
endIdx = 1 obj (21.0, 22.15)
startDIST = 6.654697588921679 obj (21.5, 14.9)
endDIST = 0.960468635614926 obj (21.0, 22.15)
AL DOILEA WHILE startIdx = 0 obj (21.5, 14.9) start 6.654697588921679
startDist Il apendeaza pe (21.5, 14.9) endDist 6.654697588921679
sunt egale 1 1
========================= WIN L ===================
[(21.5, 14.9)]
========================= WIN L END ===================
========================= WIN G ===================
[]
========================= WIN G END ===================
========================= OBJS first half ===================
[(21.5, 14.9)]
========================= OBJS first half END ===================
========================= OBJS last half ===================
[(21.0, 22.15)]
========================= OBJS last half END ===================
nested loop vine din 
nested loop objs1, objs2 [(21.45, 21.95), (21.75, 21.55), (22.0, 21.25), (22.25, 21.0), (22.65, 20.35), (22.5, 20.7)][]
nested loop vine din 
nested loop objs1, objs2 [(23.2, 18.25), (23.15, 18.65), (23.2, 18.05), (22.75, 20.05), (23.0, 19.35), (23.1, 19.0)][(21.5, 14.9)]
nested loop vine din 
nested loop objs1, objs2 [(21.45, 21.95), (21.75, 21.55), (22.0, 21.25), (22.25, 21.0), (22.65, 20.35), (22.5, 20.7)][(21.5, 14.9), (21.0, 22.15)]
nested loop vine din 
nested loop objs1, objs2 [(23.1, 19.0), (23.0, 19.35), (22.75, 20.05), (23.2, 18.05), (23.15, 18.65), (23.2, 18.25)][]
quick len(objs), constSmallNumber 17 10
p1 = (23.2, 17.8) len objs = 17
r is 2.03
new r is 2.03
p1 = (23.2, 17.8)
startIdx = 0 obj (23.2, 18.05)
endIdx = 16 obj (23.2, 18.25)
startDIST = 0.25 obj (23.2, 18.05)
endDIST = 0.4499999999999993 obj (23.2, 18.25)
AL DOILEA WHILE startIdx = 0 obj (23.2, 18.05) start 0.25
startDist Il apendeaza pe (23.2, 18.05) endDist 0.25
AL DOILEA WHILE startIdx = 1 obj (23.2, 17.8) start 0.0
startDist Il apendeaza pe (23.2, 17.8) endDist 0.0
AL DOILEA WHILE startIdx = 2 obj (23.1, 17.45) start 0.3640054944640267
startDist Il apendeaza pe (23.1, 17.45) endDist 0.3640054944640267
AL DOILEA WHILE startIdx = 3 obj (23.05, 17.15) start 0.6670832032063184
startDist Il apendeaza pe (23.05, 17.15) endDist 0.6670832032063184
AL DOILEA WHILE startIdx = 4 obj (22.9, 16.9) start 0.948683298050516
startDist Il apendeaza pe (22.9, 16.9) endDist 0.948683298050516
Pentru (23.2, 18.25) endDist este 0.4499999999999993 iar r-eps este -0.77
endDist Il apendeaza pe (23.2, 18.25) endDist 0.4499999999999993
startDist Il apendeaza pe (22.75, 20.05) startDist 2.294558781116753
Before swap start end (22.75, 20.05) (23.2, 18.25) 5 16
After swap start end (23.2, 18.25) (22.75, 20.05) 5 16
p1 = (23.2, 17.8)
startIdx = 6 obj (22.9, 19.65)
endIdx = 15 obj (23.15, 18.65)
startDIST = 1.8741664813991292 obj (22.9, 19.65)
endDIST = 0.851469318296318 obj (23.15, 18.65)
AL DOILEA WHILE startIdx = 6 obj (22.9, 19.65) start 1.8741664813991292
startDist Il apendeaza pe (22.9, 19.65) endDist 1.8741664813991292
AL DOILEA WHILE startIdx = 7 obj (23.0, 19.35) start 1.562849960808779
startDist Il apendeaza pe (23.0, 19.35) endDist 1.562849960808779
AL DOILEA WHILE startIdx = 8 obj (23.1, 19.0) start 1.2041594578792287
startDist Il apendeaza pe (23.1, 19.0) endDist 1.2041594578792287
Pentru (23.15, 18.65) endDist este 0.851469318296318 iar r-eps este -0.77
endDist Il apendeaza pe (23.15, 18.65) endDist 0.851469318296318
startDist Il apendeaza pe (22.65, 20.35) startDist 2.608639492149117
Before swap start end (22.65, 20.35) (23.15, 18.65) 9 15
After swap start end (23.15, 18.65) (22.65, 20.35) 9 15
p1 = (23.2, 17.8)
startIdx = 10 obj (22.5, 20.7)
endIdx = 14 obj (21.45, 21.95)
startDIST = 2.9832867780352577 obj (22.5, 20.7)
endDIST = 4.503887209955417 obj (21.45, 21.95)
PRIMUL WHILE endIdx = 14 obj (21.45, 21.95) endDist 4.503887209955417
endDist Il apendeaza pe (21.45, 21.95) endDist 4.503887209955417
PRIMUL WHILE endIdx = 13 obj (21.75, 21.55) endDist 4.020572098594925
endDist Il apendeaza pe (21.75, 21.55) endDist 4.020572098594925
PRIMUL WHILE endIdx = 12 obj (22.0, 21.25) endDist 3.6527386985657753
endDist Il apendeaza pe (22.0, 21.25) endDist 3.6527386985657753
PRIMUL WHILE endIdx = 11 obj (22.25, 21.0) endDist 3.3380383460949026
endDist Il apendeaza pe (22.25, 21.0) endDist 3.3380383460949026
sunt egale 10 10
========================= WIN L ===================
[(23.2, 18.05), (23.2, 17.8), (23.1, 17.45), (23.05, 17.15), (22.9, 16.9), (23.2, 18.25), (22.9, 19.65), (23.0, 19.35), (23.1, 19.0), (23.15, 18.65)]
========================= WIN L END ===================
========================= WIN G ===================
[(22.75, 20.05), (22.65, 20.35), (21.45, 21.95), (21.75, 21.55), (22.0, 21.25), (22.25, 21.0), (22.5, 20.7)]
========================= WIN G END ===================
========================= OBJS first half ===================
[(23.2, 18.05), (23.2, 17.8), (23.1, 17.45), (23.05, 17.15), (22.9, 16.9), (23.2, 18.25), (22.9, 19.65), (23.0, 19.35), (23.1, 19.0)]
========================= OBJS first half END ===================
========================= OBJS last half ===================
[(23.15, 18.65), (22.5, 20.7), (22.25, 21.0), (22.0, 21.25), (21.75, 21.55), (21.45, 21.95), (22.65, 20.35), (22.75, 20.05)]
========================= OBJS last half END ===================
Intra in win
win len(objs), len(objs1), len(objs2), constSmallNumber 17 | [(23.2, 18.05), (23.2, 17.8), (23.1, 17.45), (23.05, 17.15), (22.9, 16.9), (23.2, 18.25), (22.9, 19.65), (23.0, 19.35), (23.1, 19.0), (23.15, 18.65)] | [(22.75, 20.05), (22.65, 20.35), (21.45, 21.95), (21.75, 21.55), (22.0, 21.25), (22.25, 21.0), (22.5, 20.7)] | 10
p1 = (21.75, 21.55) len objs = 10
r is 1.14
new r is 1.14
p1 = (21.75, 21.55)
startIdx = 0 obj (23.2, 18.05)
endIdx = 9 obj (23.15, 18.65)
startDIST = 3.788469347902923 obj (23.2, 18.05)
endDIST = 3.220248437620925 obj (23.15, 18.65)
PRIMUL WHILE endIdx = 9 obj (23.15, 18.65) endDist 3.220248437620925
endDist Il apendeaza pe (23.15, 18.65) endDist 3.220248437620925
PRIMUL WHILE endIdx = 8 obj (23.1, 19.0) endDist 2.8853076092507033
endDist Il apendeaza pe (23.1, 19.0) endDist 2.8853076092507033
PRIMUL WHILE endIdx = 7 obj (23.0, 19.35) endDist 2.5303161857759986
endDist Il apendeaza pe (23.0, 19.35) endDist 2.5303161857759986
PRIMUL WHILE endIdx = 6 obj (22.9, 19.65) endDist 2.220923231451282
endDist Il apendeaza pe (22.9, 19.65) endDist 2.220923231451282
PRIMUL WHILE endIdx = 5 obj (23.2, 18.25) endDist 3.6045110625437125
endDist Il apendeaza pe (23.2, 18.25) endDist 3.6045110625437125
PRIMUL WHILE endIdx = 4 obj (22.9, 16.9) endDist 4.790093944798997
PRIMUL WHILE endIdx = 3 obj (23.05, 17.15) endDist 4.588027898781787
PRIMUL WHILE endIdx = 2 obj (23.1, 17.45) endDist 4.316537964619333
PRIMUL WHILE endIdx = 1 obj (23.2, 17.8) endDist 4.020572098594925
sunt egale 0 0
========================= WIN L ===================
[]
========================= WIN L END ===================
========================= WIN G ===================
[(23.15, 18.65), (23.1, 19.0), (23.0, 19.35), (22.9, 19.65), (23.2, 18.25), (23.2, 18.05)]
========================= WIN G END ===================
========================= OBJS first half ===================
[(23.2, 18.05), (23.2, 17.8), (23.1, 17.45), (23.05, 17.15), (22.9, 16.9), (23.2, 18.25), (22.9, 19.65), (23.0, 19.35), (23.1, 19.0)]
========================= OBJS first half END ===================
========================= OBJS last half ===================
[(23.15, 18.65)]
========================= OBJS last half END ===================
p1 = (21.75, 21.55) len objs = 7
r is 1.02
new r is 1.02
p1 = (21.75, 21.55)
startIdx = 0 obj (22.75, 20.05)
endIdx = 6 obj (22.5, 20.7)
startDIST = 1.8027756377319946 obj (22.75, 20.05)
endDIST = 1.1335784048754645 obj (22.5, 20.7)
PRIMUL WHILE endIdx = 6 obj (22.5, 20.7) endDist 1.1335784048754645
endDist Il apendeaza pe (22.5, 20.7) endDist 1.1335784048754645
Pentru (22.25, 21.0) endDist este 0.7433034373659257 iar r-eps este -1.7799999999999998
endDist Il apendeaza pe (22.25, 21.0) endDist 0.7433034373659257
startDist Il apendeaza pe (22.75, 20.05) startDist 1.8027756377319946
Before swap start end (22.75, 20.05) (22.25, 21.0) 0 5
After swap start end (22.25, 21.0) (22.75, 20.05) 0 5
p1 = (21.75, 21.55)
startIdx = 1 obj (22.65, 20.35)
endIdx = 4 obj (22.0, 21.25)
startDIST = 1.4999999999999984 obj (22.65, 20.35)
endDIST = 0.39051248379533327 obj (22.0, 21.25)
Pentru (22.0, 21.25) endDist este 0.39051248379533327 iar r-eps este -1.7799999999999998
endDist Il apendeaza pe (22.0, 21.25) endDist 0.39051248379533327
startDist Il apendeaza pe (22.65, 20.35) startDist 1.4999999999999984
Before swap start end (22.65, 20.35) (22.0, 21.25) 1 4
After swap start end (22.0, 21.25) (22.65, 20.35) 1 4
p1 = (21.75, 21.55)
startIdx = 2 obj (21.45, 21.95)
endIdx = 3 obj (21.75, 21.55)
startDIST = 0.4999999999999993 obj (21.45, 21.95)
endDIST = 0.0 obj (21.75, 21.55)
AL DOILEA WHILE startIdx = 2 obj (21.45, 21.95) start 0.4999999999999993
startDist Il apendeaza pe (21.45, 21.95) endDist 0.4999999999999993
sunt egale 3 3
========================= WIN L ===================
[(22.25, 21.0), (22.0, 21.25), (21.45, 21.95), (21.75, 21.55)]
========================= WIN L END ===================
========================= WIN G ===================
[(22.5, 20.7), (22.75, 20.05), (22.65, 20.35)]
========================= WIN G END ===================
========================= OBJS first half ===================
[(22.25, 21.0), (22.0, 21.25), (21.45, 21.95)]
========================= OBJS first half END ===================
========================= OBJS last half ===================
[(21.75, 21.55), (22.65, 20.35), (22.75, 20.05), (22.5, 20.7)]
========================= OBJS last half END ===================
nested loop vine din 
nested loop objs1, objs2 [][(22.5, 20.7), (22.75, 20.05), (22.65, 20.35)]
nested loop vine din 
nested loop objs1, objs2 [(23.15, 18.65), (23.1, 19.0), (23.0, 19.35), (22.9, 19.65), (23.2, 18.25), (23.2, 18.05)][(22.25, 21.0), (22.0, 21.25), (21.45, 21.95), (21.75, 21.55)]
nested loop vine din 
nested loop objs1, objs2 [][(22.25, 21.0), (22.0, 21.25), (21.45, 21.95), (21.75, 21.55)]
nested loop vine din 
nested loop objs1, objs2 [(23.2, 18.05), (23.2, 17.8), (23.1, 17.45), (23.05, 17.15), (22.9, 16.9), (23.2, 18.25), (22.9, 19.65), (23.0, 19.35), (23.1, 19.0), (23.15, 18.65)][(22.65, 20.35), (22.75, 20.05), (22.5, 20.7)]
quick len(objs), constSmallNumber 10 10
p1 = (23.05, 17.15) len objs = 10
r is 1.14
new r is 1.14
p1 = (23.05, 17.15)
startIdx = 0 obj (23.2, 18.05)
endIdx = 9 obj (23.15, 18.65)
startDIST = 0.9124143795447348 obj (23.2, 18.05)
endDIST = 1.5033296378372907 obj (23.15, 18.65)
PRIMUL WHILE endIdx = 9 obj (23.15, 18.65) endDist 1.5033296378372907
endDist Il apendeaza pe (23.15, 18.65) endDist 1.5033296378372907
PRIMUL WHILE endIdx = 8 obj (23.1, 19.0) endDist 1.850675552332176
endDist Il apendeaza pe (23.1, 19.0) endDist 1.850675552332176
PRIMUL WHILE endIdx = 7 obj (23.0, 19.35) endDist 2.2005681084665416
endDist Il apendeaza pe (23.0, 19.35) endDist 2.2005681084665416
PRIMUL WHILE endIdx = 6 obj (22.9, 19.65) endDist 2.504495957273639
endDist Il apendeaza pe (22.9, 19.65) endDist 2.504495957273639
AL DOILEA WHILE startIdx = 0 obj (23.2, 18.05) start 0.9124143795447348
startDist Il apendeaza pe (23.2, 18.05) endDist 0.9124143795447348
AL DOILEA WHILE startIdx = 1 obj (23.2, 17.8) start 0.6670832032063184
startDist Il apendeaza pe (23.2, 17.8) endDist 0.6670832032063184
AL DOILEA WHILE startIdx = 2 obj (23.1, 17.45) start 0.3041381265149118
startDist Il apendeaza pe (23.1, 17.45) endDist 0.3041381265149118
AL DOILEA WHILE startIdx = 3 obj (23.05, 17.15) start 0.0
startDist Il apendeaza pe (23.05, 17.15) endDist 0.0
AL DOILEA WHILE startIdx = 4 obj (22.9, 16.9) start 0.2915475947422661
startDist Il apendeaza pe (22.9, 16.9) endDist 0.2915475947422661
sunt egale 5 5
========================= WIN L ===================
[(23.2, 18.05), (23.2, 17.8), (23.1, 17.45), (23.05, 17.15), (22.9, 16.9), (23.2, 18.25)]
========================= WIN L END ===================
========================= WIN G ===================
[(23.15, 18.65), (23.1, 19.0), (23.0, 19.35), (22.9, 19.65)]
========================= WIN G END ===================
========================= OBJS first half ===================
[(23.2, 18.05), (23.2, 17.8), (23.1, 17.45), (23.05, 17.15), (22.9, 16.9)]
========================= OBJS first half END ===================
========================= OBJS last half ===================
[(23.2, 18.25), (22.9, 19.65), (23.0, 19.35), (23.1, 19.0), (23.15, 18.65)]
========================= OBJS last half END ===================
Intra in win
win len(objs), len(objs1), len(objs2), constSmallNumber 10 | [(23.2, 18.05), (23.2, 17.8), (23.1, 17.45), (23.05, 17.15), (22.9, 16.9), (23.2, 18.25)] | [(23.15, 18.65), (23.1, 19.0), (23.0, 19.35), (22.9, 19.65)] | 10
p1 = (23.1, 19.0) len objs = 6
r is 0.67
new r is 0.67
p1 = (23.1, 19.0)
startIdx = 0 obj (23.2, 18.05)
endIdx = 5 obj (23.2, 18.25)
startDIST = 0.955248658727139 obj (23.2, 18.05)
endDIST = 0.7566372975210776 obj (23.2, 18.25)
PRIMUL WHILE endIdx = 5 obj (23.2, 18.25) endDist 0.7566372975210776
endDist Il apendeaza pe (23.2, 18.25) endDist 0.7566372975210776
PRIMUL WHILE endIdx = 4 obj (22.9, 16.9) endDist 2.1095023109729003
endDist Il apendeaza pe (22.9, 16.9) endDist 2.1095023109729003
PRIMUL WHILE endIdx = 3 obj (23.05, 17.15) endDist 1.850675552332176
endDist Il apendeaza pe (23.05, 17.15) endDist 1.850675552332176
PRIMUL WHILE endIdx = 2 obj (23.1, 17.45) endDist 1.5500000000000007
endDist Il apendeaza pe (23.1, 17.45) endDist 1.5500000000000007
PRIMUL WHILE endIdx = 1 obj (23.2, 17.8) endDist 1.2041594578792287
endDist Il apendeaza pe (23.2, 17.8) endDist 1.2041594578792287
sunt egale 0 0
========================= WIN L ===================
[]
========================= WIN L END ===================
========================= WIN G ===================
[(23.2, 18.25), (22.9, 16.9), (23.05, 17.15), (23.1, 17.45), (23.2, 17.8), (23.2, 18.05)]
========================= WIN G END ===================
========================= OBJS first half ===================
[(23.2, 18.05), (23.2, 17.8), (23.1, 17.45), (23.05, 17.15), (22.9, 16.9)]
========================= OBJS first half END ===================
========================= OBJS last half ===================
[(23.2, 18.25)]
========================= OBJS last half END ===================
p1 = (23.1, 19.0) len objs = 4
r is 0.58
new r is 0.58
p1 = (23.1, 19.0)
startIdx = 0 obj (23.15, 18.65)
endIdx = 3 obj (22.9, 19.65)
startDIST = 0.3535533905932748 obj (23.15, 18.65)
endDIST = 0.6800735254367717 obj (22.9, 19.65)
PRIMUL WHILE endIdx = 3 obj (22.9, 19.65) endDist 0.6800735254367717
endDist Il apendeaza pe (22.9, 19.65) endDist 0.6800735254367717
AL DOILEA WHILE startIdx = 0 obj (23.15, 18.65) start 0.3535533905932748
startDist Il apendeaza pe (23.15, 18.65) endDist 0.3535533905932748
AL DOILEA WHILE startIdx = 1 obj (23.1, 19.0) start 0.0
startDist Il apendeaza pe (23.1, 19.0) endDist 0.0
sunt egale 2 2
========================= WIN L ===================
[(23.15, 18.65), (23.1, 19.0), (23.0, 19.35)]
========================= WIN L END ===================
========================= WIN G ===================
[(22.9, 19.65)]
========================= WIN G END ===================
========================= OBJS first half ===================
[(23.15, 18.65), (23.1, 19.0)]
========================= OBJS first half END ===================
========================= OBJS last half ===================
[(23.0, 19.35), (22.9, 19.65)]
========================= OBJS last half END ===================
nested loop vine din 
nested loop objs1, objs2 [][(22.9, 19.65)]
nested loop vine din 
nested loop objs1, objs2 [(23.2, 18.25), (22.9, 16.9), (23.05, 17.15), (23.1, 17.45), (23.2, 17.8), (23.2, 18.05)][(23.15, 18.65), (23.1, 19.0), (23.0, 19.35)]
nested loop vine din 
nested loop objs1, objs2 [][(23.15, 18.65), (23.1, 19.0), (23.0, 19.35)]
nested loop vine din 
nested loop objs1, objs2 [(23.2, 18.05), (23.2, 17.8), (23.1, 17.45), (23.05, 17.15), (22.9, 16.9), (23.2, 18.25)][(22.9, 19.65)]
quick len(objs), constSmallNumber 6 10
quick len(objs), constSmallNumber 4 10
quick len(objs), constSmallNumber 7 10
quick len(objs), constSmallNumber 16 10
p1 = (22.15, 15.55) len objs = 16
r is 1.54
new r is 1.54
p1 = (22.15, 15.55)
startIdx = 0 obj (21.65, 15.05)
endIdx = 15 obj (22.85, 16.6)
startDIST = 0.7071067811865476 obj (21.65, 15.05)
endDIST = 1.2619429464123986 obj (22.85, 16.6)
AL DOILEA WHILE startIdx = 0 obj (21.65, 15.05) start 0.7071067811865476
startDist Il apendeaza pe (21.65, 15.05) endDist 0.7071067811865476
AL DOILEA WHILE startIdx = 1 obj (21.55, 15.0) start 0.8139410298049842
startDist Il apendeaza pe (21.55, 15.0) endDist 0.8139410298049842
AL DOILEA WHILE startIdx = 2 obj (21.5, 14.9) start 0.9192388155425111
startDist Il apendeaza pe (21.5, 14.9) endDist 0.9192388155425111
AL DOILEA WHILE startIdx = 3 obj (21.75, 15.15) start 0.5656854249492372
startDist Il apendeaza pe (21.75, 15.15) endDist 0.5656854249492372
AL DOILEA WHILE startIdx = 4 obj (21.85, 15.25) start 0.424264068711927
startDist Il apendeaza pe (21.85, 15.25) endDist 0.424264068711927
Pentru (22.85, 16.6) endDist este 1.2619429464123986 iar r-eps este -1.2599999999999998
endDist Il apendeaza pe (22.85, 16.6) endDist 1.2619429464123986
Before swap start end (21.0, 22.15) (22.85, 16.6) 5 15
After swap start end (22.85, 16.6) (21.0, 22.15) 5 15
p1 = (22.15, 15.55)
startIdx = 6 obj (21.9, 15.3)
endIdx = 14 obj (22.7, 16.4)
startDIST = 0.3535533905932738 obj (21.9, 15.3)
endDIST = 1.0124228365658279 obj (22.7, 16.4)
AL DOILEA WHILE startIdx = 6 obj (21.9, 15.3) start 0.3535533905932738
startDist Il apendeaza pe (21.9, 15.3) endDist 0.3535533905932738
AL DOILEA WHILE startIdx = 7 obj (22.0, 15.4) start 0.2121320343559635
startDist Il apendeaza pe (22.0, 15.4) endDist 0.2121320343559635
AL DOILEA WHILE startIdx = 8 obj (22.15, 15.55) start 0.0
startDist Il apendeaza pe (22.15, 15.55) endDist 0.0
AL DOILEA WHILE startIdx = 9 obj (22.2, 15.65) start 0.11180339887498948
startDist Il apendeaza pe (22.2, 15.65) endDist 0.11180339887498948
AL DOILEA WHILE startIdx = 10 obj (22.35, 15.8) start 0.3201562118716442
startDist Il apendeaza pe (22.35, 15.8) endDist 0.3201562118716442
AL DOILEA WHILE startIdx = 11 obj (22.4, 15.95) start 0.471699056602829
startDist Il apendeaza pe (22.4, 15.95) endDist 0.471699056602829
AL DOILEA WHILE startIdx = 12 obj (22.55, 16.05) start 0.6403124237432862
startDist Il apendeaza pe (22.55, 16.05) endDist 0.6403124237432862
AL DOILEA WHILE startIdx = 13 obj (22.6, 16.2) start 0.7905694150420952
startDist Il apendeaza pe (22.6, 16.2) endDist 0.7905694150420952
sunt egale 14 14
========================= WIN L ===================
[(21.65, 15.05), (21.55, 15.0), (21.5, 14.9), (21.75, 15.15), (21.85, 15.25), (22.85, 16.6), (21.9, 15.3), (22.0, 15.4), (22.15, 15.55), (22.2, 15.65), (22.35, 15.8), (22.4, 15.95), (22.55, 16.05), (22.6, 16.2), (22.7, 16.4)]
========================= WIN L END ===================
========================= WIN G ===================
[]
========================= WIN G END ===================
========================= OBJS first half ===================
[(21.65, 15.05), (21.55, 15.0), (21.5, 14.9), (21.75, 15.15), (21.85, 15.25), (22.85, 16.6), (21.9, 15.3), (22.0, 15.4), (22.15, 15.55), (22.2, 15.65), (22.35, 15.8), (22.4, 15.95), (22.55, 16.05), (22.6, 16.2)]
========================= OBJS first half END ===================
========================= OBJS last half ===================
[(22.7, 16.4), (21.0, 22.15)]
========================= OBJS last half END ===================
Intra in win
Una dintre partitii e 0, n-am de ce sa continui
quick len(objs), constSmallNumber 15 10
p1 = (21.5, 14.9) len objs = 15
r is 0.82
new r is 0.82
p1 = (21.5, 14.9)
startIdx = 0 obj (21.65, 15.05)
endIdx = 14 obj (22.7, 16.4)
startDIST = 0.2121320343559635 obj (21.65, 15.05)
endDIST = 1.920937271229853 obj (22.7, 16.4)
PRIMUL WHILE endIdx = 14 obj (22.7, 16.4) endDist 1.920937271229853
endDist Il apendeaza pe (22.7, 16.4) endDist 1.920937271229853
PRIMUL WHILE endIdx = 13 obj (22.6, 16.2) endDist 1.7029386365926402
endDist Il apendeaza pe (22.6, 16.2) endDist 1.7029386365926402
PRIMUL WHILE endIdx = 12 obj (22.55, 16.05) endDist 1.5572411502397445
endDist Il apendeaza pe (22.55, 16.05) endDist 1.5572411502397445
PRIMUL WHILE endIdx = 11 obj (22.4, 15.95) endDist 1.3829316685939315
endDist Il apendeaza pe (22.4, 15.95) endDist 1.3829316685939315
PRIMUL WHILE endIdx = 10 obj (22.35, 15.8) endDist 1.237941840313996
endDist Il apendeaza pe (22.35, 15.8) endDist 1.237941840313996
PRIMUL WHILE endIdx = 9 obj (22.2, 15.65) endDist 1.025914226434159
endDist Il apendeaza pe (22.2, 15.65) endDist 1.025914226434159
PRIMUL WHILE endIdx = 8 obj (22.15, 15.55) endDist 0.9192388155425111
endDist Il apendeaza pe (22.15, 15.55) endDist 0.9192388155425111
AL DOILEA WHILE startIdx = 0 obj (21.65, 15.05) start 0.2121320343559635
startDist Il apendeaza pe (21.65, 15.05) endDist 0.2121320343559635
AL DOILEA WHILE startIdx = 1 obj (21.55, 15.0) start 0.11180339887498948
startDist Il apendeaza pe (21.55, 15.0) endDist 0.11180339887498948
AL DOILEA WHILE startIdx = 2 obj (21.5, 14.9) start 0.0
startDist Il apendeaza pe (21.5, 14.9) endDist 0.0
AL DOILEA WHILE startIdx = 3 obj (21.75, 15.15) start 0.3535533905932738
startDist Il apendeaza pe (21.75, 15.15) endDist 0.3535533905932738
AL DOILEA WHILE startIdx = 4 obj (21.85, 15.25) start 0.494974746830584
startDist Il apendeaza pe (21.85, 15.25) endDist 0.494974746830584
Pentru (22.0, 15.4) endDist este 0.7071067811865476 iar r-eps este -1.98
endDist Il apendeaza pe (22.0, 15.4) endDist 0.7071067811865476
startDist Il apendeaza pe (22.85, 16.6) startDist 2.170829334609243
Before swap start end (22.85, 16.6) (22.0, 15.4) 5 7
After swap start end (22.0, 15.4) (22.85, 16.6) 5 7
sunt egale 6 6
========================= WIN L ===================
[(21.65, 15.05), (21.55, 15.0), (21.5, 14.9), (21.75, 15.15), (21.85, 15.25), (22.0, 15.4), (21.9, 15.3)]
========================= WIN L END ===================
========================= WIN G ===================
[(22.7, 16.4), (22.6, 16.2), (22.55, 16.05), (22.4, 15.95), (22.35, 15.8), (22.2, 15.65), (22.15, 15.55), (22.85, 16.6)]
========================= WIN G END ===================
========================= OBJS first half ===================
[(21.65, 15.05), (21.55, 15.0), (21.5, 14.9), (21.75, 15.15), (21.85, 15.25), (22.0, 15.4)]
========================= OBJS first half END ===================
========================= OBJS last half ===================
[(21.9, 15.3), (22.85, 16.6), (22.15, 15.55), (22.2, 15.65), (22.35, 15.8), (22.4, 15.95), (22.55, 16.05), (22.6, 16.2), (22.7, 16.4)]
========================= OBJS last half END ===================
Intra in win
win len(objs), len(objs1), len(objs2), constSmallNumber 15 | [(21.65, 15.05), (21.55, 15.0), (21.5, 14.9), (21.75, 15.15), (21.85, 15.25), (22.0, 15.4), (21.9, 15.3)] | [(22.7, 16.4), (22.6, 16.2), (22.55, 16.05), (22.4, 15.95), (22.35, 15.8), (22.2, 15.65), (22.15, 15.55), (22.85, 16.6)] | 10
p1 = (22.6, 16.2) len objs = 7
r is 0.32
new r is 0.32
p1 = (22.6, 16.2)
startIdx = 0 obj (21.65, 15.05)
endIdx = 6 obj (21.9, 15.3)
startDIST = 1.4916433890176306 obj (21.65, 15.05)
endDIST = 1.1401754250991385 obj (21.9, 15.3)
PRIMUL WHILE endIdx = 6 obj (21.9, 15.3) endDist 1.1401754250991385
endDist Il apendeaza pe (21.9, 15.3) endDist 1.1401754250991385
PRIMUL WHILE endIdx = 5 obj (22.0, 15.4) endDist 1.0
endDist Il apendeaza pe (22.0, 15.4) endDist 1.0
PRIMUL WHILE endIdx = 4 obj (21.85, 15.25) endDist 1.2103718436910198
endDist Il apendeaza pe (21.85, 15.25) endDist 1.2103718436910198
PRIMUL WHILE endIdx = 3 obj (21.75, 15.15) endDist 1.3509256086106296
endDist Il apendeaza pe (21.75, 15.15) endDist 1.3509256086106296
PRIMUL WHILE endIdx = 2 obj (21.5, 14.9) endDist 1.7029386365926402
endDist Il apendeaza pe (21.5, 14.9) endDist 1.7029386365926402
PRIMUL WHILE endIdx = 1 obj (21.55, 15.0) endDist 1.5945218719101975
endDist Il apendeaza pe (21.55, 15.0) endDist 1.5945218719101975
sunt egale 0 0
========================= WIN L ===================
[]
========================= WIN L END ===================
========================= WIN G ===================
[(21.9, 15.3), (22.0, 15.4), (21.85, 15.25), (21.75, 15.15), (21.5, 14.9), (21.55, 15.0), (21.65, 15.05)]
========================= WIN G END ===================
========================= OBJS first half ===================
[(21.65, 15.05), (21.55, 15.0), (21.5, 14.9), (21.75, 15.15), (21.85, 15.25), (22.0, 15.4)]
========================= OBJS first half END ===================
========================= OBJS last half ===================
[(21.9, 15.3)]
========================= OBJS last half END ===================
p1 = (22.6, 16.2) len objs = 8
r is 0.53
new r is 0.53
p1 = (22.6, 16.2)
startIdx = 0 obj (22.7, 16.4)
endIdx = 7 obj (22.85, 16.6)
startDIST = 0.22360679774997738 obj (22.7, 16.4)
endDIST = 0.471699056602832 obj (22.85, 16.6)
AL DOILEA WHILE startIdx = 0 obj (22.7, 16.4) start 0.22360679774997738
startDist Il apendeaza pe (22.7, 16.4) endDist 0.22360679774997738
AL DOILEA WHILE startIdx = 1 obj (22.6, 16.2) start 0.0
startDist Il apendeaza pe (22.6, 16.2) endDist 0.0
AL DOILEA WHILE startIdx = 2 obj (22.55, 16.05) start 0.15811388300841783
startDist Il apendeaza pe (22.55, 16.05) endDist 0.15811388300841783
AL DOILEA WHILE startIdx = 3 obj (22.4, 15.95) start 0.3201562118716442
startDist Il apendeaza pe (22.4, 15.95) endDist 0.3201562118716442
AL DOILEA WHILE startIdx = 4 obj (22.35, 15.8) start 0.471699056602829
startDist Il apendeaza pe (22.35, 15.8) endDist 0.471699056602829
Pentru (22.85, 16.6) endDist este 0.471699056602832 iar r-eps este -2.2699999999999996
endDist Il apendeaza pe (22.85, 16.6) endDist 0.471699056602832
startDist Il apendeaza pe (22.2, 15.65) startDist 0.6800735254367726
Before swap start end (22.2, 15.65) (22.85, 16.6) 5 7
After swap start end (22.85, 16.6) (22.2, 15.65) 5 7
sunt egale 6 6
========================= WIN L ===================
[(22.7, 16.4), (22.6, 16.2), (22.55, 16.05), (22.4, 15.95), (22.35, 15.8), (22.85, 16.6)]
========================= WIN L END ===================
========================= WIN G ===================
[(22.2, 15.65), (22.15, 15.55)]
========================= WIN G END ===================
========================= OBJS first half ===================
[(22.7, 16.4), (22.6, 16.2), (22.55, 16.05), (22.4, 15.95), (22.35, 15.8)]
========================= OBJS first half END ===================
========================= OBJS last half ===================
[(22.85, 16.6), (22.15, 15.55), (22.2, 15.65)]
========================= OBJS last half END ===================
nested loop vine din 
nested loop objs1, objs2 [][(22.2, 15.65), (22.15, 15.55)]
nested loop vine din 
nested loop objs1, objs2 [(21.9, 15.3), (22.0, 15.4), (21.85, 15.25), (21.75, 15.15), (21.5, 14.9), (21.55, 15.0), (21.65, 15.05)][(22.7, 16.4), (22.6, 16.2), (22.55, 16.05), (22.4, 15.95), (22.35, 15.8), (22.85, 16.6)]
nested loop vine din 
nested loop objs1, objs2 [][(22.7, 16.4), (22.6, 16.2), (22.55, 16.05), (22.4, 15.95), (22.35, 15.8), (22.85, 16.6)]
nested loop vine din 
nested loop objs1, objs2 [(21.65, 15.05), (21.55, 15.0), (21.5, 14.9), (21.75, 15.15), (21.85, 15.25), (22.0, 15.4), (21.9, 15.3)][(22.15, 15.55), (22.2, 15.65)]
quick len(objs), constSmallNumber 7 10
quick len(objs), constSmallNumber 8 10
quick len(objs), constSmallNumber 1 10
quick len(objs), constSmallNumber 32 10
p1 = (28.95, 25.85) len objs = 32
r is 8.07
new r is 8.07
p1 = (28.95, 25.85)
startIdx = 0 obj (29.5, 25.15)
endIdx = 31 obj (31.95, 7.95)
startDIST = 0.8902246907382455 obj (29.5, 25.15)
endDIST = 18.14965564411623 obj (31.95, 7.95)
PRIMUL WHILE endIdx = 31 obj (31.95, 7.95) endDist 18.14965564411623
PRIMUL WHILE endIdx = 30 obj (31.15, 7.3) endDist 18.68000267665934
AL DOILEA WHILE startIdx = 0 obj (29.5, 25.15) start 0.8902246907382455
AL DOILEA WHILE startIdx = 1 obj (29.95, 24.45) start 1.720465053408527
AL DOILEA WHILE startIdx = 2 obj (30.4, 23.7) start 2.5932604959779892
AL DOILEA WHILE startIdx = 3 obj (30.6, 22.9) start 3.3800887562311175
AL DOILEA WHILE startIdx = 4 obj (30.9, 22.1) start 4.226700841081611
AL DOILEA WHILE startIdx = 5 obj (31.25, 21.3) start 5.098284025042153
AL DOILEA WHILE startIdx = 6 obj (31.35, 20.55) start 5.818075283115544
startDist Il apendeaza pe (31.35, 20.55) endDist 5.818075283115544
AL DOILEA WHILE startIdx = 7 obj (31.5, 19.7) start 6.657702306351647
startDist Il apendeaza pe (31.5, 19.7) endDist 6.657702306351647
AL DOILEA WHILE startIdx = 8 obj (31.55, 18.9) start 7.420411039827918
startDist Il apendeaza pe (31.55, 18.9) endDist 7.420411039827918
Pentru (27.15, 27.9) endDist este 2.728094573140746 iar r-eps este 5.2700000000000005
startDist Il apendeaza pe (31.65, 18.15) startDist 8.159656855530141
Before swap start end (31.65, 18.15) (27.15, 27.9) 9 29
After swap start end (27.15, 27.9) (31.65, 18.15) 9 29
p1 = (28.95, 25.85)
startIdx = 10 obj (31.6, 17.35)
endIdx = 28 obj (27.75, 27.35)
startDIST = 8.903510543600204 obj (31.6, 17.35)
endDIST = 1.9209372712298542 obj (27.75, 27.35)
Pentru (27.75, 27.35) endDist este 1.9209372712298542 iar r-eps este 5.2700000000000005
startDist Il apendeaza pe (31.6, 17.35) startDist 8.903510543600204
Before swap start end (31.6, 17.35) (27.75, 27.35) 10 28
After swap start end (27.75, 27.35) (31.6, 17.35) 10 28
p1 = (28.95, 25.85)
startIdx = 11 obj (31.45, 16.55)
endIdx = 27 obj (28.3, 26.6)
startDIST = 9.630160954002795 obj (31.45, 16.55)
endDIST = 0.9924716620639594 obj (28.3, 26.6)
Pentru (28.3, 26.6) endDist este 0.9924716620639594 iar r-eps este 5.2700000000000005
startDist Il apendeaza pe (31.45, 16.55) startDist 9.630160954002795
Before swap start end (31.45, 16.55) (28.3, 26.6) 11 27
After swap start end (28.3, 26.6) (31.45, 16.55) 11 27
p1 = (28.95, 25.85)
startIdx = 12 obj (31.3, 15.8)
endIdx = 26 obj (28.95, 25.85)
startDIST = 10.32109490315829 obj (31.3, 15.8)
endDIST = 0.0 obj (28.95, 25.85)
Pentru (28.95, 25.85) endDist este 0.0 iar r-eps este 5.2700000000000005
startDist Il apendeaza pe (31.3, 15.8) startDist 10.32109490315829
Before swap start end (31.3, 15.8) (28.95, 25.85) 12 26
After swap start end (28.95, 25.85) (31.3, 15.8) 12 26
p1 = (28.95, 25.85)
startIdx = 13 obj (31.15, 15.05)
endIdx = 25 obj (25.7, 8.4)
startDIST = 11.021796586763884 obj (31.15, 15.05)
endDIST = 17.750070422395517 obj (25.7, 8.4)
PRIMUL WHILE endIdx = 25 obj (25.7, 8.4) endDist 17.750070422395517
PRIMUL WHILE endIdx = 24 obj (26.25, 8.8) endDist 17.26245926859786
PRIMUL WHILE endIdx = 23 obj (26.9, 9.1) endDist 16.87498148147132
PRIMUL WHILE endIdx = 22 obj (27.55, 9.65) endDist 16.260381299342278
PRIMUL WHILE endIdx = 21 obj (28.0, 10.1) endDist 15.77862478164685
PRIMUL WHILE endIdx = 20 obj (28.5, 10.6) endDist 15.256637899616024
PRIMUL WHILE endIdx = 19 obj (29.0, 11.15) endDist 14.700085033767662
PRIMUL WHILE endIdx = 18 obj (29.5, 11.75) endDist 14.110722873049419
PRIMUL WHILE endIdx = 17 obj (29.9, 12.3) endDist 13.583261758502632
PRIMUL WHILE endIdx = 16 obj (30.3, 13.0) endDist 12.920719794191035
PRIMUL WHILE endIdx = 15 obj (30.6, 13.65) endDist 12.311072252245133
PRIMUL WHILE endIdx = 14 obj (30.9, 14.35) endDist 11.664154491432289
sunt egale 13 13
========================= WIN L ===================
[(31.35, 20.55), (31.5, 19.7), (31.55, 18.9)]
========================= WIN L END ===================
========================= WIN G ===================
[(31.65, 18.15), (31.6, 17.35), (31.45, 16.55), (31.3, 15.8)]
========================= WIN G END ===================
========================= OBJS first half ===================
[(29.5, 25.15), (29.95, 24.45), (30.4, 23.7), (30.6, 22.9), (30.9, 22.1), (31.25, 21.3), (31.35, 20.55), (31.5, 19.7), (31.55, 18.9), (27.15, 27.9), (27.75, 27.35), (28.3, 26.6)]
========================= OBJS first half END ===================
========================= OBJS last half ===================
[(28.95, 25.85), (31.15, 15.05), (30.9, 14.35), (30.6, 13.65), (30.3, 13.0), (29.9, 12.3), (29.5, 11.75), (29.0, 11.15), (28.5, 10.6), (28.0, 10.1), (27.55, 9.65), (26.9, 9.1), (26.25, 8.8), (25.7, 8.4), (31.3, 15.8), (31.45, 16.55), (31.6, 17.35), (31.65, 18.15), (31.15, 7.3), (31.95, 7.95)]
========================= OBJS last half END ===================
Intra in win
win len(objs), len(objs1), len(objs2), constSmallNumber 7 | [(31.35, 20.55), (31.5, 19.7), (31.55, 18.9)] | [(31.65, 18.15), (31.6, 17.35), (31.45, 16.55), (31.3, 15.8)] | 10
nested loop vine din 
nested loop objs1, objs2 [(31.35, 20.55), (31.5, 19.7), (31.55, 18.9)][(31.65, 18.15), (31.6, 17.35), (31.45, 16.55), (31.3, 15.8)]
quick len(objs), constSmallNumber 13 10
p1 = (28.3, 26.6) len objs = 13
r is 3.97
new r is 3.97
p1 = (28.3, 26.6)
startIdx = 0 obj (29.5, 25.15)
endIdx = 12 obj (28.95, 25.85)
startDIST = 1.882153022471873 obj (29.5, 25.15)
endDIST = 0.9924716620639594 obj (28.95, 25.85)
AL DOILEA WHILE startIdx = 0 obj (29.5, 25.15) start 1.882153022471873
startDist Il apendeaza pe (29.5, 25.15) endDist 1.882153022471873
AL DOILEA WHILE startIdx = 1 obj (29.95, 24.45) start 2.7101660465735313
startDist Il apendeaza pe (29.95, 24.45) endDist 2.7101660465735313
AL DOILEA WHILE startIdx = 2 obj (30.4, 23.7) start 3.580502757993632
startDist Il apendeaza pe (30.4, 23.7) endDist 3.580502757993632
Pentru (28.95, 25.85) endDist este 0.9924716620639594 iar r-eps este 1.1700000000000004
startDist Il apendeaza pe (30.6, 22.9) startDist 4.356604182158396
Before swap start end (30.6, 22.9) (28.95, 25.85) 3 12
After swap start end (28.95, 25.85) (30.6, 22.9) 3 12
p1 = (28.3, 26.6)
startIdx = 4 obj (30.9, 22.1)
endIdx = 11 obj (28.3, 26.6)
startDIST = 5.197114584074512 obj (30.9, 22.1)
endDIST = 0.0 obj (28.3, 26.6)
Pentru (28.3, 26.6) endDist este 0.0 iar r-eps este 1.1700000000000004
startDist Il apendeaza pe (30.9, 22.1) startDist 5.197114584074512
Before swap start end (30.9, 22.1) (28.3, 26.6) 4 11
After swap start end (28.3, 26.6) (30.9, 22.1) 4 11
p1 = (28.3, 26.6)
startIdx = 5 obj (31.25, 21.3)
endIdx = 10 obj (27.75, 27.35)
startDIST = 6.06568215454783 obj (31.25, 21.3)
endDIST = 0.9300537618869141 obj (27.75, 27.35)
Pentru (27.75, 27.35) endDist este 0.9300537618869141 iar r-eps este 1.1700000000000004
startDist Il apendeaza pe (31.25, 21.3) startDist 6.06568215454783
Before swap start end (31.25, 21.3) (27.75, 27.35) 5 10
After swap start end (27.75, 27.35) (31.25, 21.3) 5 10
p1 = (28.3, 26.6)
startIdx = 6 obj (31.35, 20.55)
endIdx = 9 obj (27.15, 27.9)
startDIST = 6.775322870535397 obj (31.35, 20.55)
endDIST = 1.7356554957709776 obj (27.15, 27.9)
Pentru (27.15, 27.9) endDist este 1.7356554957709776 iar r-eps este 1.1700000000000004
endDist Il apendeaza pe (27.15, 27.9) endDist 1.7356554957709776
Before swap start end (31.35, 20.55) (27.15, 27.9) 6 9
After swap start end (27.15, 27.9) (31.35, 20.55) 6 9
p1 = (28.3, 26.6)
startIdx = 7 obj (31.5, 19.7)
endIdx = 8 obj (31.55, 18.9)
startDIST = 7.605918747922569 obj (31.5, 19.7)
endDIST = 8.357780805931682 obj (31.55, 18.9)
PRIMUL WHILE endIdx = 8 obj (31.55, 18.9) endDist 8.357780805931682
sunt egale 7 7
========================= WIN L ===================
[(29.5, 25.15), (29.95, 24.45), (30.4, 23.7), (27.15, 27.9)]
========================= WIN L END ===================
========================= WIN G ===================
[(30.6, 22.9), (30.9, 22.1), (31.25, 21.3)]
========================= WIN G END ===================
========================= OBJS first half ===================
[(29.5, 25.15), (29.95, 24.45), (30.4, 23.7), (28.95, 25.85), (28.3, 26.6), (27.75, 27.35)]
========================= OBJS first half END ===================
========================= OBJS last half ===================
[(27.15, 27.9), (31.5, 19.7), (31.55, 18.9), (31.35, 20.55), (31.25, 21.3), (30.9, 22.1), (30.6, 22.9)]
========================= OBJS last half END ===================
Intra in win
win len(objs), len(objs1), len(objs2), constSmallNumber 7 | [(29.5, 25.15), (29.95, 24.45), (30.4, 23.7), (27.15, 27.9)] | [(30.6, 22.9), (30.9, 22.1), (31.25, 21.3)] | 10
nested loop vine din 
nested loop objs1, objs2 [(29.5, 25.15), (29.95, 24.45), (30.4, 23.7), (27.15, 27.9)][(30.6, 22.9), (30.9, 22.1), (31.25, 21.3)]
quick len(objs), constSmallNumber 7 10
quick len(objs), constSmallNumber 6 10
quick len(objs), constSmallNumber 19 10
p1 = (30.3, 13.0) len objs = 19
r is 4.75
new r is 4.75
p1 = (30.3, 13.0)
startIdx = 0 obj (31.15, 15.05)
endIdx = 18 obj (31.95, 7.95)
startDIST = 2.219234102117215 obj (31.15, 15.05)
endDIST = 5.312720583655797 obj (31.95, 7.95)
PRIMUL WHILE endIdx = 18 obj (31.95, 7.95) endDist 5.312720583655797
endDist Il apendeaza pe (31.95, 7.95) endDist 5.312720583655797
PRIMUL WHILE endIdx = 17 obj (31.15, 7.3) endDist 5.7630287176102115
endDist Il apendeaza pe (31.15, 7.3) endDist 5.7630287176102115
PRIMUL WHILE endIdx = 16 obj (31.65, 18.15) endDist 5.324002253943924
endDist Il apendeaza pe (31.65, 18.15) endDist 5.324002253943924
AL DOILEA WHILE startIdx = 0 obj (31.15, 15.05) start 2.219234102117215
startDist Il apendeaza pe (31.15, 15.05) endDist 2.219234102117215
AL DOILEA WHILE startIdx = 1 obj (30.9, 14.35) start 1.4773286702694146
AL DOILEA WHILE startIdx = 2 obj (30.6, 13.65) start 0.7158910531638183
AL DOILEA WHILE startIdx = 3 obj (30.3, 13.0) start 0.0
AL DOILEA WHILE startIdx = 4 obj (29.9, 12.3) start 0.8062257748298554
AL DOILEA WHILE startIdx = 5 obj (29.5, 11.75) start 1.4840822079655833
AL DOILEA WHILE startIdx = 6 obj (29.0, 11.15) start 2.261083810919003
startDist Il apendeaza pe (29.0, 11.15) endDist 2.261083810919003
AL DOILEA WHILE startIdx = 7 obj (28.5, 10.6) start 3.0000000000000004
startDist Il apendeaza pe (28.5, 10.6) endDist 3.0000000000000004
AL DOILEA WHILE startIdx = 8 obj (28.0, 10.1) start 3.7013511046643504
startDist Il apendeaza pe (28.0, 10.1) endDist 3.7013511046643504
AL DOILEA WHILE startIdx = 9 obj (27.55, 9.65) start 4.3341665865538666
startDist Il apendeaza pe (27.55, 9.65) endDist 4.3341665865538666
Pentru (31.6, 17.35) endDist este 4.540099117860756 iar r-eps este 1.9500000000000002
endDist Il apendeaza pe (31.6, 17.35) endDist 4.540099117860756
startDist Il apendeaza pe (26.9, 9.1) startDist 5.1739733281106135
Before swap start end (26.9, 9.1) (31.6, 17.35) 10 15
After swap start end (31.6, 17.35) (26.9, 9.1) 10 15
p1 = (30.3, 13.0)
startIdx = 11 obj (26.25, 8.8)
endIdx = 14 obj (31.45, 16.55)
startDIST = 5.834595101633018 obj (26.25, 8.8)
endDIST = 3.731621631409058 obj (31.45, 16.55)
Pentru (31.45, 16.55) endDist este 3.731621631409058 iar r-eps este 1.9500000000000002
endDist Il apendeaza pe (31.45, 16.55) endDist 3.731621631409058
startDist Il apendeaza pe (26.25, 8.8) startDist 5.834595101633018
Before swap start end (26.25, 8.8) (31.45, 16.55) 11 14
After swap start end (31.45, 16.55) (26.25, 8.8) 11 14
p1 = (30.3, 13.0)
startIdx = 12 obj (25.7, 8.4)
endIdx = 13 obj (31.3, 15.8)
startDIST = 6.505382386916238 obj (25.7, 8.4)
endDIST = 2.9732137494637016 obj (31.3, 15.8)
Pentru (31.3, 15.8) endDist este 2.9732137494637016 iar r-eps este 1.9500000000000002
endDist Il apendeaza pe (31.3, 15.8) endDist 2.9732137494637016
startDist Il apendeaza pe (25.7, 8.4) startDist 6.505382386916238
Before swap start end (25.7, 8.4) (31.3, 15.8) 12 13
After swap start end (31.3, 15.8) (25.7, 8.4) 12 13
========================= WIN L ===================
[(31.15, 15.05), (29.0, 11.15), (28.5, 10.6), (28.0, 10.1), (27.55, 9.65), (31.6, 17.35), (31.45, 16.55), (31.3, 15.8)]
========================= WIN L END ===================
========================= WIN G ===================
[(31.95, 7.95), (31.15, 7.3), (31.65, 18.15), (26.9, 9.1), (26.25, 8.8), (25.7, 8.4)]
========================= WIN G END ===================
========================= OBJS first half ===================
[(31.15, 15.05), (30.9, 14.35), (30.6, 13.65), (30.3, 13.0), (29.9, 12.3), (29.5, 11.75), (29.0, 11.15), (28.5, 10.6), (28.0, 10.1), (27.55, 9.65), (31.6, 17.35), (31.45, 16.55)]
========================= OBJS first half END ===================
========================= OBJS last half ===================
[(31.3, 15.8), (25.7, 8.4), (26.25, 8.8), (26.9, 9.1), (31.65, 18.15), (31.15, 7.3), (31.95, 7.95)]
========================= OBJS last half END ===================
Intra in win
win len(objs), len(objs1), len(objs2), constSmallNumber 14 | [(31.15, 15.05), (29.0, 11.15), (28.5, 10.6), (28.0, 10.1), (27.55, 9.65), (31.6, 17.35), (31.45, 16.55), (31.3, 15.8)] | [(31.95, 7.95), (31.15, 7.3), (31.65, 18.15), (26.9, 9.1), (26.25, 8.8), (25.7, 8.4)] | 10
p1 = (26.9, 9.1) len objs = 8
r is 4.3
new r is 4.3
p1 = (26.9, 9.1)
startIdx = 0 obj (31.15, 15.05)
endIdx = 7 obj (31.3, 15.8)
startDIST = 7.311976476986233 obj (31.15, 15.05)
endDIST = 8.015609770940701 obj (31.3, 15.8)
PRIMUL WHILE endIdx = 7 obj (31.3, 15.8) endDist 8.015609770940701
PRIMUL WHILE endIdx = 6 obj (31.45, 16.55) endDist 8.729547525502111
PRIMUL WHILE endIdx = 5 obj (31.6, 17.35) endDist 9.49486703435072
Pentru (27.55, 9.65) endDist este 0.8514693182963221 iar r-eps este 1.5
Before swap start end (31.15, 15.05) (27.55, 9.65) 0 4
After swap start end (27.55, 9.65) (31.15, 15.05) 0 4
p1 = (26.9, 9.1)
startIdx = 1 obj (29.0, 11.15)
endIdx = 3 obj (28.0, 10.1)
startDIST = 2.9347061181658396 obj (29.0, 11.15)
endDIST = 1.4866068747318515 obj (28.0, 10.1)
AL DOILEA WHILE startIdx = 1 obj (29.0, 11.15) start 2.9347061181658396
startDist Il apendeaza pe (29.0, 11.15) endDist 2.9347061181658396
AL DOILEA WHILE startIdx = 2 obj (28.5, 10.6) start 2.193171219946132
startDist Il apendeaza pe (28.5, 10.6) endDist 2.193171219946132
sunt egale 3 3
========================= WIN L ===================
[(29.0, 11.15), (28.5, 10.6)]
========================= WIN L END ===================
========================= WIN G ===================
[]
========================= WIN G END ===================
========================= OBJS first half ===================
[(27.55, 9.65), (29.0, 11.15), (28.5, 10.6)]
========================= OBJS first half END ===================
========================= OBJS last half ===================
[(28.0, 10.1), (31.15, 15.05), (31.6, 17.35), (31.45, 16.55), (31.3, 15.8)]
========================= OBJS last half END ===================
p1 = (26.9, 9.1) len objs = 6
r is 5.99
new r is 5.99
p1 = (26.9, 9.1)
startIdx = 0 obj (31.95, 7.95)
endIdx = 5 obj (25.7, 8.4)
startDIST = 5.179285665031425 obj (31.95, 7.95)
endDIST = 1.3892443989449796 obj (25.7, 8.4)
AL DOILEA WHILE startIdx = 0 obj (31.95, 7.95) start 5.179285665031425
startDist Il apendeaza pe (31.95, 7.95) endDist 5.179285665031425
AL DOILEA WHILE startIdx = 1 obj (31.15, 7.3) start 4.615463140357639
startDist Il apendeaza pe (31.15, 7.3) endDist 4.615463140357639
Pentru (25.7, 8.4) endDist este 1.3892443989449796 iar r-eps este 3.1900000000000004
Before swap start end (31.65, 18.15) (25.7, 8.4) 2 5
After swap start end (25.7, 8.4) (31.65, 18.15) 2 5
p1 = (26.9, 9.1)
startIdx = 3 obj (26.9, 9.1)
endIdx = 4 obj (26.25, 8.8)
startDIST = 0.0 obj (26.9, 9.1)
endDIST = 0.715891053163816 obj (26.25, 8.8)
AL DOILEA WHILE startIdx = 3 obj (26.9, 9.1) start 0.0
sunt egale 4 4
========================= WIN L ===================
[(31.95, 7.95), (31.15, 7.3)]
========================= WIN L END ===================
========================= WIN G ===================
[]
========================= WIN G END ===================
========================= OBJS first half ===================
[(31.95, 7.95), (31.15, 7.3), (25.7, 8.4), (26.9, 9.1)]
========================= OBJS first half END ===================
========================= OBJS last half ===================
[(26.25, 8.8), (31.65, 18.15)]
========================= OBJS last half END ===================
nested loop vine din 
nested loop objs1, objs2 [(29.0, 11.15), (28.5, 10.6)][]
nested loop vine din 
nested loop objs1, objs2 [][(31.95, 7.95), (31.15, 7.3)]
nested loop vine din 
nested loop objs1, objs2 [(27.55, 9.65), (29.0, 11.15), (28.5, 10.6), (28.0, 10.1)][(31.95, 7.95), (31.15, 7.3), (25.7, 8.4), (26.9, 9.1), (26.25, 8.8)]
nested loop vine din 
nested loop objs1, objs2 [(31.15, 15.05), (31.6, 17.35), (31.45, 16.55), (31.3, 15.8)][(31.65, 18.15)]
quick len(objs), constSmallNumber 13 10
p1 = (29.0, 11.15) len objs = 13
r is 3.45
new r is 3.45
p1 = (29.0, 11.15)
startIdx = 0 obj (31.15, 15.05)
endIdx = 12 obj (31.3, 15.8)
startDIST = 4.453369510831096 obj (31.15, 15.05)
endDIST = 5.1877258986958825 obj (31.3, 15.8)
PRIMUL WHILE endIdx = 12 obj (31.3, 15.8) endDist 5.1877258986958825
endDist Il apendeaza pe (31.3, 15.8) endDist 5.1877258986958825
PRIMUL WHILE endIdx = 11 obj (31.45, 16.55) endDist 5.929797635670209
endDist Il apendeaza pe (31.45, 16.55) endDist 5.929797635670209
PRIMUL WHILE endIdx = 10 obj (31.6, 17.35) endDist 6.723094525588646
Pentru (27.55, 9.65) endDist este 2.0862646045025057 iar r-eps este 0.6500000000000004
endDist Il apendeaza pe (27.55, 9.65) endDist 2.0862646045025057
startDist Il apendeaza pe (31.15, 15.05) startDist 4.453369510831096
Before swap start end (31.15, 15.05) (27.55, 9.65) 0 9
After swap start end (27.55, 9.65) (31.15, 15.05) 0 9
p1 = (29.0, 11.15)
startIdx = 1 obj (30.9, 14.35)
endIdx = 8 obj (28.0, 10.1)
startDIST = 3.7215588131856774 obj (30.9, 14.35)
endDIST = 1.4500000000000006 obj (28.0, 10.1)
Pentru (28.0, 10.1) endDist este 1.4500000000000006 iar r-eps este 0.6500000000000004
endDist Il apendeaza pe (28.0, 10.1) endDist 1.4500000000000006
startDist Il apendeaza pe (30.9, 14.35) startDist 3.7215588131856774
Before swap start end (30.9, 14.35) (28.0, 10.1) 1 8
After swap start end (28.0, 10.1) (30.9, 14.35) 1 8
p1 = (29.0, 11.15)
startIdx = 2 obj (30.6, 13.65)
endIdx = 7 obj (28.5, 10.6)
startDIST = 2.9681644159311666 obj (30.6, 13.65)
endDIST = 0.7433034373659257 obj (28.5, 10.6)
AL DOILEA WHILE startIdx = 2 obj (30.6, 13.65) start 2.9681644159311666
startDist Il apendeaza pe (30.6, 13.65) endDist 2.9681644159311666
AL DOILEA WHILE startIdx = 3 obj (30.3, 13.0) start 2.261083810919003
startDist Il apendeaza pe (30.3, 13.0) endDist 2.261083810919003
AL DOILEA WHILE startIdx = 4 obj (29.9, 12.3) start 1.4603081866510228
startDist Il apendeaza pe (29.9, 12.3) endDist 1.4603081866510228
AL DOILEA WHILE startIdx = 5 obj (29.5, 11.75) start 0.7810249675906652
startDist Il apendeaza pe (29.5, 11.75) endDist 0.7810249675906652
AL DOILEA WHILE startIdx = 6 obj (29.0, 11.15) start 0.0
sunt egale 7 7
========================= WIN L ===================
[(27.55, 9.65), (28.0, 10.1), (30.6, 13.65), (30.3, 13.0), (29.9, 12.3), (29.5, 11.75), (28.5, 10.6)]
========================= WIN L END ===================
========================= WIN G ===================
[(31.3, 15.8), (31.45, 16.55), (31.15, 15.05), (30.9, 14.35)]
========================= WIN G END ===================
========================= OBJS first half ===================
[(27.55, 9.65), (28.0, 10.1), (30.6, 13.65), (30.3, 13.0), (29.9, 12.3), (29.5, 11.75), (29.0, 11.15)]
========================= OBJS first half END ===================
========================= OBJS last half ===================
[(28.5, 10.6), (30.9, 14.35), (31.15, 15.05), (31.6, 17.35), (31.45, 16.55), (31.3, 15.8)]
========================= OBJS last half END ===================
Intra in win
win len(objs), len(objs1), len(objs2), constSmallNumber 11 | [(27.55, 9.65), (28.0, 10.1), (30.6, 13.65), (30.3, 13.0), (29.9, 12.3), (29.5, 11.75), (28.5, 10.6)] | [(31.3, 15.8), (31.45, 16.55), (31.15, 15.05), (30.9, 14.35)] | 10
p1 = (29.9, 12.3) len objs = 7
r is 2.36
new r is 2.36
p1 = (29.9, 12.3)
startIdx = 0 obj (27.55, 9.65)
endIdx = 6 obj (28.5, 10.6)
startDIST = 3.541892149684966 obj (27.55, 9.65)
endDIST = 2.202271554554524 obj (28.5, 10.6)
Pentru (28.5, 10.6) endDist este 2.202271554554524 iar r-eps este -0.43999999999999995
endDist Il apendeaza pe (28.5, 10.6) endDist 2.202271554554524
startDist Il apendeaza pe (27.55, 9.65) startDist 3.541892149684966
Before swap start end (27.55, 9.65) (28.5, 10.6) 0 6
After swap start end (28.5, 10.6) (27.55, 9.65) 0 6
p1 = (29.9, 12.3)
startIdx = 1 obj (28.0, 10.1)
endIdx = 5 obj (29.5, 11.75)
startDIST = 2.9068883707497264 obj (28.0, 10.1)
endDIST = 0.6800735254367719 obj (29.5, 11.75)
Pentru (29.5, 11.75) endDist este 0.6800735254367719 iar r-eps este -0.43999999999999995
endDist Il apendeaza pe (29.5, 11.75) endDist 0.6800735254367719
startDist Il apendeaza pe (28.0, 10.1) startDist 2.9068883707497264
Before swap start end (28.0, 10.1) (29.5, 11.75) 1 5
After swap start end (29.5, 11.75) (28.0, 10.1) 1 5
p1 = (29.9, 12.3)
startIdx = 2 obj (30.6, 13.65)
endIdx = 4 obj (29.9, 12.3)
startDIST = 1.520690632574556 obj (30.6, 13.65)
endDIST = 0.0 obj (29.9, 12.3)
AL DOILEA WHILE startIdx = 2 obj (30.6, 13.65) start 1.520690632574556
startDist Il apendeaza pe (30.6, 13.65) endDist 1.520690632574556
AL DOILEA WHILE startIdx = 3 obj (30.3, 13.0) start 0.8062257748298554
startDist Il apendeaza pe (30.3, 13.0) endDist 0.8062257748298554
sunt egale 4 4
========================= WIN L ===================
[(28.5, 10.6), (29.5, 11.75), (30.6, 13.65), (30.3, 13.0), (29.9, 12.3)]
========================= WIN L END ===================
========================= WIN G ===================
[(27.55, 9.65), (28.0, 10.1)]
========================= WIN G END ===================
========================= OBJS first half ===================
[(28.5, 10.6), (29.5, 11.75), (30.6, 13.65), (30.3, 13.0)]
========================= OBJS first half END ===================
========================= OBJS last half ===================
[(29.9, 12.3), (28.0, 10.1), (27.55, 9.65)]
========================= OBJS last half END ===================
p1 = (29.9, 12.3) len objs = 4
r is 1.26
new r is 1.26
p1 = (29.9, 12.3)
startIdx = 0 obj (31.3, 15.8)
endIdx = 3 obj (30.9, 14.35)
startDIST = 3.7696153649941535 obj (31.3, 15.8)
endDIST = 2.2808989455914075 obj (30.9, 14.35)
PRIMUL WHILE endIdx = 3 obj (30.9, 14.35) endDist 2.2808989455914075
endDist Il apendeaza pe (30.9, 14.35) endDist 2.2808989455914075
PRIMUL WHILE endIdx = 2 obj (31.15, 15.05) endDist 3.020761493398643
endDist Il apendeaza pe (31.15, 15.05) endDist 3.020761493398643
PRIMUL WHILE endIdx = 1 obj (31.45, 16.55) endDist 4.523825814507009
sunt egale 0 0
========================= WIN L ===================
[]
========================= WIN L END ===================
========================= WIN G ===================
[(30.9, 14.35), (31.15, 15.05), (31.3, 15.8)]
========================= WIN G END ===================
========================= OBJS first half ===================
[(31.3, 15.8), (31.45, 16.55), (31.15, 15.05)]
========================= OBJS first half END ===================
========================= OBJS last half ===================
[(30.9, 14.35)]
========================= OBJS last half END ===================
nested loop vine din 
nested loop objs1, objs2 [(28.5, 10.6), (29.5, 11.75), (30.6, 13.65), (30.3, 13.0), (29.9, 12.3)][(30.9, 14.35), (31.15, 15.05), (31.3, 15.8)]
nested loop vine din 
nested loop objs1, objs2 [(27.55, 9.65), (28.0, 10.1)][]
nested loop vine din 
nested loop objs1, objs2 [(28.5, 10.6), (29.5, 11.75), (30.6, 13.65), (30.3, 13.0), (29.9, 12.3)][]
nested loop vine din 
nested loop objs1, objs2 [(28.0, 10.1), (27.55, 9.65)][(31.3, 15.8), (31.45, 16.55), (31.15, 15.05), (30.9, 14.35)]
quick len(objs), constSmallNumber 8 10
quick len(objs), constSmallNumber 5 10
quick len(objs), constSmallNumber 6 10
quick len(objs), constSmallNumber 49 10
p1 = (20.4, 22.7) len objs = 49
r is 13.46
new r is 13.46
p1 = (20.4, 22.7)
startIdx = 0 obj (21.25, 7.05)
endIdx = 48 obj (19.35, 31.65)
startDIST = 15.673066068896665 obj (21.25, 7.05)
endDIST = 9.011381692060324 obj (19.35, 31.65)
Pentru (19.35, 31.65) endDist este 9.011381692060324 iar r-eps este 10.66
startDist Il apendeaza pe (21.25, 7.05) startDist 15.673066068896665
Before swap start end (21.25, 7.05) (19.35, 31.65) 0 48
After swap start end (19.35, 31.65) (21.25, 7.05) 0 48
p1 = (20.4, 22.7)
startIdx = 1 obj (20.5, 7.0)
endIdx = 47 obj (20.35, 31.45)
startDIST = 15.70031846810758 obj (20.5, 7.0)
endDIST = 8.750142855976696 obj (20.35, 31.45)
Pentru (20.35, 31.45) endDist este 8.750142855976696 iar r-eps este 10.66
startDist Il apendeaza pe (20.5, 7.0) startDist 15.70031846810758
Before swap start end (20.5, 7.0) (20.35, 31.45) 1 47
After swap start end (20.35, 31.45) (20.5, 7.0) 1 47
p1 = (20.4, 22.7)
startIdx = 2 obj (19.9, 6.95)
endIdx = 46 obj (30.45, 6.65)
startDIST = 15.757934509319425 obj (19.9, 6.95)
endDIST = 18.936868801362063 obj (30.45, 6.65)
PRIMUL WHILE endIdx = 46 obj (30.45, 6.65) endDist 18.936868801362063
PRIMUL WHILE endIdx = 45 obj (29.7, 6.0) endDist 19.114915641979696
PRIMUL WHILE endIdx = 44 obj (28.9, 5.55) endDist 19.140859437339795
PRIMUL WHILE endIdx = 43 obj (28.05, 5.0) endDist 19.28244019827366
PRIMUL WHILE endIdx = 42 obj (27.2, 4.55) endDist 19.382014859141965
PRIMUL WHILE endIdx = 41 obj (26.35, 4.15) endDist 19.480888070106044
PRIMUL WHILE endIdx = 40 obj (25.4, 3.85) endDist 19.50185888575753
PRIMUL WHILE endIdx = 39 obj (24.6, 3.6) endDist 19.55632889885011
PRIMUL WHILE endIdx = 38 obj (23.6, 3.3) endDist 19.662146373170962
PRIMUL WHILE endIdx = 37 obj (22.75, 3.15) endDist 19.690733861387695
PRIMUL WHILE endIdx = 36 obj (21.85, 3.05) endDist 19.703426098016557
PRIMUL WHILE endIdx = 35 obj (20.9, 3.0) endDist 19.706344156134083
PRIMUL WHILE endIdx = 34 obj (20.0, 2.9) endDist 19.804039991880448
PRIMUL WHILE endIdx = 33 obj (19.1, 3.0) endDist 19.7428468058687
PRIMUL WHILE endIdx = 32 obj (18.2, 3.2) endDist 19.623710148695125
PRIMUL WHILE endIdx = 31 obj (17.3, 3.25) endDist 19.695494408620466
PRIMUL WHILE endIdx = 30 obj (16.55, 3.5) endDist 19.582198548681912
PRIMUL WHILE endIdx = 29 obj (15.7, 3.7) endDist 19.57268504830137
PRIMUL WHILE endIdx = 28 obj (14.85, 4.1) endDist 19.410370939268525
Pentru (17.15, 23.75) endDist este 3.4154062715876132 iar r-eps este 10.66
startDist Il apendeaza pe (19.9, 6.95) startDist 15.757934509319425
Before swap start end (19.9, 6.95) (17.15, 23.75) 2 27
After swap start end (17.15, 23.75) (19.9, 6.95) 2 27
p1 = (20.4, 22.7)
startIdx = 3 obj (19.25, 7.05)
endIdx = 26 obj (17.75, 23.75)
startDIST = 15.69219551241954 obj (19.25, 7.05)
endDIST = 2.850438562747844 obj (17.75, 23.75)
Pentru (17.75, 23.75) endDist este 2.850438562747844 iar r-eps este 10.66
startDist Il apendeaza pe (19.25, 7.05) startDist 15.69219551241954
Before swap start end (19.25, 7.05) (17.75, 23.75) 3 26
After swap start end (17.75, 23.75) (19.25, 7.05) 3 26
p1 = (20.4, 22.7)
startIdx = 4 obj (18.75, 7.1)
endIdx = 25 obj (18.2, 23.6)
startDIST = 15.687016924833095 obj (18.75, 7.1)
endDIST = 2.3769728648009427 obj (18.2, 23.6)
Pentru (18.2, 23.6) endDist este 2.3769728648009427 iar r-eps este 10.66
startDist Il apendeaza pe (18.75, 7.1) startDist 15.687016924833095
Before swap start end (18.75, 7.1) (18.2, 23.6) 4 25
After swap start end (18.2, 23.6) (18.75, 7.1) 4 25
p1 = (20.4, 22.7)
startIdx = 5 obj (18.05, 7.25)
endIdx = 24 obj (18.65, 23.5)
startDIST = 15.627699766760301 obj (18.05, 7.25)
endDIST = 1.924188140489386 obj (18.65, 23.5)
Pentru (18.65, 23.5) endDist este 1.924188140489386 iar r-eps este 10.66
startDist Il apendeaza pe (18.05, 7.25) startDist 15.627699766760301
Before swap start end (18.05, 7.25) (18.65, 23.5) 5 24
After swap start end (18.65, 23.5) (18.05, 7.25) 5 24
p1 = (20.4, 22.7)
startIdx = 6 obj (21.9, 7.1)
endIdx = 23 obj (19.1, 23.35)
startDIST = 15.67194946393077 obj (21.9, 7.1)
endDIST = 1.4534441853748616 obj (19.1, 23.35)
Pentru (19.1, 23.35) endDist este 1.4534441853748616 iar r-eps este 10.66
startDist Il apendeaza pe (21.9, 7.1) startDist 15.67194946393077
Before swap start end (21.9, 7.1) (19.1, 23.35) 6 23
After swap start end (19.1, 23.35) (21.9, 7.1) 6 23
p1 = (20.4, 22.7)
startIdx = 7 obj (22.5, 7.3)
endIdx = 22 obj (19.6, 23.15)
startDIST = 15.542522317822161 obj (22.5, 7.3)
endDIST = 0.9178779875342882 obj (19.6, 23.15)
Pentru (19.6, 23.15) endDist este 0.9178779875342882 iar r-eps este 10.66
startDist Il apendeaza pe (22.5, 7.3) startDist 15.542522317822161
Before swap start end (22.5, 7.3) (19.6, 23.15) 7 22
After swap start end (19.6, 23.15) (22.5, 7.3) 7 22
p1 = (20.4, 22.7)
startIdx = 8 obj (23.15, 7.4)
endIdx = 21 obj (20.0, 22.95)
startDIST = 15.545176100642925 obj (23.15, 7.4)
endDIST = 0.471699056602829 obj (20.0, 22.95)
Pentru (20.0, 22.95) endDist este 0.471699056602829 iar r-eps este 10.66
startDist Il apendeaza pe (23.15, 7.4) startDist 15.545176100642925
Before swap start end (23.15, 7.4) (20.0, 22.95) 8 21
After swap start end (20.0, 22.95) (23.15, 7.4) 8 21
p1 = (20.4, 22.7)
startIdx = 9 obj (23.9, 7.65)
endIdx = 20 obj (20.4, 22.7)
startDIST = 15.45161803825088 obj (23.9, 7.65)
endDIST = 0.0 obj (20.4, 22.7)
Pentru (20.4, 22.7) endDist este 0.0 iar r-eps este 10.66
startDist Il apendeaza pe (23.9, 7.65) startDist 15.45161803825088
Before swap start end (23.9, 7.65) (20.4, 22.7) 9 20
After swap start end (20.4, 22.7) (23.9, 7.65) 9 20
p1 = (20.4, 22.7)
startIdx = 10 obj (24.5, 7.75)
endIdx = 19 obj (20.7, 22.55)
startDIST = 15.502015997927494 obj (24.5, 7.75)
endDIST = 0.33541019662496846 obj (20.7, 22.55)
Pentru (20.7, 22.55) endDist este 0.33541019662496846 iar r-eps este 10.66
startDist Il apendeaza pe (24.5, 7.75) startDist 15.502015997927494
Before swap start end (24.5, 7.75) (20.7, 22.55) 10 19
After swap start end (20.7, 22.55) (24.5, 7.75) 10 19
p1 = (20.4, 22.7)
startIdx = 11 obj (25.15, 8.05)
endIdx = 18 obj (21.35, 31.1)
startDIST = 15.400811666921973 obj (25.15, 8.05)
endDIST = 8.453549550336831 obj (21.35, 31.1)
Pentru (21.35, 31.1) endDist este 8.453549550336831 iar r-eps este 10.66
startDist Il apendeaza pe (25.15, 8.05) startDist 15.400811666921973
Before swap start end (25.15, 8.05) (21.35, 31.1) 11 18
After swap start end (21.35, 31.1) (25.15, 8.05) 11 18
p1 = (20.4, 22.7)
startIdx = 12 obj (26.35, 28.5)
endIdx = 17 obj (22.25, 30.9)
startDIST = 8.309181668491792 obj (26.35, 28.5)
endDIST = 8.406098976338548 obj (22.25, 30.9)
AL DOILEA WHILE startIdx = 12 obj (26.35, 28.5) start 8.309181668491792
AL DOILEA WHILE startIdx = 13 obj (25.6, 29.05) start 8.207466113241045
AL DOILEA WHILE startIdx = 14 obj (24.9, 29.65) start 8.27964371214124
AL DOILEA WHILE startIdx = 15 obj (23.95, 30.05) start 8.162413858657256
AL DOILEA WHILE startIdx = 16 obj (23.2, 30.45) start 8.24029732473289
sunt egale 17 17
========================= WIN L ===================
[]
========================= WIN L END ===================
========================= WIN G ===================
[(21.25, 7.05), (20.5, 7.0), (19.9, 6.95), (19.25, 7.05), (18.75, 7.1), (18.05, 7.25), (21.9, 7.1), (22.5, 7.3), (23.15, 7.4), (23.9, 7.65), (24.5, 7.75), (25.15, 8.05)]
========================= WIN G END ===================
========================= OBJS first half ===================
[(19.35, 31.65), (20.35, 31.45), (17.15, 23.75), (17.75, 23.75), (18.2, 23.6), (18.65, 23.5), (19.1, 23.35), (19.6, 23.15), (20.0, 22.95), (20.4, 22.7), (20.7, 22.55), (21.35, 31.1), (26.35, 28.5), (25.6, 29.05), (24.9, 29.65), (23.95, 30.05), (23.2, 30.45)]
========================= OBJS first half END ===================
========================= OBJS last half ===================
[(22.25, 30.9), (25.15, 8.05), (24.5, 7.75), (23.9, 7.65), (23.15, 7.4), (22.5, 7.3), (21.9, 7.1), (18.05, 7.25), (18.75, 7.1), (19.25, 7.05), (19.9, 6.95), (14.85, 4.1), (15.7, 3.7), (16.55, 3.5), (17.3, 3.25), (18.2, 3.2), (19.1, 3.0), (20.0, 2.9), (20.9, 3.0), (21.85, 3.05), (22.75, 3.15), (23.6, 3.3), (24.6, 3.6), (25.4, 3.85), (26.35, 4.15), (27.2, 4.55), (28.05, 5.0), (28.9, 5.55), (29.7, 6.0), (30.45, 6.65), (20.5, 7.0), (21.25, 7.05)]
========================= OBJS last half END ===================
Intra in win
Una dintre partitii e 0, n-am de ce sa continui
quick len(objs), constSmallNumber 18 10
p1 = (17.15, 23.75) len objs = 18
r is 5.65
new r is 5.65
p1 = (17.15, 23.75)
startIdx = 0 obj (19.35, 31.65)
endIdx = 17 obj (22.25, 30.9)
startDIST = 8.200609733428362 obj (19.35, 31.65)
endDIST = 8.78251103045137 obj (22.25, 30.9)
PRIMUL WHILE endIdx = 17 obj (22.25, 30.9) endDist 8.78251103045137
PRIMUL WHILE endIdx = 16 obj (23.2, 30.45) endDist 9.027319646495298
PRIMUL WHILE endIdx = 15 obj (23.95, 30.05) endDist 9.269843580125828
PRIMUL WHILE endIdx = 14 obj (24.9, 29.65) endDist 9.740251536793082
PRIMUL WHILE endIdx = 13 obj (25.6, 29.05) endDist 9.974592723515084
PRIMUL WHILE endIdx = 12 obj (26.35, 28.5) endDist 10.353864013014661
PRIMUL WHILE endIdx = 11 obj (21.35, 31.1) endDist 8.46537063571348
Pentru (20.7, 22.55) endDist este 3.747332384510347 iar r-eps este 2.8500000000000005
endDist Il apendeaza pe (20.7, 22.55) endDist 3.747332384510347
startDist Il apendeaza pe (19.35, 31.65) startDist 8.200609733428362
Before swap start end (19.35, 31.65) (20.7, 22.55) 0 10
After swap start end (20.7, 22.55) (19.35, 31.65) 0 10
p1 = (17.15, 23.75)
startIdx = 1 obj (20.35, 31.45)
endIdx = 9 obj (20.4, 22.7)
startDIST = 8.338465086573189 obj (20.35, 31.45)
endDIST = 3.4154062715876132 obj (20.4, 22.7)
Pentru (20.4, 22.7) endDist este 3.4154062715876132 iar r-eps este 2.8500000000000005
endDist Il apendeaza pe (20.4, 22.7) endDist 3.4154062715876132
startDist Il apendeaza pe (20.35, 31.45) startDist 8.338465086573189
Before swap start end (20.35, 31.45) (20.4, 22.7) 1 9
After swap start end (20.4, 22.7) (20.35, 31.45) 1 9
p1 = (17.15, 23.75)
startIdx = 2 obj (17.15, 23.75)
endIdx = 8 obj (20.0, 22.95)
startDIST = 0.0 obj (17.15, 23.75)
endDIST = 2.9601520231231384 obj (20.0, 22.95)
AL DOILEA WHILE startIdx = 2 obj (17.15, 23.75) start 0.0
AL DOILEA WHILE startIdx = 3 obj (17.75, 23.75) start 0.6000000000000014
AL DOILEA WHILE startIdx = 4 obj (18.2, 23.6) start 1.0606601717798219
AL DOILEA WHILE startIdx = 5 obj (18.65, 23.5) start 1.5206906325745548
AL DOILEA WHILE startIdx = 6 obj (19.1, 23.35) start 1.9906029237394407
AL DOILEA WHILE startIdx = 7 obj (19.6, 23.15) start 2.522399651125891
sunt egale 8 8
========================= WIN L ===================
[(20.7, 22.55), (20.4, 22.7), (20.0, 22.95)]
========================= WIN L END ===================
========================= WIN G ===================
[(19.35, 31.65), (20.35, 31.45)]
========================= WIN G END ===================
========================= OBJS first half ===================
[(20.7, 22.55), (20.4, 22.7), (17.15, 23.75), (17.75, 23.75), (18.2, 23.6), (18.65, 23.5), (19.1, 23.35), (19.6, 23.15)]
========================= OBJS first half END ===================
========================= OBJS last half ===================
[(20.0, 22.95), (20.35, 31.45), (19.35, 31.65), (21.35, 31.1), (26.35, 28.5), (25.6, 29.05), (24.9, 29.65), (23.95, 30.05), (23.2, 30.45), (22.25, 30.9)]
========================= OBJS last half END ===================
Intra in win
win len(objs), len(objs1), len(objs2), constSmallNumber 5 | [(20.7, 22.55), (20.4, 22.7), (20.0, 22.95)] | [(19.35, 31.65), (20.35, 31.45)] | 10
nested loop vine din 
nested loop objs1, objs2 [(20.7, 22.55), (20.4, 22.7), (20.0, 22.95)][(19.35, 31.65), (20.35, 31.45)]
quick len(objs), constSmallNumber 9 10
quick len(objs), constSmallNumber 9 10
quick len(objs), constSmallNumber 31 10
p1 = (19.25, 7.05) len objs = 31
r is 5.65
new r is 5.65
p1 = (19.25, 7.05)
startIdx = 0 obj (25.15, 8.05)
endIdx = 30 obj (21.25, 7.05)
startDIST = 5.98414572015087 obj (25.15, 8.05)
endDIST = 2.0 obj (21.25, 7.05)
Pentru (21.25, 7.05) endDist este 2.0 iar r-eps este 2.8500000000000005
startDist Il apendeaza pe (25.15, 8.05) startDist 5.98414572015087
Before swap start end (25.15, 8.05) (21.25, 7.05) 0 30
After swap start end (21.25, 7.05) (25.15, 8.05) 0 30
p1 = (19.25, 7.05)
startIdx = 1 obj (24.5, 7.75)
endIdx = 29 obj (20.5, 7.0)
startDIST = 5.296461082647545 obj (24.5, 7.75)
endDIST = 1.2509996003196804 obj (20.5, 7.0)
AL DOILEA WHILE startIdx = 1 obj (24.5, 7.75) start 5.296461082647545
startDist Il apendeaza pe (24.5, 7.75) endDist 5.296461082647545
AL DOILEA WHILE startIdx = 2 obj (23.9, 7.65) start 4.688549882426334
startDist Il apendeaza pe (23.9, 7.65) endDist 4.688549882426334
AL DOILEA WHILE startIdx = 3 obj (23.15, 7.4) start 3.91567363297811
startDist Il apendeaza pe (23.15, 7.4) endDist 3.91567363297811
AL DOILEA WHILE startIdx = 4 obj (22.5, 7.3) start 3.2596012026013246
startDist Il apendeaza pe (22.5, 7.3) endDist 3.2596012026013246
AL DOILEA WHILE startIdx = 5 obj (21.9, 7.1) start 2.6504716561397133
AL DOILEA WHILE startIdx = 6 obj (18.05, 7.25) start 1.2165525060596434
AL DOILEA WHILE startIdx = 7 obj (18.75, 7.1) start 0.5024937810560445
AL DOILEA WHILE startIdx = 8 obj (19.25, 7.05) start 0.0
AL DOILEA WHILE startIdx = 9 obj (19.9, 6.95) start 0.6576473218982938
AL DOILEA WHILE startIdx = 10 obj (14.85, 4.1) start 5.297405025104273
startDist Il apendeaza pe (14.85, 4.1) endDist 5.297405025104273
AL DOILEA WHILE startIdx = 11 obj (15.7, 3.7) start 4.881085944746313
startDist Il apendeaza pe (15.7, 3.7) endDist 4.881085944746313
AL DOILEA WHILE startIdx = 12 obj (16.55, 3.5) start 4.460100895719736
startDist Il apendeaza pe (16.55, 3.5) endDist 4.460100895719736
AL DOILEA WHILE startIdx = 13 obj (17.3, 3.25) start 4.271123973850442
startDist Il apendeaza pe (17.3, 3.25) endDist 4.271123973850442
AL DOILEA WHILE startIdx = 14 obj (18.2, 3.2) start 3.9906139878469826
startDist Il apendeaza pe (18.2, 3.2) endDist 3.9906139878469826
AL DOILEA WHILE startIdx = 15 obj (19.1, 3.0) start 4.052776825831889
startDist Il apendeaza pe (19.1, 3.0) endDist 4.052776825831889
AL DOILEA WHILE startIdx = 16 obj (20.0, 2.9) start 4.2172265767919095
startDist Il apendeaza pe (20.0, 2.9) endDist 4.2172265767919095
AL DOILEA WHILE startIdx = 17 obj (20.9, 3.0) start 4.373213921133975
startDist Il apendeaza pe (20.9, 3.0) endDist 4.373213921133975
AL DOILEA WHILE startIdx = 18 obj (21.85, 3.05) start 4.770744176750626
startDist Il apendeaza pe (21.85, 3.05) endDist 4.770744176750626
AL DOILEA WHILE startIdx = 19 obj (22.75, 3.15) start 5.240229002629561
startDist Il apendeaza pe (22.75, 3.15) endDist 5.240229002629561
Pentru (20.5, 7.0) endDist este 1.2509996003196804 iar r-eps este 2.8500000000000005
startDist Il apendeaza pe (23.6, 3.3) startDist 5.743256915722996
Before swap start end (23.6, 3.3) (20.5, 7.0) 20 29
After swap start end (20.5, 7.0) (23.6, 3.3) 20 29
p1 = (19.25, 7.05)
startIdx = 21 obj (24.6, 3.6)
endIdx = 28 obj (30.45, 6.65)
startDIST = 6.365924913160696 obj (24.6, 3.6)
endDIST = 11.20714058089752 obj (30.45, 6.65)
PRIMUL WHILE endIdx = 28 obj (30.45, 6.65) endDist 11.20714058089752
PRIMUL WHILE endIdx = 27 obj (29.7, 6.0) endDist 10.502618721061904
PRIMUL WHILE endIdx = 26 obj (28.9, 5.55) endDist 9.76588449655227
PRIMUL WHILE endIdx = 25 obj (28.05, 5.0) endDist 9.035623940824452
PRIMUL WHILE endIdx = 24 obj (27.2, 4.55) endDist 8.333816652650812
endDist Il apendeaza pe (27.2, 4.55) endDist 8.333816652650812
PRIMUL WHILE endIdx = 23 obj (26.35, 4.15) endDist 7.669419795525605
endDist Il apendeaza pe (26.35, 4.15) endDist 7.669419795525605
PRIMUL WHILE endIdx = 22 obj (25.4, 3.85) endDist 6.932712311931023
endDist Il apendeaza pe (25.4, 3.85) endDist 6.932712311931023
sunt egale 21 21
========================= WIN L ===================
[(24.5, 7.75), (23.9, 7.65), (23.15, 7.4), (22.5, 7.3), (14.85, 4.1), (15.7, 3.7), (16.55, 3.5), (17.3, 3.25), (18.2, 3.2), (19.1, 3.0), (20.0, 2.9), (20.9, 3.0), (21.85, 3.05), (22.75, 3.15)]
========================= WIN L END ===================
========================= WIN G ===================
[(25.15, 8.05), (23.6, 3.3), (27.2, 4.55), (26.35, 4.15), (25.4, 3.85), (24.6, 3.6)]
========================= WIN G END ===================
========================= OBJS first half ===================
[(21.25, 7.05), (24.5, 7.75), (23.9, 7.65), (23.15, 7.4), (22.5, 7.3), (21.9, 7.1), (18.05, 7.25), (18.75, 7.1), (19.25, 7.05), (19.9, 6.95), (14.85, 4.1), (15.7, 3.7), (16.55, 3.5), (17.3, 3.25), (18.2, 3.2), (19.1, 3.0), (20.0, 2.9), (20.9, 3.0), (21.85, 3.05), (22.75, 3.15)]
========================= OBJS first half END ===================
========================= OBJS last half ===================
[(20.5, 7.0), (24.6, 3.6), (25.4, 3.85), (26.35, 4.15), (27.2, 4.55), (28.05, 5.0), (28.9, 5.55), (29.7, 6.0), (30.45, 6.65), (23.6, 3.3), (25.15, 8.05)]
========================= OBJS last half END ===================
Intra in win
win len(objs), len(objs1), len(objs2), constSmallNumber 20 | [(24.5, 7.75), (23.9, 7.65), (23.15, 7.4), (22.5, 7.3), (14.85, 4.1), (15.7, 3.7), (16.55, 3.5), (17.3, 3.25), (18.2, 3.2), (19.1, 3.0), (20.0, 2.9), (20.9, 3.0), (21.85, 3.05), (22.75, 3.15)] | [(25.15, 8.05), (23.6, 3.3), (27.2, 4.55), (26.35, 4.15), (25.4, 3.85), (24.6, 3.6)] | 10
p1 = (23.6, 3.3) len objs = 14
r is 4.64
new r is 4.64
p1 = (23.6, 3.3)
startIdx = 0 obj (24.5, 7.75)
endIdx = 13 obj (22.75, 3.15)
startDIST = 4.540099117860755 obj (24.5, 7.75)
endDIST = 0.8631338250816047 obj (22.75, 3.15)
AL DOILEA WHILE startIdx = 0 obj (24.5, 7.75) start 4.540099117860755
startDist Il apendeaza pe (24.5, 7.75) endDist 4.540099117860755
AL DOILEA WHILE startIdx = 1 obj (23.9, 7.65) start 4.3603325561245905
startDist Il apendeaza pe (23.9, 7.65) endDist 4.3603325561245905
AL DOILEA WHILE startIdx = 2 obj (23.15, 7.4) start 4.1246211947280695
startDist Il apendeaza pe (23.15, 7.4) endDist 4.1246211947280695
AL DOILEA WHILE startIdx = 3 obj (22.5, 7.3) start 4.148493702538309
startDist Il apendeaza pe (22.5, 7.3) endDist 4.148493702538309
Pentru (22.75, 3.15) endDist este 0.8631338250816047 iar r-eps este 1.8399999999999999
Before swap start end (14.85, 4.1) (22.75, 3.15) 4 13
After swap start end (22.75, 3.15) (14.85, 4.1) 4 13
p1 = (23.6, 3.3)
startIdx = 5 obj (15.7, 3.7)
endIdx = 12 obj (21.85, 3.05)
startDIST = 7.910120100226041 obj (15.7, 3.7)
endDIST = 1.7677669529663689 obj (21.85, 3.05)
Pentru (21.85, 3.05) endDist este 1.7677669529663689 iar r-eps este 1.8399999999999999
Before swap start end (15.7, 3.7) (21.85, 3.05) 5 12
After swap start end (21.85, 3.05) (15.7, 3.7) 5 12
p1 = (23.6, 3.3)
startIdx = 6 obj (16.55, 3.5)
endIdx = 11 obj (20.9, 3.0)
startDIST = 7.052836308890205 obj (16.55, 3.5)
endDIST = 2.716615541441228 obj (20.9, 3.0)
Pentru (20.9, 3.0) endDist este 2.716615541441228 iar r-eps este 1.8399999999999999
endDist Il apendeaza pe (20.9, 3.0) endDist 2.716615541441228
startDist Il apendeaza pe (16.55, 3.5) startDist 7.052836308890205
Before swap start end (16.55, 3.5) (20.9, 3.0) 6 11
After swap start end (20.9, 3.0) (16.55, 3.5) 6 11
p1 = (23.6, 3.3)
startIdx = 7 obj (17.3, 3.25)
endIdx = 10 obj (20.0, 2.9)
startDIST = 6.300198409574099 obj (17.3, 3.25)
endDIST = 3.622154055254968 obj (20.0, 2.9)
Pentru (20.0, 2.9) endDist este 3.622154055254968 iar r-eps este 1.8399999999999999
endDist Il apendeaza pe (20.0, 2.9) endDist 3.622154055254968
startDist Il apendeaza pe (17.3, 3.25) startDist 6.300198409574099
Before swap start end (17.3, 3.25) (20.0, 2.9) 7 10
After swap start end (20.0, 2.9) (17.3, 3.25) 7 10
p1 = (23.6, 3.3)
startIdx = 8 obj (18.2, 3.2)
endIdx = 9 obj (19.1, 3.0)
startDIST = 5.400925846556313 obj (18.2, 3.2)
endDIST = 4.509988913511872 obj (19.1, 3.0)
Pentru (19.1, 3.0) endDist este 4.509988913511872 iar r-eps este 1.8399999999999999
endDist Il apendeaza pe (19.1, 3.0) endDist 4.509988913511872
startDist Il apendeaza pe (18.2, 3.2) startDist 5.400925846556313
Before swap start end (18.2, 3.2) (19.1, 3.0) 8 9
After swap start end (19.1, 3.0) (18.2, 3.2) 8 9
========================= WIN L ===================
[(24.5, 7.75), (23.9, 7.65), (23.15, 7.4), (22.5, 7.3), (20.9, 3.0), (20.0, 2.9), (19.1, 3.0)]
========================= WIN L END ===================
========================= WIN G ===================
[(16.55, 3.5), (17.3, 3.25), (18.2, 3.2)]
========================= WIN G END ===================
========================= OBJS first half ===================
[(24.5, 7.75), (23.9, 7.65), (23.15, 7.4), (22.5, 7.3), (22.75, 3.15), (21.85, 3.05), (20.9, 3.0), (20.0, 2.9)]
========================= OBJS first half END ===================
========================= OBJS last half ===================
[(19.1, 3.0), (18.2, 3.2), (17.3, 3.25), (16.55, 3.5), (15.7, 3.7), (14.85, 4.1)]
========================= OBJS last half END ===================
p1 = (23.6, 3.3) len objs = 6
r is 2.72
new r is 2.72
p1 = (23.6, 3.3)
startIdx = 0 obj (25.15, 8.05)
endIdx = 5 obj (24.6, 3.6)
startDIST = 4.996498774141749 obj (25.15, 8.05)
endDIST = 1.044030650891055 obj (24.6, 3.6)
Pentru (24.6, 3.6) endDist este 1.044030650891055 iar r-eps este -0.07999999999999963
endDist Il apendeaza pe (24.6, 3.6) endDist 1.044030650891055
startDist Il apendeaza pe (25.15, 8.05) startDist 4.996498774141749
Before swap start end (25.15, 8.05) (24.6, 3.6) 0 5
After swap start end (24.6, 3.6) (25.15, 8.05) 0 5
p1 = (23.6, 3.3)
startIdx = 1 obj (23.6, 3.3)
endIdx = 4 obj (25.4, 3.85)
startDIST = 0.0 obj (23.6, 3.3)
endDIST = 1.8821530224718686 obj (25.4, 3.85)
AL DOILEA WHILE startIdx = 1 obj (23.6, 3.3) start 0.0
startDist Il apendeaza pe (23.6, 3.3) endDist 0.0
Pentru (25.4, 3.85) endDist este 1.8821530224718686 iar r-eps este -0.07999999999999963
endDist Il apendeaza pe (25.4, 3.85) endDist 1.8821530224718686
startDist Il apendeaza pe (27.2, 4.55) startDist 3.8108398024582435
Before swap start end (27.2, 4.55) (25.4, 3.85) 2 4
After swap start end (25.4, 3.85) (27.2, 4.55) 2 4
sunt egale 3 3
========================= WIN L ===================
[(24.6, 3.6), (23.6, 3.3), (25.4, 3.85)]
========================= WIN L END ===================
========================= WIN G ===================
[(25.15, 8.05), (27.2, 4.55), (26.35, 4.15)]
========================= WIN G END ===================
========================= OBJS first half ===================
[(24.6, 3.6), (23.6, 3.3)]
========================= OBJS first half END ===================
========================= OBJS last half ===================
[(25.4, 3.85), (26.35, 4.15), (27.2, 4.55), (25.15, 8.05)]
========================= OBJS last half END ===================
Intra in win
win len(objs), len(objs1), len(objs2), constSmallNumber 10 | [(24.5, 7.75), (23.9, 7.65), (23.15, 7.4), (22.5, 7.3), (20.9, 3.0), (20.0, 2.9), (19.1, 3.0)] | [(25.15, 8.05), (27.2, 4.55), (26.35, 4.15)] | 10
p1 = (27.2, 4.55) len objs = 7
r is 3.82
new r is 3.82
p1 = (27.2, 4.55)
startIdx = 0 obj (24.5, 7.75)
endIdx = 6 obj (19.1, 3.0)
startDIST = 4.186884283091664 obj (24.5, 7.75)
endDIST = 8.2469691402357 obj (19.1, 3.0)
PRIMUL WHILE endIdx = 6 obj (19.1, 3.0) endDist 8.2469691402357
PRIMUL WHILE endIdx = 5 obj (20.0, 2.9) endDist 7.386643351347078
PRIMUL WHILE endIdx = 4 obj (20.9, 3.0) endDist 6.4878733033252125
endDist Il apendeaza pe (20.9, 3.0) endDist 6.4878733033252125
PRIMUL WHILE endIdx = 3 obj (22.5, 7.3) endDist 5.445410911951456
endDist Il apendeaza pe (22.5, 7.3) endDist 5.445410911951456
PRIMUL WHILE endIdx = 2 obj (23.15, 7.4) endDist 4.952272205765754
endDist Il apendeaza pe (23.15, 7.4) endDist 4.952272205765754
PRIMUL WHILE endIdx = 1 obj (23.9, 7.65) endDist 4.5276925690687095
endDist Il apendeaza pe (23.9, 7.65) endDist 4.5276925690687095
sunt egale 0 0
========================= WIN L ===================
[]
========================= WIN L END ===================
========================= WIN G ===================
[(20.9, 3.0), (22.5, 7.3), (23.15, 7.4), (23.9, 7.65), (24.5, 7.75)]
========================= WIN G END ===================
========================= OBJS first half ===================
[(24.5, 7.75), (23.9, 7.65), (23.15, 7.4), (22.5, 7.3), (20.9, 3.0), (20.0, 2.9)]
========================= OBJS first half END ===================
========================= OBJS last half ===================
[(19.1, 3.0)]
========================= OBJS last half END ===================
p1 = (27.2, 4.55) len objs = 3
r is 3.03
new r is 3.03
p1 = (27.2, 4.55)
startIdx = 0 obj (25.15, 8.05)
endIdx = 2 obj (26.35, 4.15)
startDIST = 4.0561681424714155 obj (25.15, 8.05)
endDIST = 0.9394147114027946 obj (26.35, 4.15)
Pentru (26.35, 4.15) endDist este 0.9394147114027946 iar r-eps este 0.22999999999999998
endDist Il apendeaza pe (26.35, 4.15) endDist 0.9394147114027946
startDist Il apendeaza pe (25.15, 8.05) startDist 4.0561681424714155
Before swap start end (25.15, 8.05) (26.35, 4.15) 0 2
After swap start end (26.35, 4.15) (25.15, 8.05) 0 2
sunt egale 1 1
========================= WIN L ===================
[(26.35, 4.15)]
========================= WIN L END ===================
========================= WIN G ===================
[(25.15, 8.05)]
========================= WIN G END ===================
========================= OBJS first half ===================
[(26.35, 4.15)]
========================= OBJS first half END ===================
========================= OBJS last half ===================
[(27.2, 4.55), (25.15, 8.05)]
========================= OBJS last half END ===================
nested loop vine din 
nested loop objs1, objs2 [][(25.15, 8.05)]
nested loop vine din 
nested loop objs1, objs2 [(20.9, 3.0), (22.5, 7.3), (23.15, 7.4), (23.9, 7.65), (24.5, 7.75)][(26.35, 4.15)]
nested loop vine din 
nested loop objs1, objs2 [][(26.35, 4.15), (27.2, 4.55)]
nested loop vine din 
nested loop objs1, objs2 [(24.5, 7.75), (23.9, 7.65), (23.15, 7.4), (22.5, 7.3), (20.9, 3.0), (20.0, 2.9), (19.1, 3.0)][(25.15, 8.05)]
Intra in win
win len(objs), len(objs1), len(objs2), constSmallNumber 6 | [(16.55, 3.5), (17.3, 3.25), (18.2, 3.2)] | [(24.6, 3.6), (23.6, 3.3), (25.4, 3.85)] | 10
nested loop vine din 
nested loop objs1, objs2 [(16.55, 3.5), (17.3, 3.25), (18.2, 3.2)][(24.6, 3.6), (23.6, 3.3), (25.4, 3.85)]
Intra in win
win len(objs), len(objs1), len(objs2), constSmallNumber 12 | [(24.5, 7.75), (23.9, 7.65), (23.15, 7.4), (22.5, 7.3), (22.75, 3.15), (21.85, 3.05), (20.9, 3.0), (20.0, 2.9), (19.1, 3.0)] | [(24.6, 3.6), (23.6, 3.3), (25.4, 3.85)] | 10
p1 = (22.5, 7.3) len objs = 9
r is 3.67
new r is 3.67
p1 = (22.5, 7.3)
startIdx = 0 obj (24.5, 7.75)
endIdx = 8 obj (19.1, 3.0)
startDIST = 2.0500000000000003 obj (24.5, 7.75)
endDIST = 5.481788029466297 obj (19.1, 3.0)
PRIMUL WHILE endIdx = 8 obj (19.1, 3.0) endDist 5.481788029466297
endDist Il apendeaza pe (19.1, 3.0) endDist 5.481788029466297
PRIMUL WHILE endIdx = 7 obj (20.0, 2.9) endDist 5.060632371551998
endDist Il apendeaza pe (20.0, 2.9) endDist 5.060632371551998
PRIMUL WHILE endIdx = 6 obj (20.9, 3.0) endDist 4.588027898781785
endDist Il apendeaza pe (20.9, 3.0) endDist 4.588027898781785
PRIMUL WHILE endIdx = 5 obj (21.85, 3.05) endDist 4.299418565341132
endDist Il apendeaza pe (21.85, 3.05) endDist 4.299418565341132
PRIMUL WHILE endIdx = 4 obj (22.75, 3.15) endDist 4.1575233011974815
endDist Il apendeaza pe (22.75, 3.15) endDist 4.1575233011974815
AL DOILEA WHILE startIdx = 0 obj (24.5, 7.75) start 2.0500000000000003
startDist Il apendeaza pe (24.5, 7.75) endDist 2.0500000000000003
AL DOILEA WHILE startIdx = 1 obj (23.9, 7.65) start 1.44308696896618
startDist Il apendeaza pe (23.9, 7.65) endDist 1.44308696896618
AL DOILEA WHILE startIdx = 2 obj (23.15, 7.4) start 0.657647321898294
sunt egale 3 3
========================= WIN L ===================
[(24.5, 7.75), (23.9, 7.65)]
========================= WIN L END ===================
========================= WIN G ===================
[(19.1, 3.0), (20.0, 2.9), (20.9, 3.0), (21.85, 3.05), (22.75, 3.15)]
========================= WIN G END ===================
========================= OBJS first half ===================
[(24.5, 7.75), (23.9, 7.65), (23.15, 7.4)]
========================= OBJS first half END ===================
========================= OBJS last half ===================
[(22.5, 7.3), (22.75, 3.15), (21.85, 3.05), (20.9, 3.0), (20.0, 2.9), (19.1, 3.0)]
========================= OBJS last half END ===================
p1 = (22.5, 7.3) len objs = 3
r is 1.25
new r is 1.25
p1 = (22.5, 7.3)
startIdx = 0 obj (24.6, 3.6)
endIdx = 2 obj (25.4, 3.85)
startDIST = 4.25440947723653 obj (24.6, 3.6)
endDIST = 4.506939094329986 obj (25.4, 3.85)
PRIMUL WHILE endIdx = 2 obj (25.4, 3.85) endDist 4.506939094329986
PRIMUL WHILE endIdx = 1 obj (23.6, 3.3) endDist 4.148493702538309
sunt egale 0 0
========================= WIN L ===================
[]
========================= WIN L END ===================
========================= WIN G ===================
[]
========================= WIN G END ===================
========================= OBJS first half ===================
[(24.6, 3.6), (23.6, 3.3)]
========================= OBJS first half END ===================
========================= OBJS last half ===================
[(25.4, 3.85)]
========================= OBJS last half END ===================
nested loop vine din 
nested loop objs1, objs2 [(24.5, 7.75), (23.9, 7.65)][]
nested loop vine din 
nested loop objs1, objs2 [(19.1, 3.0), (20.0, 2.9), (20.9, 3.0), (21.85, 3.05), (22.75, 3.15)][]
nested loop vine din 
nested loop objs1, objs2 [(24.5, 7.75), (23.9, 7.65), (23.15, 7.4), (22.5, 7.3)][]
nested loop vine din 
nested loop objs1, objs2 [(22.75, 3.15), (21.85, 3.05), (20.9, 3.0), (20.0, 2.9), (19.1, 3.0)][(24.6, 3.6), (23.6, 3.3), (25.4, 3.85)]
Intra in win
win len(objs), len(objs1), len(objs2), constSmallNumber 8 | [(18.2, 3.2), (17.3, 3.25), (16.55, 3.5), (15.7, 3.7), (14.85, 4.1)] | [(26.35, 4.15), (27.2, 4.55), (25.15, 8.05)] | 10
nested loop vine din 
nested loop objs1, objs2 [(18.2, 3.2), (17.3, 3.25), (16.55, 3.5), (15.7, 3.7), (14.85, 4.1)][(26.35, 4.15), (27.2, 4.55), (25.15, 8.05)]
quick len(objs), constSmallNumber 21 10
p1 = (24.5, 7.75) len objs = 21
r is 4.27
new r is 4.27
p1 = (24.5, 7.75)
startIdx = 0 obj (21.25, 7.05)
endIdx = 20 obj (20.5, 7.0)
startDIST = 3.324530041975858 obj (21.25, 7.05)
endDIST = 4.0697051490249265 obj (20.5, 7.0)
AL DOILEA WHILE startIdx = 0 obj (21.25, 7.05) start 3.324530041975858
startDist Il apendeaza pe (21.25, 7.05) endDist 3.324530041975858
AL DOILEA WHILE startIdx = 1 obj (24.5, 7.75) start 0.0
AL DOILEA WHILE startIdx = 2 obj (23.9, 7.65) start 0.6082762530298234
AL DOILEA WHILE startIdx = 3 obj (23.15, 7.4) start 1.3946325680981366
AL DOILEA WHILE startIdx = 4 obj (22.5, 7.3) start 2.0500000000000003
startDist Il apendeaza pe (22.5, 7.3) endDist 2.0500000000000003
AL DOILEA WHILE startIdx = 5 obj (21.9, 7.1) start 2.6800186566514808
startDist Il apendeaza pe (21.9, 7.1) endDist 2.6800186566514808
Pentru (20.5, 7.0) endDist este 4.0697051490249265 iar r-eps este 1.4699999999999998
endDist Il apendeaza pe (20.5, 7.0) endDist 4.0697051490249265
startDist Il apendeaza pe (18.05, 7.25) startDist 6.469350817508662
Before swap start end (18.05, 7.25) (20.5, 7.0) 6 20
After swap start end (20.5, 7.0) (18.05, 7.25) 6 20
p1 = (24.5, 7.75)
startIdx = 7 obj (18.75, 7.1)
endIdx = 19 obj (22.75, 3.15)
startDIST = 5.786622503671723 obj (18.75, 7.1)
endDIST = 4.921635906891122 obj (22.75, 3.15)
PRIMUL WHILE endIdx = 19 obj (22.75, 3.15) endDist 4.921635906891122
endDist Il apendeaza pe (22.75, 3.15) endDist 4.921635906891122
PRIMUL WHILE endIdx = 18 obj (21.85, 3.05) endDist 5.395600059307584
endDist Il apendeaza pe (21.85, 3.05) endDist 5.395600059307584
PRIMUL WHILE endIdx = 17 obj (20.9, 3.0) endDist 5.96007550287746
endDist Il apendeaza pe (20.9, 3.0) endDist 5.96007550287746
PRIMUL WHILE endIdx = 16 obj (20.0, 2.9) endDist 6.616078899166786
endDist Il apendeaza pe (20.0, 2.9) endDist 6.616078899166786
PRIMUL WHILE endIdx = 15 obj (19.1, 3.0) endDist 7.191835648845153
PRIMUL WHILE endIdx = 14 obj (18.2, 3.2) endDist 7.771261158911082
PRIMUL WHILE endIdx = 13 obj (17.3, 3.25) endDist 8.490583018850943
PRIMUL WHILE endIdx = 12 obj (16.55, 3.5) endDist 9.014710200555534
PRIMUL WHILE endIdx = 11 obj (15.7, 3.7) endDist 9.687233867312177
PRIMUL WHILE endIdx = 10 obj (14.85, 4.1) endDist 10.31721861743755
PRIMUL WHILE endIdx = 9 obj (19.9, 6.95) endDist 4.669047011971503
endDist Il apendeaza pe (19.9, 6.95) endDist 4.669047011971503
PRIMUL WHILE endIdx = 8 obj (19.25, 7.05) endDist 5.296461082647545
endDist Il apendeaza pe (19.25, 7.05) endDist 5.296461082647545
sunt egale 7 7
========================= WIN L ===================
[(21.25, 7.05), (22.5, 7.3), (21.9, 7.1), (20.5, 7.0)]
========================= WIN L END ===================
========================= WIN G ===================
[(18.05, 7.25), (22.75, 3.15), (21.85, 3.05), (20.9, 3.0), (20.0, 2.9), (19.9, 6.95), (19.25, 7.05), (18.75, 7.1)]
========================= WIN G END ===================
========================= OBJS first half ===================
[(21.25, 7.05), (24.5, 7.75), (23.9, 7.65), (23.15, 7.4), (22.5, 7.3), (21.9, 7.1)]
========================= OBJS first half END ===================
========================= OBJS last half ===================
[(20.5, 7.0), (18.75, 7.1), (19.25, 7.05), (19.9, 6.95), (14.85, 4.1), (15.7, 3.7), (16.55, 3.5), (17.3, 3.25), (18.2, 3.2), (19.1, 3.0), (20.0, 2.9), (20.9, 3.0), (21.85, 3.05), (22.75, 3.15), (18.05, 7.25)]
========================= OBJS last half END ===================
Intra in win
win len(objs), len(objs1), len(objs2), constSmallNumber 12 | [(21.25, 7.05), (22.5, 7.3), (21.9, 7.1), (20.5, 7.0)] | [(18.05, 7.25), (22.75, 3.15), (21.85, 3.05), (20.9, 3.0), (20.0, 2.9), (19.9, 6.95), (19.25, 7.05), (18.75, 7.1)] | 10
p1 = (21.9, 7.1) len objs = 4
r is 1.12
new r is 1.12
p1 = (21.9, 7.1)
startIdx = 0 obj (21.25, 7.05)
endIdx = 3 obj (20.5, 7.0)
startDIST = 0.6519202405202634 obj (21.25, 7.05)
endDIST = 1.4035668847618186 obj (20.5, 7.0)
PRIMUL WHILE endIdx = 3 obj (20.5, 7.0) endDist 1.4035668847618186
endDist Il apendeaza pe (20.5, 7.0) endDist 1.4035668847618186
AL DOILEA WHILE startIdx = 0 obj (21.25, 7.05) start 0.6519202405202634
startDist Il apendeaza pe (21.25, 7.05) endDist 0.6519202405202634
AL DOILEA WHILE startIdx = 1 obj (22.5, 7.3) start 0.6324555320336773
startDist Il apendeaza pe (22.5, 7.3) endDist 0.6324555320336773
sunt egale 2 2
========================= WIN L ===================
[(21.25, 7.05), (22.5, 7.3), (21.9, 7.1)]
========================= WIN L END ===================
========================= WIN G ===================
[(20.5, 7.0)]
========================= WIN G END ===================
========================= OBJS first half ===================
[(21.25, 7.05), (22.5, 7.3)]
========================= OBJS first half END ===================
========================= OBJS last half ===================
[(21.9, 7.1), (20.5, 7.0)]
========================= OBJS last half END ===================
p1 = (21.9, 7.1) len objs = 8
r is 3.31
new r is 3.31
p1 = (21.9, 7.1)
startIdx = 0 obj (18.05, 7.25)
endIdx = 7 obj (18.75, 7.1)
startDIST = 3.852920969861695 obj (18.05, 7.25)
endDIST = 3.1499999999999986 obj (18.75, 7.1)
Pentru (18.75, 7.1) endDist este 3.1499999999999986 iar r-eps este 0.5100000000000002
endDist Il apendeaza pe (18.75, 7.1) endDist 3.1499999999999986
startDist Il apendeaza pe (18.05, 7.25) startDist 3.852920969861695
Before swap start end (18.05, 7.25) (18.75, 7.1) 0 7
After swap start end (18.75, 7.1) (18.05, 7.25) 0 7
p1 = (21.9, 7.1)
startIdx = 1 obj (22.75, 3.15)
endIdx = 6 obj (19.25, 7.05)
startDIST = 4.040420770167384 obj (22.75, 3.15)
endDIST = 2.6504716561397133 obj (19.25, 7.05)
Pentru (19.25, 7.05) endDist este 2.6504716561397133 iar r-eps este 0.5100000000000002
endDist Il apendeaza pe (19.25, 7.05) endDist 2.6504716561397133
startDist Il apendeaza pe (22.75, 3.15) startDist 4.040420770167384
Before swap start end (22.75, 3.15) (19.25, 7.05) 1 6
After swap start end (19.25, 7.05) (22.75, 3.15) 1 6
p1 = (21.9, 7.1)
startIdx = 2 obj (21.85, 3.05)
endIdx = 5 obj (19.9, 6.95)
startDIST = 4.050308630215727 obj (21.85, 3.05)
endDIST = 2.005617112013158 obj (19.9, 6.95)
Pentru (19.9, 6.95) endDist este 2.005617112013158 iar r-eps este 0.5100000000000002
endDist Il apendeaza pe (19.9, 6.95) endDist 2.005617112013158
startDist Il apendeaza pe (21.85, 3.05) startDist 4.050308630215727
Before swap start end (21.85, 3.05) (19.9, 6.95) 2 5
After swap start end (19.9, 6.95) (21.85, 3.05) 2 5
p1 = (21.9, 7.1)
startIdx = 3 obj (20.9, 3.0)
endIdx = 4 obj (20.0, 2.9)
startDIST = 4.220189569201838 obj (20.9, 3.0)
endDIST = 4.609772228646443 obj (20.0, 2.9)
PRIMUL WHILE endIdx = 4 obj (20.0, 2.9) endDist 4.609772228646443
endDist Il apendeaza pe (20.0, 2.9) endDist 4.609772228646443
sunt egale 3 3
========================= WIN L ===================
[(18.75, 7.1), (19.25, 7.05), (19.9, 6.95)]
========================= WIN L END ===================
========================= WIN G ===================
[(18.05, 7.25), (22.75, 3.15), (21.85, 3.05), (20.0, 2.9), (20.9, 3.0)]
========================= WIN G END ===================
========================= OBJS first half ===================
[(18.75, 7.1), (19.25, 7.05)]
========================= OBJS first half END ===================
========================= OBJS last half ===================
[(19.9, 6.95), (20.9, 3.0), (20.0, 2.9), (21.85, 3.05), (22.75, 3.15), (18.05, 7.25)]
========================= OBJS last half END ===================
Intra in win
win len(objs), len(objs1), len(objs2), constSmallNumber 8 | [(21.25, 7.05), (22.5, 7.3), (21.9, 7.1)] | [(18.05, 7.25), (22.75, 3.15), (21.85, 3.05), (20.0, 2.9), (20.9, 3.0)] | 10
nested loop vine din 
nested loop objs1, objs2 [(21.25, 7.05), (22.5, 7.3), (21.9, 7.1)][(18.05, 7.25), (22.75, 3.15), (21.85, 3.05), (20.0, 2.9), (20.9, 3.0)]
Intra in win
Una dintre partitii e 1, n-am de ce sa continui
nested loop objs1, objs2 [(20.5, 7.0)][(18.75, 7.1), (19.25, 7.05), (19.9, 6.95)]
Intra in win
win len(objs), len(objs1), len(objs2), constSmallNumber 6 | [(21.25, 7.05), (22.5, 7.3), (21.9, 7.1)] | [(18.75, 7.1), (19.25, 7.05), (19.9, 6.95)] | 10
nested loop vine din 
nested loop objs1, objs2 [(21.25, 7.05), (22.5, 7.3), (21.9, 7.1)][(18.75, 7.1), (19.25, 7.05), (19.9, 6.95)]
Intra in win
Una dintre partitii e 1, n-am de ce sa continui
nested loop objs1, objs2 [(20.5, 7.0)][(20.9, 3.0), (20.0, 2.9), (21.85, 3.05), (22.75, 3.15), (18.05, 7.25)]
quick len(objs), constSmallNumber 7 10
quick len(objs), constSmallNumber 14 10
p1 = (16.55, 3.5) len objs = 14
r is 3.7
new r is 3.7
p1 = (16.55, 3.5)
startIdx = 0 obj (18.75, 7.1)
endIdx = 13 obj (18.05, 7.25)
startDIST = 4.219004621945796 obj (18.75, 7.1)
endDIST = 4.038873605350878 obj (18.05, 7.25)
PRIMUL WHILE endIdx = 13 obj (18.05, 7.25) endDist 4.038873605350878
endDist Il apendeaza pe (18.05, 7.25) endDist 4.038873605350878
PRIMUL WHILE endIdx = 12 obj (22.75, 3.15) endDist 6.20987117418711
endDist Il apendeaza pe (22.75, 3.15) endDist 6.20987117418711
PRIMUL WHILE endIdx = 11 obj (21.85, 3.05) endDist 5.319069467491472
endDist Il apendeaza pe (21.85, 3.05) endDist 5.319069467491472
PRIMUL WHILE endIdx = 10 obj (20.9, 3.0) endDist 4.378641341786283
endDist Il apendeaza pe (20.9, 3.0) endDist 4.378641341786283
Pentru (20.0, 2.9) endDist este 3.5017852589786247 iar r-eps este 0.9000000000000004
endDist Il apendeaza pe (20.0, 2.9) endDist 3.5017852589786247
startDist Il apendeaza pe (18.75, 7.1) startDist 4.219004621945796
Before swap start end (18.75, 7.1) (20.0, 2.9) 0 9
After swap start end (20.0, 2.9) (18.75, 7.1) 0 9
p1 = (16.55, 3.5)
startIdx = 1 obj (19.25, 7.05)
endIdx = 8 obj (19.1, 3.0)
startDIST = 4.460100895719736 obj (19.25, 7.05)
endDIST = 2.5985572920372575 obj (19.1, 3.0)
Pentru (19.1, 3.0) endDist este 2.5985572920372575 iar r-eps este 0.9000000000000004
endDist Il apendeaza pe (19.1, 3.0) endDist 2.5985572920372575
startDist Il apendeaza pe (19.25, 7.05) startDist 4.460100895719736
Before swap start end (19.25, 7.05) (19.1, 3.0) 1 8
After swap start end (19.1, 3.0) (19.25, 7.05) 1 8
p1 = (16.55, 3.5)
startIdx = 2 obj (19.9, 6.95)
endIdx = 7 obj (18.2, 3.2)
startDIST = 4.808846015417835 obj (19.9, 6.95)
endDIST = 1.6770509831248408 obj (18.2, 3.2)
Pentru (18.2, 3.2) endDist este 1.6770509831248408 iar r-eps este 0.9000000000000004
endDist Il apendeaza pe (18.2, 3.2) endDist 1.6770509831248408
startDist Il apendeaza pe (19.9, 6.95) startDist 4.808846015417835
Before swap start end (19.9, 6.95) (18.2, 3.2) 2 7
After swap start end (18.2, 3.2) (19.9, 6.95) 2 7
p1 = (16.55, 3.5)
startIdx = 3 obj (14.85, 4.1)
endIdx = 6 obj (17.3, 3.25)
startDIST = 1.8027756377319955 obj (14.85, 4.1)
endDIST = 0.7905694150420949 obj (17.3, 3.25)
AL DOILEA WHILE startIdx = 3 obj (14.85, 4.1) start 1.8027756377319955
startDist Il apendeaza pe (14.85, 4.1) endDist 1.8027756377319955
AL DOILEA WHILE startIdx = 4 obj (15.7, 3.7) start 0.8732124598286504
AL DOILEA WHILE startIdx = 5 obj (16.55, 3.5) start 0.0
sunt egale 6 6
========================= WIN L ===================
[(20.0, 2.9), (19.1, 3.0), (18.2, 3.2), (14.85, 4.1)]
========================= WIN L END ===================
========================= WIN G ===================
[(18.05, 7.25), (22.75, 3.15), (21.85, 3.05), (20.9, 3.0), (18.75, 7.1), (19.25, 7.05), (19.9, 6.95)]
========================= WIN G END ===================
========================= OBJS first half ===================
[(20.0, 2.9), (19.1, 3.0), (18.2, 3.2), (14.85, 4.1), (15.7, 3.7), (16.55, 3.5)]
========================= OBJS first half END ===================
========================= OBJS last half ===================
[(17.3, 3.25), (19.9, 6.95), (19.25, 7.05), (18.75, 7.1), (20.9, 3.0), (21.85, 3.05), (22.75, 3.15), (18.05, 7.25)]
========================= OBJS last half END ===================
Intra in win
win len(objs), len(objs1), len(objs2), constSmallNumber 11 | [(20.0, 2.9), (19.1, 3.0), (18.2, 3.2), (14.85, 4.1)] | [(18.05, 7.25), (22.75, 3.15), (21.85, 3.05), (20.9, 3.0), (18.75, 7.1), (19.25, 7.05), (19.9, 6.95)] | 10
p1 = (20.0, 2.9) len objs = 4
r is 2.8
new r is 2.8
p1 = (20.0, 2.9)
startIdx = 0 obj (20.0, 2.9)
endIdx = 3 obj (14.85, 4.1)
startDIST = 0.0 obj (20.0, 2.9)
endDIST = 5.287958017987662 obj (14.85, 4.1)
PRIMUL WHILE endIdx = 3 obj (14.85, 4.1) endDist 5.287958017987662
endDist Il apendeaza pe (14.85, 4.1) endDist 5.287958017987662
AL DOILEA WHILE startIdx = 0 obj (20.0, 2.9) start 0.0
startDist Il apendeaza pe (20.0, 2.9) endDist 0.0
AL DOILEA WHILE startIdx = 1 obj (19.1, 3.0) start 0.9055385138137402
startDist Il apendeaza pe (19.1, 3.0) endDist 0.9055385138137402
sunt egale 2 2
========================= WIN L ===================
[(20.0, 2.9), (19.1, 3.0), (18.2, 3.2)]
========================= WIN L END ===================
========================= WIN G ===================
[(14.85, 4.1)]
========================= WIN G END ===================
========================= OBJS first half ===================
[(20.0, 2.9), (19.1, 3.0)]
========================= OBJS first half END ===================
========================= OBJS last half ===================
[(18.2, 3.2), (14.85, 4.1)]
========================= OBJS last half END ===================
p1 = (20.0, 2.9) len objs = 7
r is 3.32
new r is 3.32
p1 = (20.0, 2.9)
startIdx = 0 obj (18.05, 7.25)
endIdx = 6 obj (19.9, 6.95)
startDIST = 4.76707457462121 obj (18.05, 7.25)
endDIST = 4.051234379790931 obj (19.9, 6.95)
PRIMUL WHILE endIdx = 6 obj (19.9, 6.95) endDist 4.051234379790931
endDist Il apendeaza pe (19.9, 6.95) endDist 4.051234379790931
PRIMUL WHILE endIdx = 5 obj (19.25, 7.05) endDist 4.2172265767919095
endDist Il apendeaza pe (19.25, 7.05) endDist 4.2172265767919095
PRIMUL WHILE endIdx = 4 obj (18.75, 7.1) endDist 4.382065722921097
endDist Il apendeaza pe (18.75, 7.1) endDist 4.382065722921097
Pentru (20.9, 3.0) endDist este 0.9055385138137402 iar r-eps este 0.52
endDist Il apendeaza pe (20.9, 3.0) endDist 0.9055385138137402
startDist Il apendeaza pe (18.05, 7.25) startDist 4.76707457462121
Before swap start end (18.05, 7.25) (20.9, 3.0) 0 3
After swap start end (20.9, 3.0) (18.05, 7.25) 0 3
p1 = (20.0, 2.9)
startIdx = 1 obj (22.75, 3.15)
endIdx = 2 obj (21.85, 3.05)
startDIST = 2.7613402542968153 obj (22.75, 3.15)
endDIST = 1.85607111932706 obj (21.85, 3.05)
AL DOILEA WHILE startIdx = 1 obj (22.75, 3.15) start 2.7613402542968153
startDist Il apendeaza pe (22.75, 3.15) endDist 2.7613402542968153
sunt egale 2 2
========================= WIN L ===================
[(20.9, 3.0), (22.75, 3.15), (21.85, 3.05)]
========================= WIN L END ===================
========================= WIN G ===================
[(19.9, 6.95), (19.25, 7.05), (18.75, 7.1), (18.05, 7.25)]
========================= WIN G END ===================
========================= OBJS first half ===================
[(20.9, 3.0), (22.75, 3.15)]
========================= OBJS first half END ===================
========================= OBJS last half ===================
[(21.85, 3.05), (18.05, 7.25), (18.75, 7.1), (19.25, 7.05), (19.9, 6.95)]
========================= OBJS last half END ===================
Intra in win
win len(objs), len(objs1), len(objs2), constSmallNumber 7 | [(20.0, 2.9), (19.1, 3.0), (18.2, 3.2)] | [(19.9, 6.95), (19.25, 7.05), (18.75, 7.1), (18.05, 7.25)] | 10
nested loop vine din 
nested loop objs1, objs2 [(20.0, 2.9), (19.1, 3.0), (18.2, 3.2)][(19.9, 6.95), (19.25, 7.05), (18.75, 7.1), (18.05, 7.25)]
Intra in win
Una dintre partitii e 1, n-am de ce sa continui
nested loop objs1, objs2 [(14.85, 4.1)][(20.9, 3.0), (22.75, 3.15), (21.85, 3.05)]
Intra in win
win len(objs), len(objs1), len(objs2), constSmallNumber 6 | [(20.0, 2.9), (19.1, 3.0), (18.2, 3.2)] | [(20.9, 3.0), (22.75, 3.15), (21.85, 3.05)] | 10
nested loop vine din 
nested loop objs1, objs2 [(20.0, 2.9), (19.1, 3.0), (18.2, 3.2)][(20.9, 3.0), (22.75, 3.15), (21.85, 3.05)]
Intra in win
Una dintre partitii e 1, n-am de ce sa continui
nested loop objs1, objs2 [(14.85, 4.1)][(18.05, 7.25), (18.75, 7.1), (19.25, 7.05), (19.9, 6.95)]
quick len(objs), constSmallNumber 7 10
quick len(objs), constSmallNumber 7 10
quick len(objs), constSmallNumber 10 10
p1 = (28.9, 5.55) len objs = 10
r is 3.46
new r is 3.46
p1 = (28.9, 5.55)
startIdx = 0 obj (24.6, 3.6)
endIdx = 9 obj (25.15, 8.05)
startDIST = 4.7214934078107085 obj (24.6, 3.6)
endDIST = 4.506939094329987 obj (25.15, 8.05)
PRIMUL WHILE endIdx = 9 obj (25.15, 8.05) endDist 4.506939094329987
endDist Il apendeaza pe (25.15, 8.05) endDist 4.506939094329987
PRIMUL WHILE endIdx = 8 obj (23.6, 3.3) endDist 5.757820768311564
endDist Il apendeaza pe (23.6, 3.3) endDist 5.757820768311564
Pentru (30.45, 6.65) endDist este 1.9006577808748222 iar r-eps este 0.6600000000000001
endDist Il apendeaza pe (30.45, 6.65) endDist 1.9006577808748222
startDist Il apendeaza pe (24.6, 3.6) startDist 4.7214934078107085
Before swap start end (24.6, 3.6) (30.45, 6.65) 0 7
After swap start end (30.45, 6.65) (24.6, 3.6) 0 7
p1 = (28.9, 5.55)
startIdx = 1 obj (25.4, 3.85)
endIdx = 6 obj (29.7, 6.0)
startDIST = 3.8910152916687437 obj (25.4, 3.85)
endDIST = 0.9178779875342916 obj (29.7, 6.0)
Pentru (29.7, 6.0) endDist este 0.9178779875342916 iar r-eps este 0.6600000000000001
endDist Il apendeaza pe (29.7, 6.0) endDist 0.9178779875342916
startDist Il apendeaza pe (25.4, 3.85) startDist 3.8910152916687437
Before swap start end (25.4, 3.85) (29.7, 6.0) 1 6
After swap start end (29.7, 6.0) (25.4, 3.85) 1 6
p1 = (28.9, 5.55)
startIdx = 2 obj (26.35, 4.15)
endIdx = 5 obj (28.9, 5.55)
startDIST = 2.909037641557769 obj (26.35, 4.15)
endDIST = 0.0 obj (28.9, 5.55)
AL DOILEA WHILE startIdx = 2 obj (26.35, 4.15) start 2.909037641557769
startDist Il apendeaza pe (26.35, 4.15) endDist 2.909037641557769
AL DOILEA WHILE startIdx = 3 obj (27.2, 4.55) start 1.9723082923316013
startDist Il apendeaza pe (27.2, 4.55) endDist 1.9723082923316013
AL DOILEA WHILE startIdx = 4 obj (28.05, 5.0) start 1.0124228365658274
startDist Il apendeaza pe (28.05, 5.0) endDist 1.0124228365658274
sunt egale 5 5
========================= WIN L ===================
[(30.45, 6.65), (29.7, 6.0), (26.35, 4.15), (27.2, 4.55), (28.05, 5.0)]
========================= WIN L END ===================
========================= WIN G ===================
[(25.15, 8.05), (23.6, 3.3), (24.6, 3.6), (25.4, 3.85)]
========================= WIN G END ===================
========================= OBJS first half ===================
[(30.45, 6.65), (29.7, 6.0), (26.35, 4.15), (27.2, 4.55), (28.05, 5.0)]
========================= OBJS first half END ===================
========================= OBJS last half ===================
[(28.9, 5.55), (25.4, 3.85), (24.6, 3.6), (23.6, 3.3), (25.15, 8.05)]
========================= OBJS last half END ===================
Intra in win
win len(objs), len(objs1), len(objs2), constSmallNumber 9 | [(30.45, 6.65), (29.7, 6.0), (26.35, 4.15), (27.2, 4.55), (28.05, 5.0)] | [(25.15, 8.05), (23.6, 3.3), (24.6, 3.6), (25.4, 3.85)] | 10
nested loop vine din 
nested loop objs1, objs2 [(30.45, 6.65), (29.7, 6.0), (26.35, 4.15), (27.2, 4.55), (28.05, 5.0)][(25.15, 8.05), (23.6, 3.3), (24.6, 3.6), (25.4, 3.85)]
quick len(objs), constSmallNumber 6 10
quick len(objs), constSmallNumber 4 10
In final findAndMerge 200
Aggregation
Count before remove: 114
Count after remove: 106
Document
Aggregation
Count before remove: 107
Count after remove: 101
Document
Aggregation
Count before remove: 102
Count after remove: 98
Document
Aggregation
Count before remove: 99
Count after remove: 81
Document
Aggregation
Count before remove: 82
Count after remove: 78
Document
Aggregation
Count before remove: 79
Count after remove: 72
Document
Aggregation
Count before remove: 73
Count after remove: 65
Document
Aggregation
Count before remove: 66
Count after remove: 64
Document
Aggregation
Count before remove: 65
Count after remove: 60
Document
Aggregation
Count before remove: 61
Count after remove: 52
Document
Aggregation
Count before remove: 53
Count after remove: 35
Document
Aggregation
Count before remove: 36
Count after remove: 32
Document
Aggregation
Count before remove: 33
Count after remove: 29
Document
Aggregation
Count before remove: 30
Count after remove: 26
Document
Aggregation
Count before remove: 27
Count after remove: 25
Document
Aggregation
Count before remove: 26
Count after remove: 22
Document
Aggregation
Count before remove: 23
Count after remove: 16
Document
Aggregation
Count before remove: 17
Count after remove: 15
Document
Aggregation
Count before remove: 16
Count after remove: 11
Document
Aggregation
Count before remove: 12
Count after remove: 5
Document
Aggregation
Count before remove: 6
Count after remove: 3
Document
Aggregation
Count before remove: 4
Count after remove: 1
Document
{'_id': ObjectId('5d2b21ca0c68e57b91b91708'), 'bucket': [[31.25, 21.3], [30.9, 14.35], [31.35, 20.55], [29.5, 25.15], [31.5, 19.7], [28.0, 10.1], [30.6, 22.9], [30.3, 13.0], [26.25, 8.8], [28.5, 10.6], [30.6, 13.65], [20.35, 31.45], [29.0, 11.15], [30.9, 22.1], [25.15, 8.05], [28.3, 26.6], [31.65, 18.15], [23.95, 30.05], [31.6, 17.35], [23.2, 30.45], [12.0, 16.75], [13.8, 19.05], [12.35, 11.4], [26.35, 28.5], [12.55, 17.85], [12.95, 10.55], [12.3, 17.6], [27.75, 27.35], [11.85, 16.5], [12.65, 10.9], [25.7, 8.4], [12.2, 11.75], [11.55, 13.6], [25.6, 29.05], [21.25, 7.05], [22.25, 30.9], [11.55, 14.0], [31.15, 15.05], [11.55, 14.35], [28.95, 25.85], [24.9, 29.65], [15.0, 19.7], [14.15, 19.25], [16.2, 19.9], [15.4, 8.35], [15.95, 19.9], [11.6, 15.25], [18.75, 7.1], [20.5, 7.0], [15.25, 19.7], [23.9, 7.65], [29.95, 24.45], [14.85, 19.55], [27.55, 9.65], [24.5, 7.75], [29.5, 11.75], [13.95, 9.3], [11.8, 16.05], [22.5, 7.3], [30.4, 23.7], [21.9, 7.1], [13.6, 9.65], [23.15, 7.4], [18.05, 7.25], [31.55, 18.9], [17.5, 7.35], [13.3, 18.6], [13.1, 18.4], [19.9, 6.95], [12.8, 18.05], [14.45, 19.5], [21.35, 31.1], [11.75, 13.05], [13.55, 18.85], [27.15, 27.9], [11.65, 15.7], [15.55, 19.85], [29.9, 12.3], [13.25, 10.1], [16.55, 19.9], [19.35, 31.65], [31.3, 15.8], [14.9, 8.7], [26.9, 9.1], [19.25, 7.05], [14.45, 8.9], [16.9, 7.6], [31.45, 16.55], [15.8, 8.05], [12.15, 17.2], [11.8, 12.65], [16.35, 7.8], [11.95, 12.2], [11.55, 14.7]]}
{'_id': ObjectId('5d2b21ca0c68e57b91b9170b'), 'bucket': [[22.5, 20.7], [18.2, 23.6], [8.3, 18.75], [21.5, 14.9], [22.55, 16.05], [23.2, 17.8], [22.9, 16.9], [22.6, 16.2], [22.0, 15.4], [12.05, 5.65], [21.85, 15.25], [23.6, 3.3], [11.1, 22.15], [17.3, 3.25], [7.7, 16.95], [16.15, 23.85], [7.95, 10.95], [9.7, 7.85], [20.0, 2.9], [8.15, 10.35], [9.3, 20.3], [20.9, 3.0], [22.7, 16.4], [22.15, 15.55], [23.1, 19.0], [12.7, 5.2], [26.35, 4.15], [14.15, 4.4], [13.45, 23.4], [15.7, 23.75], [7.55, 16.35], [30.45, 6.65], [28.9, 5.55], [31.95, 7.95], [31.15, 7.3], [8.9, 9.05], [24.6, 3.6], [18.2, 3.2], [29.7, 6.0], [14.85, 4.1], [10.3, 7.25], [19.1, 3.0], [7.75, 11.7], [20.7, 22.55], [21.85, 3.05], [27.2, 4.55], [8.55, 9.65], [23.05, 17.15], [21.9, 15.3], [22.75, 20.05], [22.35, 15.8], [14.55, 23.6], [8.9, 19.85], [15.7, 3.7], [21.75, 15.15], [10.9, 6.65], [10.6, 21.65], [7.35, 15.75], [21.55, 15.0], [14.0, 23.55], [15.1, 23.75], [21.65, 15.05], [11.45, 6.15], [7.35, 13.75], [7.3, 14.35], [7.55, 12.35], [8.05, 18.15], [23.1, 17.45], [23.2, 18.25], [16.55, 3.5], [28.05, 5.0], [22.0, 21.25], [10.2, 21.25], [23.2, 18.05], [16.7, 23.8], [22.75, 3.15], [22.9, 19.65], [17.75, 23.75], [23.0, 19.35], [22.65, 20.35], [19.1, 23.35], [22.2, 15.65], [7.8, 17.55], [11.55, 22.45], [22.25, 21.0], [20.4, 22.7], [22.85, 16.6], [21.0, 22.15], [7.35, 14.95], [22.4, 15.95], [19.6, 23.15], [25.4, 3.85], [9.65, 20.8], [8.65, 19.3], [20.0, 22.95], [13.05, 23.2], [18.65, 23.5], [23.15, 18.65], [7.45, 13.0], [13.4, 4.75], [9.35, 8.35], [21.75, 21.55], [21.45, 21.95], [12.55, 23.0], [17.15, 23.75], [11.95, 22.7]]}
==================== ALL PAIRS ====================
[[[17.5, 7.35], [19.9, 6.95]], [[17.5, 7.35], [19.25, 7.05]], [[17.5, 7.35], [18.75, 7.1]], [[17.5, 7.35], [18.05, 7.25]], [[16.9, 7.6], [19.25, 7.05]], [[16.9, 7.6], [18.75, 7.1]], [[16.9, 7.6], [18.05, 7.25]], [[14.15, 4.4], [16.55, 3.5]], [[14.15, 4.4], [15.7, 3.7]], [[14.15, 4.4], [14.85, 4.1]], [[13.4, 4.75], [15.7, 3.7]], [[13.4, 4.75], [14.85, 4.1]], [[12.7, 5.2], [14.85, 4.1]], [[16.35, 7.8], [18.75, 7.1]], [[16.35, 7.8], [18.05, 7.25]], [[15.8, 8.05], [18.05, 7.25]], [[15.1, 23.75], [17.75, 23.75]], [[15.1, 23.75], [17.15, 23.75]], [[15.7, 23.75], [18.2, 23.6]], [[15.7, 23.75], [17.75, 23.75]], [[15.7, 23.75], [17.15, 23.75]], [[16.15, 23.85], [18.65, 23.5]], [[16.15, 23.85], [18.2, 23.6]], [[16.15, 23.85], [17.75, 23.75]], [[16.15, 23.85], [17.15, 23.75]], [[16.7, 23.8], [19.1, 23.35]], [[16.7, 23.8], [18.65, 23.5]], [[16.7, 23.8], [18.2, 23.6]], [[16.7, 23.8], [17.75, 23.75]], [[16.7, 23.8], [17.15, 23.75]], [[14.55, 23.6], [17.15, 23.75]], [[7.55, 16.35], [8.3, 18.75]], [[12.15, 17.2], [13.3, 18.6]], [[12.15, 17.2], [13.55, 18.85]], [[12.15, 17.2], [13.8, 19.05]], [[12.0, 16.75], [13.3, 18.6]], [[12.0, 16.75], [13.55, 18.85]], [[11.85, 16.5], [13.3, 18.6]], [[11.85, 16.5], [13.1, 18.4]], [[11.85, 16.5], [12.8, 18.05]], [[11.85, 16.5], [12.55, 17.85]], [[11.85, 16.5], [12.3, 17.6]], [[12.0, 16.75], [13.1, 18.4]], [[12.0, 16.75], [12.8, 18.05]], [[12.0, 16.75], [12.55, 17.85]], [[12.0, 16.75], [12.3, 17.6]], [[12.15, 17.2], [13.1, 18.4]], [[12.15, 17.2], [12.8, 18.05]], [[12.15, 17.2], [12.55, 17.85]], [[12.15, 17.2], [12.3, 17.6]], [[11.8, 16.05], [13.1, 18.4]], [[11.8, 16.05], [12.8, 18.05]], [[11.8, 16.05], [12.55, 17.85]], [[11.8, 16.05], [12.3, 17.6]], [[11.65, 15.7], [12.8, 18.05]], [[11.65, 15.7], [12.55, 17.85]], [[11.65, 15.7], [12.3, 17.6]], [[11.6, 15.25], [12.3, 17.6]], [[11.6, 15.25], [12.55, 17.85]], [[8.05, 18.15], [9.3, 20.3]], [[8.05, 18.15], [8.9, 19.85]], [[8.05, 18.15], [8.65, 19.3]], [[8.05, 18.15], [8.3, 18.75]], [[7.7, 16.95], [8.65, 19.3]], [[7.7, 16.95], [8.3, 18.75]], [[7.8, 17.55], [8.9, 19.85]], [[7.8, 17.55], [8.65, 19.3]], [[7.8, 17.55], [8.3, 18.75]], [[14.45, 8.9], [15.8, 8.05]], [[14.45, 8.9], [15.4, 8.35]], [[13.25, 10.1], [15.4, 8.35]], [[13.6, 9.65], [15.8, 8.05]], [[13.6, 9.65], [15.4, 8.35]], [[13.95, 9.3], [15.8, 8.05]], [[13.95, 9.3], [15.4, 8.35]], [[12.7, 5.2], [13.4, 4.75]], [[12.7, 5.2], [14.15, 4.4]], [[12.05, 5.65], [13.4, 4.75]], [[12.05, 5.65], [14.15, 4.4]], [[14.9, 8.7], [15.4, 8.35]], [[14.9, 8.7], [15.8, 8.05]], [[14.9, 8.7], [16.35, 7.8]], [[14.9, 8.7], [16.9, 7.6]], [[12.2, 11.75], [13.6, 9.65]], [[13.25, 10.1], [14.9, 8.7]], [[13.25, 10.1], [14.45, 8.9]], [[13.25, 10.1], [13.95, 9.3]], [[13.25, 10.1], [13.6, 9.65]], [[12.95, 10.55], [14.9, 8.7]], [[12.95, 10.55], [14.45, 8.9]], [[12.95, 10.55], [13.95, 9.3]], [[12.95, 10.55], [13.6, 9.65]], [[12.65, 10.9], [14.45, 8.9]], [[12.65, 10.9], [13.95, 9.3]], [[12.65, 10.9], [13.6, 9.65]], [[12.35, 11.4], [13.95, 9.3]], [[12.35, 11.4], [13.6, 9.65]], [[7.45, 13.0], [8.15, 10.35]], [[7.55, 12.35], [8.15, 10.35]], [[7.75, 11.7], [8.55, 9.65]], [[7.75, 11.7], [8.15, 10.35]], [[7.95, 10.95], [8.9, 9.05]], [[7.95, 10.95], [8.55, 9.65]], [[7.95, 10.95], [8.15, 10.35]], [[11.85, 16.5], [12.0, 16.75]], [[11.85, 16.5], [12.15, 17.2]], [[11.8, 16.05], [12.0, 16.75]], [[11.8, 16.05], [12.15, 17.2]], [[11.65, 15.7], [12.0, 16.75]], [[11.65, 15.7], [12.15, 17.2]], [[11.6, 15.25], [12.0, 16.75]], [[11.6, 15.25], [12.15, 17.2]], [[11.55, 14.0], [12.0, 16.75]], [[11.55, 14.35], [12.0, 16.75]], [[11.55, 14.7], [12.0, 16.75]], [[11.55, 14.7], [12.15, 17.2]], [[11.95, 12.2], [11.55, 14.7]], [[11.8, 12.65], [11.55, 14.7]], [[11.8, 12.65], [11.6, 15.25]], [[11.75, 13.05], [11.55, 14.7]], [[11.75, 13.05], [11.6, 15.25]], [[11.75, 13.05], [11.65, 15.7]], [[11.55, 13.6], [11.55, 14.7]], [[11.55, 13.6], [11.8, 16.05]], [[11.55, 13.6], [11.6, 15.25]], [[11.55, 13.6], [11.65, 15.7]], [[11.55, 13.6], [11.55, 14.0]], [[11.55, 13.6], [11.55, 14.35]], [[11.75, 13.05], [11.55, 14.0]], [[11.75, 13.05], [11.55, 14.35]], [[11.8, 12.65], [11.55, 14.0]], [[11.8, 12.65], [11.55, 14.35]], [[11.95, 12.2], [11.55, 14.0]], [[11.95, 12.2], [11.55, 14.35]], [[12.35, 11.4], [11.55, 14.0]], [[12.2, 11.75], [11.55, 14.0]], [[12.2, 11.75], [11.55, 14.35]], [[11.55, 13.6], [11.75, 13.05]], [[11.55, 13.6], [11.8, 12.65]], [[11.55, 13.6], [11.95, 12.2]], [[11.55, 13.6], [12.35, 11.4]], [[11.55, 13.6], [12.2, 11.75]], [[11.75, 13.05], [11.55, 13.6]], [[11.75, 13.05], [11.8, 12.65]], [[11.75, 13.05], [11.95, 12.2]], [[11.75, 13.05], [12.95, 10.55]], [[11.75, 13.05], [12.65, 10.9]], [[11.75, 13.05], [12.35, 11.4]], [[11.75, 13.05], [12.2, 11.75]], [[11.8, 12.65], [11.55, 13.6]], [[11.8, 12.65], [11.75, 13.05]], [[11.8, 12.65], [11.95, 12.2]], [[11.8, 12.65], [12.95, 10.55]], [[11.8, 12.65], [12.65, 10.9]], [[11.8, 12.65], [12.35, 11.4]], [[11.8, 12.65], [12.2, 11.75]], [[11.95, 12.2], [11.55, 13.6]], [[11.95, 12.2], [11.75, 13.05]], [[11.95, 12.2], [11.8, 12.65]], [[11.95, 12.2], [13.25, 10.1]], [[11.95, 12.2], [12.95, 10.55]], [[11.95, 12.2], [12.65, 10.9]], [[11.95, 12.2], [12.35, 11.4]], [[11.95, 12.2], [12.2, 11.75]], [[13.25, 10.1], [11.95, 12.2]], [[13.25, 10.1], [12.95, 10.55]], [[13.25, 10.1], [12.65, 10.9]], [[13.25, 10.1], [12.35, 11.4]], [[13.25, 10.1], [12.2, 11.75]], [[12.95, 10.55], [11.75, 13.05]], [[12.95, 10.55], [11.8, 12.65]], [[12.95, 10.55], [11.95, 12.2]], [[12.95, 10.55], [13.25, 10.1]], [[12.95, 10.55], [12.65, 10.9]], [[12.95, 10.55], [12.35, 11.4]], [[12.95, 10.55], [12.2, 11.75]], [[12.65, 10.9], [11.75, 13.05]], [[12.65, 10.9], [11.8, 12.65]], [[12.65, 10.9], [11.95, 12.2]], [[12.65, 10.9], [13.25, 10.1]], [[12.65, 10.9], [12.95, 10.55]], [[12.65, 10.9], [12.35, 11.4]], [[12.65, 10.9], [12.2, 11.75]], [[12.35, 11.4], [11.55, 13.6]], [[12.35, 11.4], [11.75, 13.05]], [[12.35, 11.4], [11.8, 12.65]], [[12.35, 11.4], [11.95, 12.2]], [[12.35, 11.4], [13.25, 10.1]], [[12.35, 11.4], [12.95, 10.55]], [[12.35, 11.4], [12.65, 10.9]], [[12.35, 11.4], [12.2, 11.75]], [[12.2, 11.75], [11.55, 13.6]], [[12.2, 11.75], [11.75, 13.05]], [[12.2, 11.75], [11.8, 12.65]], [[12.2, 11.75], [11.95, 12.2]], [[12.2, 11.75], [13.25, 10.1]], [[12.2, 11.75], [12.95, 10.55]], [[12.2, 11.75], [12.65, 10.9]], [[12.2, 11.75], [12.35, 11.4]], [[11.85, 16.5], [11.8, 16.05]], [[11.85, 16.5], [11.65, 15.7]], [[11.85, 16.5], [11.6, 15.25]], [[11.85, 16.5], [11.55, 14.0]], [[11.85, 16.5], [11.55, 14.35]], [[11.85, 16.5], [11.55, 14.7]], [[11.8, 16.05], [11.85, 16.5]], [[11.8, 16.05], [11.65, 15.7]], [[11.8, 16.05], [11.6, 15.25]], [[11.8, 16.05], [11.55, 14.0]], [[11.8, 16.05], [11.55, 14.35]], [[11.8, 16.05], [11.55, 14.7]], [[11.65, 15.7], [11.85, 16.5]], [[11.65, 15.7], [11.8, 16.05]], [[11.65, 15.7], [11.6, 15.25]], [[11.65, 15.7], [11.55, 14.0]], [[11.65, 15.7], [11.55, 14.35]], [[11.65, 15.7], [11.55, 14.7]], [[11.6, 15.25], [11.85, 16.5]], [[11.6, 15.25], [11.8, 16.05]], [[11.6, 15.25], [11.65, 15.7]], [[11.6, 15.25], [11.55, 14.0]], [[11.6, 15.25], [11.55, 14.35]], [[11.6, 15.25], [11.55, 14.7]], [[11.55, 14.0], [11.85, 16.5]], [[11.55, 14.0], [11.8, 16.05]], [[11.55, 14.0], [11.65, 15.7]], [[11.55, 14.0], [11.6, 15.25]], [[11.55, 14.0], [11.55, 14.35]], [[11.55, 14.0], [11.55, 14.7]], [[11.55, 14.35], [11.85, 16.5]], [[11.55, 14.35], [11.8, 16.05]], [[11.55, 14.35], [11.65, 15.7]], [[11.55, 14.35], [11.6, 15.25]], [[11.55, 14.35], [11.55, 14.0]], [[11.55, 14.35], [11.55, 14.7]], [[11.55, 14.7], [11.85, 16.5]], [[11.55, 14.7], [11.8, 16.05]], [[11.55, 14.7], [11.65, 15.7]], [[11.55, 14.7], [11.6, 15.25]], [[11.55, 14.7], [11.55, 14.0]], [[11.55, 14.7], [11.55, 14.35]], [[7.35, 14.95], [7.8, 17.55]], [[7.7, 16.95], [8.05, 18.15]], [[7.7, 16.95], [7.8, 17.55]], [[7.35, 15.75], [8.05, 18.15]], [[7.35, 15.75], [7.8, 17.55]], [[7.55, 16.35], [8.05, 18.15]], [[7.55, 16.35], [7.8, 17.55]], [[7.35, 15.75], [7.7, 16.95]], [[7.35, 15.75], [7.55, 16.35]], [[7.75, 11.7], [7.95, 10.95]], [[7.55, 12.35], [7.95, 10.95]], [[7.45, 13.0], [7.95, 10.95]], [[7.35, 13.75], [7.75, 11.7]], [[7.35, 13.75], [7.35, 15.75]], [[7.35, 13.75], [7.3, 14.35]], [[7.35, 13.75], [7.35, 14.95]], [[7.35, 13.75], [7.55, 12.35]], [[7.35, 13.75], [7.45, 13.0]], [[7.75, 11.7], [7.35, 13.75]], [[7.75, 11.7], [7.3, 14.35]], [[7.75, 11.7], [7.55, 12.35]], [[7.75, 11.7], [7.45, 13.0]], [[7.35, 15.75], [7.35, 13.75]], [[7.35, 15.75], [7.3, 14.35]], [[7.35, 15.75], [7.35, 14.95]], [[7.35, 15.75], [7.45, 13.0]], [[7.3, 14.35], [7.35, 13.75]], [[7.3, 14.35], [7.75, 11.7]], [[7.3, 14.35], [7.35, 15.75]], [[7.3, 14.35], [7.35, 14.95]], [[7.3, 14.35], [7.55, 12.35]], [[7.3, 14.35], [7.45, 13.0]], [[7.35, 14.95], [7.35, 13.75]], [[7.35, 14.95], [7.35, 15.75]], [[7.35, 14.95], [7.3, 14.35]], [[7.35, 14.95], [7.55, 12.35]], [[7.35, 14.95], [7.45, 13.0]], [[7.55, 12.35], [7.35, 13.75]], [[7.55, 12.35], [7.75, 11.7]], [[7.55, 12.35], [7.3, 14.35]], [[7.55, 12.35], [7.35, 14.95]], [[7.55, 12.35], [7.45, 13.0]], [[7.45, 13.0], [7.35, 13.75]], [[7.45, 13.0], [7.75, 11.7]], [[7.45, 13.0], [7.35, 15.75]], [[7.45, 13.0], [7.3, 14.35]], [[7.45, 13.0], [7.35, 14.95]], [[7.45, 13.0], [7.55, 12.35]], [[7.7, 16.95], [7.55, 16.35]], [[7.55, 16.35], [7.7, 16.95]], [[8.05, 18.15], [7.8, 17.55]], [[7.8, 17.55], [8.05, 18.15]], [[12.0, 16.75], [12.15, 17.2]], [[12.15, 17.2], [12.0, 16.75]], [[8.9, 9.05], [8.15, 10.35]], [[8.9, 9.05], [8.55, 9.65]], [[9.7, 7.85], [8.55, 9.65]], [[9.35, 8.35], [8.15, 10.35]], [[9.35, 8.35], [8.55, 9.65]], [[8.9, 9.05], [9.35, 8.35]], [[8.9, 9.05], [9.7, 7.85]], [[8.9, 9.05], [10.3, 7.25]], [[12.7, 5.2], [12.05, 5.65]], [[12.7, 5.2], [10.9, 6.65]], [[12.7, 5.2], [11.45, 6.15]], [[12.05, 5.65], [12.7, 5.2]], [[12.05, 5.65], [10.3, 7.25]], [[12.05, 5.65], [10.9, 6.65]], [[12.05, 5.65], [11.45, 6.15]], [[9.35, 8.35], [8.9, 9.05]], [[9.35, 8.35], [9.7, 7.85]], [[9.35, 8.35], [10.3, 7.25]], [[9.35, 8.35], [10.9, 6.65]], [[9.7, 7.85], [8.9, 9.05]], [[9.7, 7.85], [9.35, 8.35]], [[9.7, 7.85], [10.3, 7.25]], [[9.7, 7.85], [10.9, 6.65]], [[9.7, 7.85], [11.45, 6.15]], [[10.3, 7.25], [8.9, 9.05]], [[10.3, 7.25], [12.05, 5.65]], [[10.3, 7.25], [9.35, 8.35]], [[10.3, 7.25], [9.7, 7.85]], [[10.3, 7.25], [10.9, 6.65]], [[10.3, 7.25], [11.45, 6.15]], [[10.9, 6.65], [12.7, 5.2]], [[10.9, 6.65], [12.05, 5.65]], [[10.9, 6.65], [9.35, 8.35]], [[10.9, 6.65], [9.7, 7.85]], [[10.9, 6.65], [10.3, 7.25]], [[10.9, 6.65], [11.45, 6.15]], [[11.45, 6.15], [12.7, 5.2]], [[11.45, 6.15], [12.05, 5.65]], [[11.45, 6.15], [9.7, 7.85]], [[11.45, 6.15], [10.3, 7.25]], [[11.45, 6.15], [10.9, 6.65]], [[8.15, 10.35], [8.55, 9.65]], [[8.55, 9.65], [8.15, 10.35]], [[13.6, 9.65], [13.95, 9.3]], [[13.6, 9.65], [14.45, 8.9]], [[13.6, 9.65], [14.9, 8.7]], [[13.95, 9.3], [13.6, 9.65]], [[13.95, 9.3], [14.45, 8.9]], [[13.95, 9.3], [14.9, 8.7]], [[14.45, 8.9], [13.6, 9.65]], [[14.45, 8.9], [13.95, 9.3]], [[14.45, 8.9], [14.9, 8.7]], [[14.9, 8.7], [13.6, 9.65]], [[14.9, 8.7], [13.95, 9.3]], [[14.9, 8.7], [14.45, 8.9]], [[9.65, 20.8], [8.3, 18.75]], [[9.65, 20.8], [8.65, 19.3]], [[9.3, 20.3], [8.3, 18.75]], [[9.3, 20.3], [8.65, 19.3]], [[8.9, 19.85], [8.3, 18.75]], [[8.9, 19.85], [8.65, 19.3]], [[14.15, 19.25], [16.55, 19.9]], [[14.15, 19.25], [16.2, 19.9]], [[13.8, 19.05], [16.2, 19.9]], [[15.25, 19.7], [16.55, 19.9]], [[15.25, 19.7], [16.2, 19.9]], [[15.0, 19.7], [16.55, 19.9]], [[15.0, 19.7], [16.2, 19.9]], [[15.95, 19.9], [16.55, 19.9]], [[15.95, 19.9], [16.2, 19.9]], [[14.85, 19.55], [16.55, 19.9]], [[14.85, 19.55], [16.2, 19.9]], [[14.45, 19.5], [16.55, 19.9]], [[14.45, 19.5], [16.2, 19.9]], [[15.55, 19.85], [16.55, 19.9]], [[15.55, 19.85], [16.2, 19.9]], [[13.55, 18.85], [13.8, 19.05]], [[13.55, 18.85], [14.15, 19.25]], [[13.55, 18.85], [14.45, 19.5]], [[13.55, 18.85], [14.85, 19.55]], [[13.55, 18.85], [15.95, 19.9]], [[13.55, 18.85], [15.0, 19.7]], [[13.55, 18.85], [15.25, 19.7]], [[13.55, 18.85], [15.55, 19.85]], [[12.55, 17.85], [13.8, 19.05]], [[12.55, 17.85], [14.15, 19.25]], [[12.55, 17.85], [14.45, 19.5]], [[12.8, 18.05], [13.8, 19.05]], [[12.8, 18.05], [14.15, 19.25]], [[12.8, 18.05], [14.45, 19.5]], [[12.8, 18.05], [14.85, 19.55]], [[12.8, 18.05], [15.0, 19.7]], [[13.1, 18.4], [13.8, 19.05]], [[13.1, 18.4], [14.15, 19.25]], [[13.1, 18.4], [14.45, 19.5]], [[13.1, 18.4], [14.85, 19.55]], [[13.1, 18.4], [15.0, 19.7]], [[13.1, 18.4], [15.25, 19.7]], [[13.3, 18.6], [13.8, 19.05]], [[13.3, 18.6], [14.15, 19.25]], [[13.3, 18.6], [14.45, 19.5]], [[13.3, 18.6], [14.85, 19.55]], [[13.3, 18.6], [15.0, 19.7]], [[13.3, 18.6], [15.25, 19.7]], [[13.3, 18.6], [15.55, 19.85]], [[12.3, 17.6], [14.15, 19.25]], [[12.3, 17.6], [13.8, 19.05]], [[12.3, 17.6], [12.55, 17.85]], [[12.3, 17.6], [12.8, 18.05]], [[12.3, 17.6], [13.1, 18.4]], [[12.3, 17.6], [13.3, 18.6]], [[12.3, 17.6], [13.55, 18.85]], [[12.55, 17.85], [12.3, 17.6]], [[12.55, 17.85], [12.8, 18.05]], [[12.55, 17.85], [13.1, 18.4]], [[12.55, 17.85], [13.3, 18.6]], [[12.55, 17.85], [13.55, 18.85]], [[12.8, 18.05], [12.3, 17.6]], [[12.8, 18.05], [12.55, 17.85]], [[12.8, 18.05], [13.1, 18.4]], [[12.8, 18.05], [13.3, 18.6]], [[12.8, 18.05], [13.55, 18.85]], [[13.1, 18.4], [12.3, 17.6]], [[13.1, 18.4], [12.55, 17.85]], [[13.1, 18.4], [12.8, 18.05]], [[13.1, 18.4], [13.3, 18.6]], [[13.1, 18.4], [13.55, 18.85]], [[13.3, 18.6], [12.3, 17.6]], [[13.3, 18.6], [12.55, 17.85]], [[13.3, 18.6], [12.8, 18.05]], [[13.3, 18.6], [13.1, 18.4]], [[13.3, 18.6], [13.55, 18.85]], [[13.55, 18.85], [12.3, 17.6]], [[13.55, 18.85], [12.55, 17.85]], [[13.55, 18.85], [12.8, 18.05]], [[13.55, 18.85], [13.1, 18.4]], [[13.55, 18.85], [13.3, 18.6]], [[13.8, 19.05], [14.15, 19.25]], [[13.8, 19.05], [14.45, 19.5]], [[13.8, 19.05], [14.85, 19.55]], [[13.8, 19.05], [15.95, 19.9]], [[13.8, 19.05], [15.0, 19.7]], [[13.8, 19.05], [15.25, 19.7]], [[13.8, 19.05], [15.55, 19.85]], [[14.15, 19.25], [13.8, 19.05]], [[14.15, 19.25], [14.45, 19.5]], [[14.15, 19.25], [14.85, 19.55]], [[14.15, 19.25], [15.95, 19.9]], [[14.15, 19.25], [15.0, 19.7]], [[14.15, 19.25], [15.25, 19.7]], [[14.15, 19.25], [15.55, 19.85]], [[14.45, 19.5], [13.8, 19.05]], [[14.45, 19.5], [14.15, 19.25]], [[14.45, 19.5], [14.85, 19.55]], [[14.45, 19.5], [15.95, 19.9]], [[14.45, 19.5], [15.0, 19.7]], [[14.45, 19.5], [15.25, 19.7]], [[14.45, 19.5], [15.55, 19.85]], [[14.85, 19.55], [13.8, 19.05]], [[14.85, 19.55], [14.15, 19.25]], [[14.85, 19.55], [14.45, 19.5]], [[14.85, 19.55], [15.95, 19.9]], [[14.85, 19.55], [15.0, 19.7]], [[14.85, 19.55], [15.25, 19.7]], [[14.85, 19.55], [15.55, 19.85]], [[15.95, 19.9], [13.8, 19.05]], [[15.95, 19.9], [14.15, 19.25]], [[15.95, 19.9], [14.45, 19.5]], [[15.95, 19.9], [14.85, 19.55]], [[15.95, 19.9], [15.0, 19.7]], [[15.95, 19.9], [15.25, 19.7]], [[15.95, 19.9], [15.55, 19.85]], [[15.0, 19.7], [13.8, 19.05]], [[15.0, 19.7], [14.15, 19.25]], [[15.0, 19.7], [14.45, 19.5]], [[15.0, 19.7], [14.85, 19.55]], [[15.0, 19.7], [15.95, 19.9]], [[15.0, 19.7], [15.25, 19.7]], [[15.0, 19.7], [15.55, 19.85]], [[15.25, 19.7], [13.8, 19.05]], [[15.25, 19.7], [14.15, 19.25]], [[15.25, 19.7], [14.45, 19.5]], [[15.25, 19.7], [14.85, 19.55]], [[15.25, 19.7], [15.95, 19.9]], [[15.25, 19.7], [15.0, 19.7]], [[15.25, 19.7], [15.55, 19.85]], [[15.55, 19.85], [13.8, 19.05]], [[15.55, 19.85], [14.15, 19.25]], [[15.55, 19.85], [14.45, 19.5]], [[15.55, 19.85], [14.85, 19.55]], [[15.55, 19.85], [15.95, 19.9]], [[15.55, 19.85], [15.0, 19.7]], [[15.55, 19.85], [15.25, 19.7]], [[11.1, 22.15], [10.2, 21.25]], [[11.55, 22.45], [10.2, 21.25]], [[11.95, 22.7], [10.2, 21.25]], [[10.6, 21.65], [10.2, 21.25]], [[10.6, 21.65], [9.65, 20.8]], [[10.6, 21.65], [8.9, 19.85]], [[10.6, 21.65], [9.3, 20.3]], [[14.55, 23.6], [15.1, 23.75]], [[14.55, 23.6], [15.7, 23.75]], [[14.55, 23.6], [16.15, 23.85]], [[14.55, 23.6], [16.7, 23.8]], [[13.45, 23.4], [15.1, 23.75]], [[13.45, 23.4], [15.7, 23.75]], [[13.45, 23.4], [16.15, 23.85]], [[13.05, 23.2], [15.1, 23.75]], [[13.05, 23.2], [15.7, 23.75]], [[14.0, 23.55], [15.1, 23.75]], [[14.0, 23.55], [15.7, 23.75]], [[14.0, 23.55], [16.15, 23.85]], [[14.0, 23.55], [16.7, 23.8]], [[14.0, 23.55], [14.55, 23.6]], [[14.0, 23.55], [11.55, 22.45]], [[14.0, 23.55], [11.95, 22.7]], [[14.0, 23.55], [13.45, 23.4]], [[14.0, 23.55], [13.05, 23.2]], [[14.0, 23.55], [12.55, 23.0]], [[14.55, 23.6], [14.0, 23.55]], [[14.55, 23.6], [11.95, 22.7]], [[14.55, 23.6], [13.45, 23.4]], [[14.55, 23.6], [13.05, 23.2]], [[14.55, 23.6], [12.55, 23.0]], [[10.6, 21.65], [11.1, 22.15]], [[10.6, 21.65], [11.55, 22.45]], [[10.6, 21.65], [11.95, 22.7]], [[10.6, 21.65], [12.55, 23.0]], [[11.1, 22.15], [10.6, 21.65]], [[11.1, 22.15], [11.55, 22.45]], [[11.1, 22.15], [11.95, 22.7]], [[11.1, 22.15], [13.45, 23.4]], [[11.1, 22.15], [13.05, 23.2]], [[11.1, 22.15], [12.55, 23.0]], [[11.55, 22.45], [14.0, 23.55]], [[11.55, 22.45], [10.6, 21.65]], [[11.55, 22.45], [11.1, 22.15]], [[11.55, 22.45], [11.95, 22.7]], [[11.55, 22.45], [13.45, 23.4]], [[11.55, 22.45], [13.05, 23.2]], [[11.55, 22.45], [12.55, 23.0]], [[11.95, 22.7], [14.0, 23.55]], [[11.95, 22.7], [14.55, 23.6]], [[11.95, 22.7], [10.6, 21.65]], [[11.95, 22.7], [11.1, 22.15]], [[11.95, 22.7], [11.55, 22.45]], [[11.95, 22.7], [13.45, 23.4]], [[11.95, 22.7], [13.05, 23.2]], [[11.95, 22.7], [12.55, 23.0]], [[13.45, 23.4], [14.0, 23.55]], [[13.45, 23.4], [14.55, 23.6]], [[13.45, 23.4], [11.1, 22.15]], [[13.45, 23.4], [11.55, 22.45]], [[13.45, 23.4], [11.95, 22.7]], [[13.45, 23.4], [13.05, 23.2]], [[13.45, 23.4], [12.55, 23.0]], [[13.05, 23.2], [14.0, 23.55]], [[13.05, 23.2], [14.55, 23.6]], [[13.05, 23.2], [11.1, 22.15]], [[13.05, 23.2], [11.55, 22.45]], [[13.05, 23.2], [11.95, 22.7]], [[13.05, 23.2], [13.45, 23.4]], [[13.05, 23.2], [12.55, 23.0]], [[12.55, 23.0], [14.0, 23.55]], [[12.55, 23.0], [14.55, 23.6]], [[12.55, 23.0], [10.6, 21.65]], [[12.55, 23.0], [11.1, 22.15]], [[12.55, 23.0], [11.55, 22.45]], [[12.55, 23.0], [11.95, 22.7]], [[12.55, 23.0], [13.45, 23.4]], [[12.55, 23.0], [13.05, 23.2]], [[16.7, 23.8], [16.15, 23.85]], [[16.7, 23.8], [15.7, 23.75]], [[16.7, 23.8], [15.1, 23.75]], [[16.15, 23.85], [16.7, 23.8]], [[16.15, 23.85], [15.7, 23.75]], [[16.15, 23.85], [15.1, 23.75]], [[15.7, 23.75], [16.7, 23.8]], [[15.7, 23.75], [16.15, 23.85]], [[15.7, 23.75], [15.1, 23.75]], [[15.1, 23.75], [16.7, 23.8]], [[15.1, 23.75], [16.15, 23.85]], [[15.1, 23.75], [15.7, 23.75]], [[10.2, 21.25], [9.65, 20.8]], [[10.2, 21.25], [9.3, 20.3]], [[10.2, 21.25], [8.9, 19.85]], [[9.65, 20.8], [10.2, 21.25]], [[9.65, 20.8], [9.3, 20.3]], [[9.65, 20.8], [8.9, 19.85]], [[9.3, 20.3], [10.2, 21.25]], [[9.3, 20.3], [9.65, 20.8]], [[9.3, 20.3], [8.9, 19.85]], [[8.9, 19.85], [10.2, 21.25]], [[8.9, 19.85], [9.65, 20.8]], [[8.9, 19.85], [9.3, 20.3]], [[16.2, 19.9], [16.55, 19.9]], [[16.55, 19.9], [16.2, 19.9]], [[14.15, 4.4], [13.4, 4.75]], [[8.65, 19.3], [8.3, 18.75]], [[8.3, 18.75], [8.65, 19.3]], [[13.4, 4.75], [14.15, 4.4]], [[15.4, 8.35], [15.8, 8.05]], [[15.4, 8.35], [16.35, 7.8]], [[15.4, 8.35], [16.9, 7.6]], [[15.4, 8.35], [17.5, 7.35]], [[15.8, 8.05], [15.4, 8.35]], [[15.8, 8.05], [16.35, 7.8]], [[15.8, 8.05], [16.9, 7.6]], [[15.8, 8.05], [17.5, 7.35]], [[16.35, 7.8], [15.4, 8.35]], [[16.35, 7.8], [15.8, 8.05]], [[16.35, 7.8], [16.9, 7.6]], [[16.35, 7.8], [17.5, 7.35]], [[16.9, 7.6], [15.4, 8.35]], [[16.9, 7.6], [15.8, 8.05]], [[16.9, 7.6], [16.35, 7.8]], [[16.9, 7.6], [17.5, 7.35]], [[17.5, 7.35], [15.4, 8.35]], [[17.5, 7.35], [15.8, 8.05]], [[17.5, 7.35], [16.35, 7.8]], [[17.5, 7.35], [16.9, 7.6]], [[25.7, 8.4], [23.15, 7.4]], [[25.7, 8.4], [23.9, 7.65]], [[25.7, 8.4], [24.5, 7.75]], [[25.7, 8.4], [25.15, 8.05]], [[26.25, 8.8], [23.9, 7.65]], [[26.25, 8.8], [24.5, 7.75]], [[26.25, 8.8], [25.15, 8.05]], [[26.9, 9.1], [24.5, 7.75]], [[26.9, 9.1], [25.15, 8.05]], [[31.15, 7.3], [30.45, 6.65]], [[31.15, 7.3], [29.7, 6.0]], [[31.95, 7.95], [30.45, 6.65]], [[21.0, 22.15], [20.7, 22.55]], [[21.0, 22.15], [20.4, 22.7]], [[21.0, 22.15], [20.0, 22.95]], [[21.0, 22.15], [19.6, 23.15]], [[21.0, 22.15], [19.1, 23.35]], [[21.0, 22.15], [18.65, 23.5]], [[21.45, 21.95], [20.7, 22.55]], [[21.45, 21.95], [20.4, 22.7]], [[21.45, 21.95], [20.0, 22.95]], [[21.45, 21.95], [19.6, 23.15]], [[21.45, 21.95], [19.1, 23.35]], [[21.75, 21.55], [20.7, 22.55]], [[21.75, 21.55], [20.4, 22.7]], [[21.75, 21.55], [20.0, 22.95]], [[21.75, 21.55], [19.6, 23.15]], [[22.0, 21.25], [20.7, 22.55]], [[22.0, 21.25], [20.4, 22.7]], [[22.0, 21.25], [20.0, 22.95]], [[22.25, 21.0], [20.7, 22.55]], [[22.25, 21.0], [20.4, 22.7]], [[22.5, 20.7], [20.7, 22.55]], [[27.15, 27.9], [25.6, 29.05]], [[27.15, 27.9], [26.35, 28.5]], [[27.75, 27.35], [25.6, 29.05]], [[27.75, 27.35], [26.35, 28.5]], [[28.3, 26.6], [26.35, 28.5]], [[22.9, 16.9], [21.5, 14.9]], [[23.05, 17.15], [21.5, 14.9]], [[23.0, 19.35], [22.85, 16.6]], [[23.1, 19.0], [22.85, 16.6]], [[23.15, 18.65], [22.85, 16.6]], [[23.15, 18.65], [22.7, 16.4]], [[23.15, 18.65], [22.6, 16.2]], [[23.15, 18.65], [22.55, 16.05]], [[23.2, 18.25], [22.85, 16.6]], [[23.2, 18.25], [22.7, 16.4]], [[23.2, 18.25], [22.6, 16.2]], [[23.2, 18.25], [22.55, 16.05]], [[23.2, 18.25], [22.4, 15.95]], [[23.2, 18.25], [22.35, 15.8]], [[23.2, 18.25], [22.2, 15.65]], [[23.2, 18.05], [22.85, 16.6]], [[23.2, 18.05], [22.7, 16.4]], [[23.2, 18.05], [22.6, 16.2]], [[23.2, 18.05], [22.55, 16.05]], [[23.2, 18.05], [22.4, 15.95]], [[23.2, 18.05], [22.35, 15.8]], [[23.2, 18.05], [22.2, 15.65]], [[23.2, 18.05], [22.15, 15.55]], [[23.05, 17.15], [22.85, 16.6]], [[23.05, 17.15], [22.7, 16.4]], [[23.05, 17.15], [22.6, 16.2]], [[23.05, 17.15], [22.55, 16.05]], [[23.05, 17.15], [22.4, 15.95]], [[23.05, 17.15], [22.35, 15.8]], [[23.1, 17.45], [22.85, 16.6]], [[23.1, 17.45], [22.7, 16.4]], [[23.1, 17.45], [22.6, 16.2]], [[23.1, 17.45], [22.55, 16.05]], [[23.1, 17.45], [22.4, 15.95]], [[23.1, 17.45], [22.35, 15.8]], [[23.2, 17.8], [22.85, 16.6]], [[23.2, 17.8], [22.7, 16.4]], [[23.2, 17.8], [22.6, 16.2]], [[23.2, 17.8], [22.55, 16.05]], [[23.2, 17.8], [22.4, 15.95]], [[23.2, 17.8], [22.35, 15.8]], [[22.9, 16.9], [22.85, 16.6]], [[22.9, 16.9], [22.7, 16.4]], [[22.9, 16.9], [22.6, 16.2]], [[22.9, 16.9], [22.55, 16.05]], [[22.9, 16.9], [22.4, 15.95]], [[22.9, 16.9], [22.35, 15.8]], [[22.9, 16.9], [22.2, 15.65]], [[22.9, 16.9], [22.15, 15.55]], [[22.9, 16.9], [22.0, 15.4]], [[22.9, 16.9], [21.9, 15.3]], [[22.9, 16.9], [21.65, 15.05]], [[22.9, 16.9], [21.85, 15.25]], [[22.9, 16.9], [21.75, 15.15]], [[22.9, 16.9], [21.55, 15.0]], [[23.2, 17.8], [22.2, 15.65]], [[23.2, 17.8], [22.15, 15.55]], [[23.2, 17.8], [22.0, 15.4]], [[23.1, 17.45], [22.2, 15.65]], [[23.1, 17.45], [22.15, 15.55]], [[23.1, 17.45], [22.0, 15.4]], [[23.1, 17.45], [21.9, 15.3]], [[23.1, 17.45], [21.85, 15.25]], [[23.1, 17.45], [21.75, 15.15]], [[23.05, 17.15], [22.2, 15.65]], [[23.05, 17.15], [22.15, 15.55]], [[23.05, 17.15], [22.0, 15.4]], [[23.05, 17.15], [21.9, 15.3]], [[23.05, 17.15], [21.65, 15.05]], [[23.05, 17.15], [21.85, 15.25]], [[23.05, 17.15], [21.75, 15.15]], [[23.05, 17.15], [21.55, 15.0]], [[21.45, 21.95], [21.0, 22.15]], [[21.75, 21.55], [21.0, 22.15]], [[22.0, 21.25], [21.0, 22.15]], [[22.25, 21.0], [21.0, 22.15]], [[22.65, 20.35], [21.0, 22.15]], [[22.5, 20.7], [21.0, 22.15]], [[23.15, 18.65], [22.25, 21.0]], [[23.1, 19.0], [22.25, 21.0]], [[23.1, 19.0], [22.0, 21.25]], [[23.0, 19.35], [22.25, 21.0]], [[23.0, 19.35], [22.0, 21.25]], [[23.0, 19.35], [21.75, 21.55]], [[22.9, 19.65], [22.25, 21.0]], [[22.9, 19.65], [22.0, 21.25]], [[22.9, 19.65], [21.45, 21.95]], [[22.9, 19.65], [21.75, 21.55]], [[23.2, 18.05], [22.65, 20.35]], [[23.2, 18.05], [22.75, 20.05]], [[23.2, 18.05], [22.5, 20.7]], [[23.2, 17.8], [22.65, 20.35]], [[23.2, 17.8], [22.75, 20.05]], [[23.1, 17.45], [22.75, 20.05]], [[23.2, 18.25], [22.65, 20.35]], [[23.2, 18.25], [22.75, 20.05]], [[23.2, 18.25], [22.5, 20.7]], [[22.9, 19.65], [22.65, 20.35]], [[22.9, 19.65], [22.75, 20.05]], [[22.9, 19.65], [22.5, 20.7]], [[23.0, 19.35], [22.65, 20.35]], [[23.0, 19.35], [22.75, 20.05]], [[23.0, 19.35], [22.5, 20.7]], [[23.1, 19.0], [22.65, 20.35]], [[23.1, 19.0], [22.75, 20.05]], [[23.1, 19.0], [22.5, 20.7]], [[23.15, 18.65], [22.65, 20.35]], [[23.15, 18.65], [22.75, 20.05]], [[23.15, 18.65], [22.5, 20.7]], [[23.2, 18.25], [23.15, 18.65]], [[23.2, 18.25], [23.1, 19.0]], [[23.2, 18.25], [23.0, 19.35]], [[22.9, 16.9], [23.15, 18.65]], [[22.9, 16.9], [23.1, 19.0]], [[22.9, 16.9], [23.0, 19.35]], [[23.05, 17.15], [23.15, 18.65]], [[23.05, 17.15], [23.1, 19.0]], [[23.05, 17.15], [23.0, 19.35]], [[23.1, 17.45], [23.15, 18.65]], [[23.1, 17.45], [23.1, 19.0]], [[23.1, 17.45], [23.0, 19.35]], [[23.2, 17.8], [23.15, 18.65]], [[23.2, 17.8], [23.1, 19.0]], [[23.2, 17.8], [23.0, 19.35]], [[23.2, 18.05], [23.15, 18.65]], [[23.2, 18.05], [23.1, 19.0]], [[23.2, 18.05], [23.0, 19.35]], [[23.2, 18.05], [22.9, 19.65]], [[23.2, 17.8], [22.9, 19.65]], [[23.1, 17.45], [22.9, 19.65]], [[23.05, 17.15], [22.9, 19.65]], [[22.9, 16.9], [22.9, 19.65]], [[23.2, 18.25], [22.9, 19.65]], [[23.2, 18.05], [23.2, 17.8]], [[23.2, 18.05], [23.1, 17.45]], [[23.2, 18.05], [23.05, 17.15]], [[23.2, 18.05], [22.9, 16.9]], [[23.2, 18.05], [23.2, 18.25]], [[23.2, 17.8], [23.2, 18.05]], [[23.2, 17.8], [23.1, 17.45]], [[23.2, 17.8], [23.05, 17.15]], [[23.2, 17.8], [22.9, 16.9]], [[23.2, 17.8], [23.2, 18.25]], [[23.1, 17.45], [23.2, 18.05]], [[23.1, 17.45], [23.2, 17.8]], [[23.1, 17.45], [23.05, 17.15]], [[23.1, 17.45], [22.9, 16.9]], [[23.1, 17.45], [23.2, 18.25]], [[23.05, 17.15], [23.2, 18.05]], [[23.05, 17.15], [23.2, 17.8]], [[23.05, 17.15], [23.1, 17.45]], [[23.05, 17.15], [22.9, 16.9]], [[23.05, 17.15], [23.2, 18.25]], [[22.9, 16.9], [23.2, 18.05]], [[22.9, 16.9], [23.2, 17.8]], [[22.9, 16.9], [23.1, 17.45]], [[22.9, 16.9], [23.05, 17.15]], [[22.9, 16.9], [23.2, 18.25]], [[23.2, 18.25], [23.2, 18.05]], [[23.2, 18.25], [23.2, 17.8]], [[23.2, 18.25], [23.1, 17.45]], [[23.2, 18.25], [23.05, 17.15]], [[23.2, 18.25], [22.9, 16.9]], [[22.9, 19.65], [23.0, 19.35]], [[22.9, 19.65], [23.1, 19.0]], [[22.9, 19.65], [23.15, 18.65]], [[23.0, 19.35], [22.9, 19.65]], [[23.0, 19.35], [23.1, 19.0]], [[23.0, 19.35], [23.15, 18.65]], [[23.1, 19.0], [22.9, 19.65]], [[23.1, 19.0], [23.0, 19.35]], [[23.1, 19.0], [23.15, 18.65]], [[23.15, 18.65], [22.9, 19.65]], [[23.15, 18.65], [23.0, 19.35]], [[23.15, 18.65], [23.1, 19.0]], [[22.5, 20.7], [22.25, 21.0]], [[22.5, 20.7], [22.0, 21.25]], [[22.5, 20.7], [21.75, 21.55]], [[22.5, 20.7], [21.45, 21.95]], [[22.5, 20.7], [22.65, 20.35]], [[22.5, 20.7], [22.75, 20.05]], [[22.25, 21.0], [22.5, 20.7]], [[22.25, 21.0], [22.0, 21.25]], [[22.25, 21.0], [21.75, 21.55]], [[22.25, 21.0], [21.45, 21.95]], [[22.25, 21.0], [22.65, 20.35]], [[22.25, 21.0], [22.75, 20.05]], [[22.0, 21.25], [22.5, 20.7]], [[22.0, 21.25], [22.25, 21.0]], [[22.0, 21.25], [21.75, 21.55]], [[22.0, 21.25], [21.45, 21.95]], [[22.0, 21.25], [22.65, 20.35]], [[22.0, 21.25], [22.75, 20.05]], [[21.75, 21.55], [22.5, 20.7]], [[21.75, 21.55], [22.25, 21.0]], [[21.75, 21.55], [22.0, 21.25]], [[21.75, 21.55], [21.45, 21.95]], [[21.75, 21.55], [22.65, 20.35]], [[21.75, 21.55], [22.75, 20.05]], [[21.45, 21.95], [22.5, 20.7]], [[21.45, 21.95], [22.25, 21.0]], [[21.45, 21.95], [22.0, 21.25]], [[21.45, 21.95], [21.75, 21.55]], [[21.45, 21.95], [22.65, 20.35]], [[21.45, 21.95], [22.75, 20.05]], [[22.65, 20.35], [22.5, 20.7]], [[22.65, 20.35], [22.25, 21.0]], [[22.65, 20.35], [22.0, 21.25]], [[22.65, 20.35], [21.75, 21.55]], [[22.65, 20.35], [21.45, 21.95]], [[22.65, 20.35], [22.75, 20.05]], [[22.75, 20.05], [22.5, 20.7]], [[22.75, 20.05], [22.25, 21.0]], [[22.75, 20.05], [22.0, 21.25]], [[22.75, 20.05], [21.75, 21.55]], [[22.75, 20.05], [21.45, 21.95]], [[22.75, 20.05], [22.65, 20.35]], [[21.9, 15.3], [22.7, 16.4]], [[21.9, 15.3], [22.6, 16.2]], [[21.9, 15.3], [22.55, 16.05]], [[21.9, 15.3], [22.4, 15.95]], [[21.9, 15.3], [22.35, 15.8]], [[21.9, 15.3], [22.85, 16.6]], [[22.0, 15.4], [22.7, 16.4]], [[22.0, 15.4], [22.6, 16.2]], [[22.0, 15.4], [22.55, 16.05]], [[22.0, 15.4], [22.4, 15.95]], [[22.0, 15.4], [22.35, 15.8]], [[22.0, 15.4], [22.85, 16.6]], [[21.85, 15.25], [22.7, 16.4]], [[21.85, 15.25], [22.6, 16.2]], [[21.85, 15.25], [22.55, 16.05]], [[21.85, 15.25], [22.4, 15.95]], [[21.85, 15.25], [22.35, 15.8]], [[21.85, 15.25], [22.85, 16.6]], [[21.75, 15.15], [22.7, 16.4]], [[21.75, 15.15], [22.6, 16.2]], [[21.75, 15.15], [22.55, 16.05]], [[21.75, 15.15], [22.4, 15.95]], [[21.75, 15.15], [22.35, 15.8]], [[21.75, 15.15], [22.85, 16.6]], [[21.5, 14.9], [22.7, 16.4]], [[21.5, 14.9], [22.6, 16.2]], [[21.5, 14.9], [22.55, 16.05]], [[21.5, 14.9], [22.4, 15.95]], [[21.5, 14.9], [22.35, 15.8]], [[21.5, 14.9], [22.85, 16.6]], [[21.55, 15.0], [22.7, 16.4]], [[21.55, 15.0], [22.6, 16.2]], [[21.55, 15.0], [22.55, 16.05]], [[21.55, 15.0], [22.4, 15.95]], [[21.55, 15.0], [22.35, 15.8]], [[21.55, 15.0], [22.85, 16.6]], [[21.65, 15.05], [22.7, 16.4]], [[21.65, 15.05], [22.6, 16.2]], [[21.65, 15.05], [22.55, 16.05]], [[21.65, 15.05], [22.4, 15.95]], [[21.65, 15.05], [22.35, 15.8]], [[21.65, 15.05], [22.85, 16.6]], [[21.65, 15.05], [22.15, 15.55]], [[21.65, 15.05], [22.2, 15.65]], [[21.55, 15.0], [22.15, 15.55]], [[21.55, 15.0], [22.2, 15.65]], [[21.5, 14.9], [22.15, 15.55]], [[21.5, 14.9], [22.2, 15.65]], [[21.75, 15.15], [22.15, 15.55]], [[21.75, 15.15], [22.2, 15.65]], [[21.85, 15.25], [22.15, 15.55]], [[21.85, 15.25], [22.2, 15.65]], [[22.0, 15.4], [22.15, 15.55]], [[22.0, 15.4], [22.2, 15.65]], [[21.9, 15.3], [22.15, 15.55]], [[21.9, 15.3], [22.2, 15.65]], [[21.65, 15.05], [21.55, 15.0]], [[21.65, 15.05], [21.5, 14.9]], [[21.65, 15.05], [21.75, 15.15]], [[21.65, 15.05], [21.85, 15.25]], [[21.65, 15.05], [22.0, 15.4]], [[21.65, 15.05], [21.9, 15.3]], [[21.55, 15.0], [21.65, 15.05]], [[21.55, 15.0], [21.5, 14.9]], [[21.55, 15.0], [21.75, 15.15]], [[21.55, 15.0], [21.85, 15.25]], [[21.55, 15.0], [22.0, 15.4]], [[21.55, 15.0], [21.9, 15.3]], [[21.5, 14.9], [21.65, 15.05]], [[21.5, 14.9], [21.55, 15.0]], [[21.5, 14.9], [21.75, 15.15]], [[21.5, 14.9], [21.85, 15.25]], [[21.5, 14.9], [22.0, 15.4]], [[21.5, 14.9], [21.9, 15.3]], [[21.75, 15.15], [21.65, 15.05]], [[21.75, 15.15], [21.55, 15.0]], [[21.75, 15.15], [21.5, 14.9]], [[21.75, 15.15], [21.85, 15.25]], [[21.75, 15.15], [22.0, 15.4]], [[21.75, 15.15], [21.9, 15.3]], [[21.85, 15.25], [21.65, 15.05]], [[21.85, 15.25], [21.55, 15.0]], [[21.85, 15.25], [21.5, 14.9]], [[21.85, 15.25], [21.75, 15.15]], [[21.85, 15.25], [22.0, 15.4]], [[21.85, 15.25], [21.9, 15.3]], [[22.0, 15.4], [21.65, 15.05]], [[22.0, 15.4], [21.55, 15.0]], [[22.0, 15.4], [21.5, 14.9]], [[22.0, 15.4], [21.75, 15.15]], [[22.0, 15.4], [21.85, 15.25]], [[22.0, 15.4], [21.9, 15.3]], [[21.9, 15.3], [21.65, 15.05]], [[21.9, 15.3], [21.55, 15.0]], [[21.9, 15.3], [21.5, 14.9]], [[21.9, 15.3], [21.75, 15.15]], [[21.9, 15.3], [21.85, 15.25]], [[21.9, 15.3], [22.0, 15.4]], [[22.85, 16.6], [22.15, 15.55]], [[22.85, 16.6], [22.2, 15.65]], [[22.85, 16.6], [22.35, 15.8]], [[22.85, 16.6], [22.4, 15.95]], [[22.85, 16.6], [22.55, 16.05]], [[22.85, 16.6], [22.6, 16.2]], [[22.85, 16.6], [22.7, 16.4]], [[22.15, 15.55], [22.85, 16.6]], [[22.15, 15.55], [22.2, 15.65]], [[22.15, 15.55], [22.35, 15.8]], [[22.15, 15.55], [22.4, 15.95]], [[22.15, 15.55], [22.55, 16.05]], [[22.15, 15.55], [22.6, 16.2]], [[22.15, 15.55], [22.7, 16.4]], [[22.2, 15.65], [22.85, 16.6]], [[22.2, 15.65], [22.15, 15.55]], [[22.2, 15.65], [22.35, 15.8]], [[22.2, 15.65], [22.4, 15.95]], [[22.2, 15.65], [22.55, 16.05]], [[22.2, 15.65], [22.6, 16.2]], [[22.2, 15.65], [22.7, 16.4]], [[22.35, 15.8], [22.85, 16.6]], [[22.35, 15.8], [22.15, 15.55]], [[22.35, 15.8], [22.2, 15.65]], [[22.35, 15.8], [22.4, 15.95]], [[22.35, 15.8], [22.55, 16.05]], [[22.35, 15.8], [22.6, 16.2]], [[22.35, 15.8], [22.7, 16.4]], [[22.4, 15.95], [22.85, 16.6]], [[22.4, 15.95], [22.15, 15.55]], [[22.4, 15.95], [22.2, 15.65]], [[22.4, 15.95], [22.35, 15.8]], [[22.4, 15.95], [22.55, 16.05]], [[22.4, 15.95], [22.6, 16.2]], [[22.4, 15.95], [22.7, 16.4]], [[22.55, 16.05], [22.85, 16.6]], [[22.55, 16.05], [22.15, 15.55]], [[22.55, 16.05], [22.2, 15.65]], [[22.55, 16.05], [22.35, 15.8]], [[22.55, 16.05], [22.4, 15.95]], [[22.55, 16.05], [22.6, 16.2]], [[22.55, 16.05], [22.7, 16.4]], [[22.6, 16.2], [22.85, 16.6]], [[22.6, 16.2], [22.15, 15.55]], [[22.6, 16.2], [22.2, 15.65]], [[22.6, 16.2], [22.35, 15.8]], [[22.6, 16.2], [22.4, 15.95]], [[22.6, 16.2], [22.55, 16.05]], [[22.6, 16.2], [22.7, 16.4]], [[22.7, 16.4], [22.85, 16.6]], [[22.7, 16.4], [22.15, 15.55]], [[22.7, 16.4], [22.2, 15.65]], [[22.7, 16.4], [22.35, 15.8]], [[22.7, 16.4], [22.4, 15.95]], [[22.7, 16.4], [22.55, 16.05]], [[22.7, 16.4], [22.6, 16.2]], [[31.35, 20.55], [31.65, 18.15]], [[31.5, 19.7], [31.65, 18.15]], [[31.5, 19.7], [31.6, 17.35]], [[31.55, 18.9], [31.65, 18.15]], [[31.55, 18.9], [31.6, 17.35]], [[31.55, 18.9], [31.45, 16.55]], [[29.5, 25.15], [30.6, 22.9]], [[29.95, 24.45], [30.6, 22.9]], [[29.95, 24.45], [30.9, 22.1]], [[30.4, 23.7], [30.6, 22.9]], [[30.4, 23.7], [30.9, 22.1]], [[30.4, 23.7], [31.25, 21.3]], [[29.5, 25.15], [29.95, 24.45]], [[29.5, 25.15], [30.4, 23.7]], [[29.5, 25.15], [28.95, 25.85]], [[29.5, 25.15], [28.3, 26.6]], [[29.95, 24.45], [29.5, 25.15]], [[29.95, 24.45], [30.4, 23.7]], [[29.95, 24.45], [28.95, 25.85]], [[29.95, 24.45], [28.3, 26.6]], [[30.4, 23.7], [29.5, 25.15]], [[30.4, 23.7], [29.95, 24.45]], [[30.4, 23.7], [28.95, 25.85]], [[28.95, 25.85], [29.5, 25.15]], [[28.95, 25.85], [29.95, 24.45]], [[28.95, 25.85], [30.4, 23.7]], [[28.95, 25.85], [28.3, 26.6]], [[28.95, 25.85], [27.75, 27.35]], [[28.95, 25.85], [27.15, 27.9]], [[28.3, 26.6], [29.5, 25.15]], [[28.3, 26.6], [29.95, 24.45]], [[28.3, 26.6], [28.95, 25.85]], [[28.3, 26.6], [27.75, 27.35]], [[28.3, 26.6], [27.15, 27.9]], [[27.75, 27.35], [28.95, 25.85]], [[27.75, 27.35], [28.3, 26.6]], [[27.75, 27.35], [27.15, 27.9]], [[27.15, 27.9], [28.95, 25.85]], [[27.15, 27.9], [28.3, 26.6]], [[27.15, 27.9], [27.75, 27.35]], [[31.5, 19.7], [31.55, 18.9]], [[31.5, 19.7], [31.35, 20.55]], [[31.5, 19.7], [31.25, 21.3]], [[31.5, 19.7], [30.9, 22.1]], [[31.55, 18.9], [31.5, 19.7]], [[31.55, 18.9], [31.35, 20.55]], [[31.55, 18.9], [31.25, 21.3]], [[31.35, 20.55], [31.5, 19.7]], [[31.35, 20.55], [31.55, 18.9]], [[31.35, 20.55], [31.25, 21.3]], [[31.35, 20.55], [30.9, 22.1]], [[31.35, 20.55], [30.6, 22.9]], [[31.25, 21.3], [31.5, 19.7]], [[31.25, 21.3], [31.55, 18.9]], [[31.25, 21.3], [31.35, 20.55]], [[31.25, 21.3], [30.9, 22.1]], [[31.25, 21.3], [30.6, 22.9]], [[30.9, 22.1], [31.5, 19.7]], [[30.9, 22.1], [31.35, 20.55]], [[30.9, 22.1], [31.25, 21.3]], [[30.9, 22.1], [30.6, 22.9]], [[30.6, 22.9], [31.35, 20.55]], [[30.6, 22.9], [31.25, 21.3]], [[30.6, 22.9], [30.9, 22.1]], [[27.55, 9.65], [25.7, 8.4]], [[27.55, 9.65], [26.9, 9.1]], [[27.55, 9.65], [26.25, 8.8]], [[28.5, 10.6], [26.9, 9.1]], [[28.0, 10.1], [26.9, 9.1]], [[28.0, 10.1], [26.25, 8.8]], [[31.6, 17.35], [31.65, 18.15]], [[31.45, 16.55], [31.65, 18.15]], [[31.3, 15.8], [31.65, 18.15]], [[30.6, 13.65], [30.9, 14.35]], [[30.6, 13.65], [31.15, 15.05]], [[30.6, 13.65], [31.3, 15.8]], [[30.3, 13.0], [30.9, 14.35]], [[30.3, 13.0], [31.15, 15.05]], [[29.9, 12.3], [30.9, 14.35]], [[27.55, 9.65], [28.0, 10.1]], [[27.55, 9.65], [29.0, 11.15]], [[27.55, 9.65], [28.5, 10.6]], [[28.0, 10.1], [27.55, 9.65]], [[28.0, 10.1], [29.5, 11.75]], [[28.0, 10.1], [29.0, 11.15]], [[28.0, 10.1], [28.5, 10.6]], [[30.6, 13.65], [30.3, 13.0]], [[30.6, 13.65], [29.9, 12.3]], [[30.6, 13.65], [29.5, 11.75]], [[30.3, 13.0], [30.6, 13.65]], [[30.3, 13.0], [29.9, 12.3]], [[30.3, 13.0], [29.5, 11.75]], [[30.3, 13.0], [29.0, 11.15]], [[29.9, 12.3], [30.6, 13.65]], [[29.9, 12.3], [30.3, 13.0]], [[29.9, 12.3], [29.5, 11.75]], [[29.9, 12.3], [29.0, 11.15]], [[29.9, 12.3], [28.5, 10.6]], [[29.5, 11.75], [28.0, 10.1]], [[29.5, 11.75], [30.6, 13.65]], [[29.5, 11.75], [30.3, 13.0]], [[29.5, 11.75], [29.9, 12.3]], [[29.5, 11.75], [29.0, 11.15]], [[29.5, 11.75], [28.5, 10.6]], [[29.0, 11.15], [27.55, 9.65]], [[29.0, 11.15], [28.0, 10.1]], [[29.0, 11.15], [30.3, 13.0]], [[29.0, 11.15], [29.9, 12.3]], [[29.0, 11.15], [29.5, 11.75]], [[29.0, 11.15], [28.5, 10.6]], [[28.5, 10.6], [27.55, 9.65]], [[28.5, 10.6], [28.0, 10.1]], [[28.5, 10.6], [29.9, 12.3]], [[28.5, 10.6], [29.5, 11.75]], [[28.5, 10.6], [29.0, 11.15]], [[30.9, 14.35], [31.15, 15.05]], [[30.9, 14.35], [31.45, 16.55]], [[30.9, 14.35], [31.3, 15.8]], [[31.15, 15.05], [30.9, 14.35]], [[31.15, 15.05], [31.6, 17.35]], [[31.15, 15.05], [31.45, 16.55]], [[31.15, 15.05], [31.3, 15.8]], [[31.6, 17.35], [31.15, 15.05]], [[31.6, 17.35], [31.45, 16.55]], [[31.6, 17.35], [31.3, 15.8]], [[31.45, 16.55], [30.9, 14.35]], [[31.45, 16.55], [31.15, 15.05]], [[31.45, 16.55], [31.6, 17.35]], [[31.45, 16.55], [31.3, 15.8]], [[31.3, 15.8], [30.9, 14.35]], [[31.3, 15.8], [31.15, 15.05]], [[31.3, 15.8], [31.6, 17.35]], [[31.3, 15.8], [31.45, 16.55]], [[25.7, 8.4], [26.25, 8.8]], [[25.7, 8.4], [26.9, 9.1]], [[26.25, 8.8], [25.7, 8.4]], [[26.25, 8.8], [26.9, 9.1]], [[26.9, 9.1], [25.7, 8.4]], [[26.9, 9.1], [26.25, 8.8]], [[31.15, 7.3], [31.95, 7.95]], [[31.95, 7.95], [31.15, 7.3]], [[20.7, 22.55], [20.4, 22.7]], [[20.7, 22.55], [18.2, 23.6]], [[20.7, 22.55], [18.65, 23.5]], [[20.7, 22.55], [19.1, 23.35]], [[20.7, 22.55], [19.6, 23.15]], [[20.7, 22.55], [20.0, 22.95]], [[20.4, 22.7], [20.7, 22.55]], [[20.4, 22.7], [18.2, 23.6]], [[20.4, 22.7], [18.65, 23.5]], [[20.4, 22.7], [19.1, 23.35]], [[20.4, 22.7], [19.6, 23.15]], [[20.4, 22.7], [20.0, 22.95]], [[17.15, 23.75], [17.75, 23.75]], [[17.15, 23.75], [18.2, 23.6]], [[17.15, 23.75], [18.65, 23.5]], [[17.15, 23.75], [19.1, 23.35]], [[17.15, 23.75], [19.6, 23.15]], [[17.75, 23.75], [17.15, 23.75]], [[17.75, 23.75], [18.2, 23.6]], [[17.75, 23.75], [18.65, 23.5]], [[17.75, 23.75], [19.1, 23.35]], [[17.75, 23.75], [19.6, 23.15]], [[17.75, 23.75], [20.0, 22.95]], [[18.2, 23.6], [20.7, 22.55]], [[18.2, 23.6], [20.4, 22.7]], [[18.2, 23.6], [17.15, 23.75]], [[18.2, 23.6], [17.75, 23.75]], [[18.2, 23.6], [18.65, 23.5]], [[18.2, 23.6], [19.1, 23.35]], [[18.2, 23.6], [19.6, 23.15]], [[18.2, 23.6], [20.0, 22.95]], [[18.65, 23.5], [20.7, 22.55]], [[18.65, 23.5], [20.4, 22.7]], [[18.65, 23.5], [17.15, 23.75]], [[18.65, 23.5], [17.75, 23.75]], [[18.65, 23.5], [18.2, 23.6]], [[18.65, 23.5], [19.1, 23.35]], [[18.65, 23.5], [19.6, 23.15]], [[18.65, 23.5], [20.0, 22.95]], [[19.1, 23.35], [20.7, 22.55]], [[19.1, 23.35], [20.4, 22.7]], [[19.1, 23.35], [17.15, 23.75]], [[19.1, 23.35], [17.75, 23.75]], [[19.1, 23.35], [18.2, 23.6]], [[19.1, 23.35], [18.65, 23.5]], [[19.1, 23.35], [19.6, 23.15]], [[19.1, 23.35], [20.0, 22.95]], [[19.6, 23.15], [20.7, 22.55]], [[19.6, 23.15], [20.4, 22.7]], [[19.6, 23.15], [17.15, 23.75]], [[19.6, 23.15], [17.75, 23.75]], [[19.6, 23.15], [18.2, 23.6]], [[19.6, 23.15], [18.65, 23.5]], [[19.6, 23.15], [19.1, 23.35]], [[19.6, 23.15], [20.0, 22.95]], [[20.0, 22.95], [20.7, 22.55]], [[20.0, 22.95], [20.4, 22.7]], [[20.0, 22.95], [17.75, 23.75]], [[20.0, 22.95], [18.2, 23.6]], [[20.0, 22.95], [18.65, 23.5]], [[20.0, 22.95], [19.1, 23.35]], [[20.0, 22.95], [19.6, 23.15]], [[20.35, 31.45], [19.35, 31.65]], [[20.35, 31.45], [21.35, 31.1]], [[20.35, 31.45], [22.25, 30.9]], [[19.35, 31.65], [20.35, 31.45]], [[19.35, 31.65], [21.35, 31.1]], [[21.35, 31.1], [20.35, 31.45]], [[21.35, 31.1], [19.35, 31.65]], [[21.35, 31.1], [23.2, 30.45]], [[21.35, 31.1], [22.25, 30.9]], [[26.35, 28.5], [25.6, 29.05]], [[26.35, 28.5], [24.9, 29.65]], [[25.6, 29.05], [26.35, 28.5]], [[25.6, 29.05], [24.9, 29.65]], [[25.6, 29.05], [23.95, 30.05]], [[25.6, 29.05], [23.2, 30.45]], [[24.9, 29.65], [26.35, 28.5]], [[24.9, 29.65], [25.6, 29.05]], [[24.9, 29.65], [23.95, 30.05]], [[24.9, 29.65], [23.2, 30.45]], [[23.95, 30.05], [25.6, 29.05]], [[23.95, 30.05], [24.9, 29.65]], [[23.95, 30.05], [23.2, 30.45]], [[23.95, 30.05], [22.25, 30.9]], [[23.2, 30.45], [21.35, 31.1]], [[23.2, 30.45], [25.6, 29.05]], [[23.2, 30.45], [24.9, 29.65]], [[23.2, 30.45], [23.95, 30.05]], [[23.2, 30.45], [22.25, 30.9]], [[22.25, 30.9], [20.35, 31.45]], [[22.25, 30.9], [21.35, 31.1]], [[22.25, 30.9], [23.95, 30.05]], [[22.25, 30.9], [23.2, 30.45]], [[24.5, 7.75], [25.15, 8.05]], [[23.9, 7.65], [25.15, 8.05]], [[23.15, 7.4], [25.15, 8.05]], [[22.5, 7.3], [25.15, 8.05]], [[22.75, 3.15], [24.6, 3.6]], [[22.75, 3.15], [23.6, 3.3]], [[22.75, 3.15], [25.4, 3.85]], [[21.85, 3.05], [23.6, 3.3]], [[20.9, 3.0], [23.6, 3.3]], [[20.5, 7.0], [18.75, 7.1]], [[20.5, 7.0], [19.25, 7.05]], [[20.5, 7.0], [19.9, 6.95]], [[21.25, 7.05], [18.75, 7.1]], [[21.25, 7.05], [19.25, 7.05]], [[21.25, 7.05], [19.9, 6.95]], [[22.5, 7.3], [19.9, 6.95]], [[21.9, 7.1], [19.25, 7.05]], [[21.9, 7.1], [19.9, 6.95]], [[20.5, 7.0], [18.05, 7.25]], [[21.25, 7.05], [23.9, 7.65]], [[21.25, 7.05], [23.15, 7.4]], [[21.25, 7.05], [22.5, 7.3]], [[21.25, 7.05], [21.9, 7.1]], [[21.25, 7.05], [20.5, 7.0]], [[24.5, 7.75], [23.9, 7.65]], [[24.5, 7.75], [23.15, 7.4]], [[24.5, 7.75], [22.5, 7.3]], [[24.5, 7.75], [21.9, 7.1]], [[23.9, 7.65], [21.25, 7.05]], [[23.9, 7.65], [24.5, 7.75]], [[23.9, 7.65], [23.15, 7.4]], [[23.9, 7.65], [22.5, 7.3]], [[23.9, 7.65], [21.9, 7.1]], [[23.15, 7.4], [21.25, 7.05]], [[23.15, 7.4], [24.5, 7.75]], [[23.15, 7.4], [23.9, 7.65]], [[23.15, 7.4], [22.5, 7.3]], [[23.15, 7.4], [21.9, 7.1]], [[23.15, 7.4], [20.5, 7.0]], [[22.5, 7.3], [21.25, 7.05]], [[22.5, 7.3], [24.5, 7.75]], [[22.5, 7.3], [23.9, 7.65]], [[22.5, 7.3], [23.15, 7.4]], [[22.5, 7.3], [21.9, 7.1]], [[22.5, 7.3], [20.5, 7.0]], [[21.9, 7.1], [21.25, 7.05]], [[21.9, 7.1], [24.5, 7.75]], [[21.9, 7.1], [23.9, 7.65]], [[21.9, 7.1], [23.15, 7.4]], [[21.9, 7.1], [22.5, 7.3]], [[21.9, 7.1], [20.5, 7.0]], [[20.5, 7.0], [21.25, 7.05]], [[20.5, 7.0], [23.15, 7.4]], [[20.5, 7.0], [22.5, 7.3]], [[20.5, 7.0], [21.9, 7.1]], [[20.0, 2.9], [20.9, 3.0]], [[20.0, 2.9], [22.75, 3.15]], [[20.0, 2.9], [21.85, 3.05]], [[19.1, 3.0], [20.9, 3.0]], [[19.1, 3.0], [21.85, 3.05]], [[18.2, 3.2], [20.9, 3.0]], [[20.0, 2.9], [19.1, 3.0]], [[20.0, 2.9], [18.2, 3.2]], [[20.0, 2.9], [17.3, 3.25]], [[19.1, 3.0], [20.0, 2.9]], [[19.1, 3.0], [18.2, 3.2]], [[19.1, 3.0], [16.55, 3.5]], [[19.1, 3.0], [17.3, 3.25]], [[18.2, 3.2], [20.0, 2.9]], [[18.2, 3.2], [19.1, 3.0]], [[18.2, 3.2], [15.7, 3.7]], [[18.2, 3.2], [16.55, 3.5]], [[18.2, 3.2], [17.3, 3.25]], [[14.85, 4.1], [15.7, 3.7]], [[14.85, 4.1], [16.55, 3.5]], [[14.85, 4.1], [17.3, 3.25]], [[15.7, 3.7], [18.2, 3.2]], [[15.7, 3.7], [14.85, 4.1]], [[15.7, 3.7], [16.55, 3.5]], [[15.7, 3.7], [17.3, 3.25]], [[16.55, 3.5], [19.1, 3.0]], [[16.55, 3.5], [18.2, 3.2]], [[16.55, 3.5], [14.85, 4.1]], [[16.55, 3.5], [15.7, 3.7]], [[16.55, 3.5], [17.3, 3.25]], [[17.3, 3.25], [20.0, 2.9]], [[17.3, 3.25], [19.1, 3.0]], [[17.3, 3.25], [18.2, 3.2]], [[17.3, 3.25], [14.85, 4.1]], [[17.3, 3.25], [15.7, 3.7]], [[17.3, 3.25], [16.55, 3.5]], [[19.9, 6.95], [19.25, 7.05]], [[19.9, 6.95], [18.75, 7.1]], [[19.9, 6.95], [18.05, 7.25]], [[19.25, 7.05], [19.9, 6.95]], [[19.25, 7.05], [18.75, 7.1]], [[19.25, 7.05], [18.05, 7.25]], [[18.75, 7.1], [19.9, 6.95]], [[18.75, 7.1], [19.25, 7.05]], [[18.75, 7.1], [18.05, 7.25]], [[20.9, 3.0], [21.85, 3.05]], [[20.9, 3.0], [22.75, 3.15]], [[21.85, 3.05], [20.9, 3.0]], [[21.85, 3.05], [22.75, 3.15]], [[22.75, 3.15], [20.9, 3.0]], [[22.75, 3.15], [21.85, 3.05]], [[18.05, 7.25], [19.9, 6.95]], [[18.05, 7.25], [19.25, 7.05]], [[18.05, 7.25], [18.75, 7.1]], [[26.35, 4.15], [24.6, 3.6]], [[26.35, 4.15], [25.4, 3.85]], [[27.2, 4.55], [24.6, 3.6]], [[27.2, 4.55], [25.4, 3.85]], [[30.45, 6.65], [29.7, 6.0]], [[30.45, 6.65], [28.9, 5.55]], [[29.7, 6.0], [30.45, 6.65]], [[29.7, 6.0], [28.05, 5.0]], [[29.7, 6.0], [28.9, 5.55]], [[26.35, 4.15], [27.2, 4.55]], [[26.35, 4.15], [28.05, 5.0]], [[27.2, 4.55], [26.35, 4.15]], [[27.2, 4.55], [28.05, 5.0]], [[27.2, 4.55], [28.9, 5.55]], [[28.05, 5.0], [29.7, 6.0]], [[28.05, 5.0], [26.35, 4.15]], [[28.05, 5.0], [27.2, 4.55]], [[28.05, 5.0], [28.9, 5.55]], [[28.9, 5.55], [30.45, 6.65]], [[28.9, 5.55], [29.7, 6.0]], [[28.9, 5.55], [27.2, 4.55]], [[28.9, 5.55], [28.05, 5.0]], [[25.4, 3.85], [24.6, 3.6]], [[25.4, 3.85], [23.6, 3.3]], [[24.6, 3.6], [25.4, 3.85]], [[24.6, 3.6], [23.6, 3.3]], [[23.6, 3.3], [25.4, 3.85]], [[23.6, 3.3], [24.6, 3.6]]]
(312, 3)
quick len(objs), constSmallNumber 312 10
p1 = (27.2, 4.55) len objs = 312
r is 12.78
new r is 12.78
p1 = (27.2, 4.55)
startIdx = 0 obj (31.95, 7.95)
endIdx = 311 obj (15.65, 14.6)
startDIST = 5.841446738608511 obj (31.95, 7.95)
endDIST = 15.310290656940513 obj (15.65, 14.6)
PRIMUL WHILE endIdx = 311 obj (15.65, 14.6) endDist 15.310290656940513
endDist Il apendeaza pe (15.65, 14.6) endDist 15.310290656940513
PRIMUL WHILE endIdx = 310 obj (15.65, 14.5) endDist 15.244835190975335
endDist Il apendeaza pe (15.65, 14.5) endDist 15.244835190975335
PRIMUL WHILE endIdx = 309 obj (15.65, 14.25) endDist 15.082854504370184
endDist Il apendeaza pe (15.65, 14.25) endDist 15.082854504370184
PRIMUL WHILE endIdx = 308 obj (15.65, 14.05) endDist 14.95501588096783
endDist Il apendeaza pe (15.65, 14.05) endDist 14.95501588096783
PRIMUL WHILE endIdx = 307 obj (15.75, 13.85) endDist 14.751016914097821
endDist Il apendeaza pe (15.75, 13.85) endDist 14.751016914097821
PRIMUL WHILE endIdx = 306 obj (15.8, 13.65) endDist 14.586637720873169
endDist Il apendeaza pe (15.8, 13.65) endDist 14.586637720873169
PRIMUL WHILE endIdx = 305 obj (15.8, 13.5) endDist 14.493533040635743
endDist Il apendeaza pe (15.8, 13.5) endDist 14.493533040635743
PRIMUL WHILE endIdx = 304 obj (15.9, 13.4) endDist 14.353135545935599
endDist Il apendeaza pe (15.9, 13.4) endDist 14.353135545935599
PRIMUL WHILE endIdx = 303 obj (15.95, 13.25) endDist 14.221550548375518
endDist Il apendeaza pe (15.95, 13.25) endDist 14.221550548375518
PRIMUL WHILE endIdx = 302 obj (16.0, 13.1) endDist 14.090510991443852
endDist Il apendeaza pe (16.0, 13.1) endDist 14.090510991443852
PRIMUL WHILE endIdx = 301 obj (16.15, 12.95) endDist 13.880291783676595
endDist Il apendeaza pe (16.15, 12.95) endDist 13.880291783676595
PRIMUL WHILE endIdx = 300 obj (16.2, 12.8) endDist 13.75
endDist Il apendeaza pe (16.2, 12.8) endDist 13.75
PRIMUL WHILE endIdx = 299 obj (16.35, 12.7) endDist 13.570003684597875
endDist Il apendeaza pe (16.35, 12.7) endDist 13.570003684597875
PRIMUL WHILE endIdx = 298 obj (16.5, 12.5) endDist 13.330135033074496
endDist Il apendeaza pe (16.5, 12.5) endDist 13.330135033074496
PRIMUL WHILE endIdx = 297 obj (16.65, 12.35) endDist 13.12030868539304
endDist Il apendeaza pe (16.65, 12.35) endDist 13.12030868539304
PRIMUL WHILE endIdx = 296 obj (16.75, 12.2) endDist 12.950868696732277
endDist Il apendeaza pe (16.75, 12.2) endDist 12.950868696732277
AL DOILEA WHILE startIdx = 0 obj (31.95, 7.95) start 5.841446738608511
AL DOILEA WHILE startIdx = 1 obj (31.15, 7.3) start 4.813003220443551
AL DOILEA WHILE startIdx = 2 obj (30.45, 6.65) start 3.869431482789171
AL DOILEA WHILE startIdx = 3 obj (29.7, 6.0) start 2.8900692033236854
AL DOILEA WHILE startIdx = 4 obj (28.9, 5.55) start 1.9723082923316013
AL DOILEA WHILE startIdx = 5 obj (28.05, 5.0) start 0.9617692030835685
AL DOILEA WHILE startIdx = 6 obj (27.2, 4.55) start 0.0
AL DOILEA WHILE startIdx = 7 obj (26.35, 4.15) start 0.9394147114027946
AL DOILEA WHILE startIdx = 8 obj (25.4, 3.85) start 1.9313207915827972
AL DOILEA WHILE startIdx = 9 obj (24.6, 3.6) start 2.76812210713328
AL DOILEA WHILE startIdx = 10 obj (23.6, 3.3) start 3.8108398024582435
AL DOILEA WHILE startIdx = 11 obj (22.75, 3.15) start 4.665029474719318
AL DOILEA WHILE startIdx = 12 obj (21.85, 3.05) start 5.556302727533839
AL DOILEA WHILE startIdx = 13 obj (20.9, 3.0) start 6.4878733033252125
AL DOILEA WHILE startIdx = 14 obj (20.0, 2.9) start 7.386643351347078
AL DOILEA WHILE startIdx = 15 obj (19.1, 3.0) start 8.2469691402357
AL DOILEA WHILE startIdx = 16 obj (18.2, 3.2) start 9.100686787270508
AL DOILEA WHILE startIdx = 17 obj (17.3, 3.25) start 9.984988733093292
startDist Il apendeaza pe (17.3, 3.25) endDist 9.984988733093292
AL DOILEA WHILE startIdx = 18 obj (16.55, 3.5) start 10.701635389042181
startDist Il apendeaza pe (16.55, 3.5) endDist 10.701635389042181
AL DOILEA WHILE startIdx = 19 obj (15.7, 3.7) start 11.53137025682551
startDist Il apendeaza pe (15.7, 3.7) endDist 11.53137025682551
AL DOILEA WHILE startIdx = 20 obj (14.85, 4.1) start 12.358195661179668
startDist Il apendeaza pe (14.85, 4.1) endDist 12.358195661179668
Pentru (17.0, 12.05) endDist este 12.660568707605517 iar r-eps este 9.98
endDist Il apendeaza pe (17.0, 12.05) endDist 12.660568707605517
startDist Il apendeaza pe (14.15, 4.4) startDist 13.050862040493723
Before swap start end (14.15, 4.4) (17.0, 12.05) 21 295
After swap start end (17.0, 12.05) (14.15, 4.4) 21 295
p1 = (27.2, 4.55)
startIdx = 22 obj (13.4, 4.75)
endIdx = 294 obj (17.2, 11.95)
startDIST = 13.801449199268893 obj (13.4, 4.75)
endDIST = 12.44025723206719 obj (17.2, 11.95)
Pentru (17.2, 11.95) endDist este 12.44025723206719 iar r-eps este 9.98
endDist Il apendeaza pe (17.2, 11.95) endDist 12.44025723206719
startDist Il apendeaza pe (13.4, 4.75) startDist 13.801449199268893
Before swap start end (13.4, 4.75) (17.2, 11.95) 22 294
After swap start end (17.2, 11.95) (13.4, 4.75) 22 294
p1 = (27.2, 4.55)
startIdx = 23 obj (12.7, 5.2)
endIdx = 293 obj (17.5, 11.7)
startDIST = 14.514561653732434 obj (12.7, 5.2)
endDIST = 12.050414930615458 obj (17.5, 11.7)
Pentru (17.5, 11.7) endDist este 12.050414930615458 iar r-eps este 9.98
endDist Il apendeaza pe (17.5, 11.7) endDist 12.050414930615458
startDist Il apendeaza pe (12.7, 5.2) startDist 14.514561653732434
Before swap start end (12.7, 5.2) (17.5, 11.7) 23 293
After swap start end (17.5, 11.7) (12.7, 5.2) 23 293
p1 = (27.2, 4.55)
startIdx = 24 obj (12.05, 5.65)
endIdx = 292 obj (17.85, 11.5)
startDIST = 15.189881500525274 obj (12.05, 5.65)
endDIST = 11.650107295643245 obj (17.85, 11.5)
Pentru (17.85, 11.5) endDist este 11.650107295643245 iar r-eps este 9.98
endDist Il apendeaza pe (17.85, 11.5) endDist 11.650107295643245
startDist Il apendeaza pe (12.05, 5.65) startDist 15.189881500525274
Before swap start end (12.05, 5.65) (17.85, 11.5) 24 292
After swap start end (17.85, 11.5) (12.05, 5.65) 24 292
p1 = (27.2, 4.55)
startIdx = 25 obj (11.45, 6.15)
endIdx = 291 obj (18.15, 11.35)
startDIST = 15.831061240485427 obj (11.45, 6.15)
endDIST = 11.32000441696027 obj (18.15, 11.35)
Pentru (18.15, 11.35) endDist este 11.32000441696027 iar r-eps este 9.98
endDist Il apendeaza pe (18.15, 11.35) endDist 11.32000441696027
Before swap start end (11.45, 6.15) (18.15, 11.35) 25 291
After swap start end (18.15, 11.35) (11.45, 6.15) 25 291
p1 = (27.2, 4.55)
startIdx = 26 obj (10.9, 6.65)
endIdx = 290 obj (18.45, 11.25)
startDIST = 16.434719346554107 obj (10.9, 6.65)
endDIST = 11.020548988140291 obj (18.45, 11.25)
Pentru (18.45, 11.25) endDist este 11.020548988140291 iar r-eps este 9.98
endDist Il apendeaza pe (18.45, 11.25) endDist 11.020548988140291
Before swap start end (10.9, 6.65) (18.45, 11.25) 26 290
After swap start end (18.45, 11.25) (10.9, 6.65) 26 290
p1 = (27.2, 4.55)
startIdx = 27 obj (10.3, 7.25)
endIdx = 289 obj (18.85, 11.1)
startDIST = 17.11432148815722 obj (10.3, 7.25)
endDIST = 10.61249263839556 obj (18.85, 11.1)
Pentru (18.85, 11.1) endDist este 10.61249263839556 iar r-eps este 9.98
endDist Il apendeaza pe (18.85, 11.1) endDist 10.61249263839556
Before swap start end (10.3, 7.25) (18.85, 11.1) 27 289
After swap start end (18.85, 11.1) (10.3, 7.25) 27 289
p1 = (27.2, 4.55)
startIdx = 28 obj (9.7, 7.85)
endIdx = 288 obj (19.15, 11.05)
startDIST = 17.808424972467385 obj (9.7, 7.85)
endDIST = 10.346617804867444 obj (19.15, 11.05)
Pentru (19.15, 11.05) endDist este 10.346617804867444 iar r-eps este 9.98
endDist Il apendeaza pe (19.15, 11.05) endDist 10.346617804867444
Before swap start end (9.7, 7.85) (19.15, 11.05) 28 288
After swap start end (19.15, 11.05) (9.7, 7.85) 28 288
p1 = (27.2, 4.55)
startIdx = 29 obj (9.35, 8.35)
endIdx = 287 obj (19.55, 11.0)
startDIST = 18.25 obj (9.35, 8.35)
endDIST = 10.006248048094749 obj (19.55, 11.0)
Pentru (19.55, 11.0) endDist este 10.006248048094749 iar r-eps este 9.98
endDist Il apendeaza pe (19.55, 11.0) endDist 10.006248048094749
Before swap start end (9.35, 8.35) (19.55, 11.0) 29 287
After swap start end (19.55, 11.0) (9.35, 8.35) 29 287
p1 = (27.2, 4.55)
startIdx = 30 obj (8.9, 9.05)
endIdx = 286 obj (19.95, 11.0)
startDIST = 18.84515852944729 obj (8.9, 9.05)
endDIST = 9.703865209286452 obj (19.95, 11.0)
Pentru (19.95, 11.0) endDist este 9.703865209286452 iar r-eps este 9.98
Before swap start end (8.9, 9.05) (19.95, 11.0) 30 286
After swap start end (19.95, 11.0) (8.9, 9.05) 30 286
p1 = (27.2, 4.55)
startIdx = 31 obj (8.55, 9.65)
endIdx = 285 obj (20.35, 10.95)
startDIST = 19.334748511423673 obj (8.55, 9.65)
endDIST = 9.374566656651387 obj (20.35, 10.95)
Pentru (20.35, 10.95) endDist este 9.374566656651387 iar r-eps este 9.98
Before swap start end (8.55, 9.65) (20.35, 10.95) 31 285
After swap start end (20.35, 10.95) (8.55, 9.65) 31 285
p1 = (27.2, 4.55)
startIdx = 32 obj (8.15, 10.35)
endIdx = 284 obj (20.7, 10.95)
startDIST = 19.913374902311258 obj (8.15, 10.35)
endDIST = 9.121951545584968 obj (20.7, 10.95)
Pentru (20.7, 10.95) endDist este 9.121951545584968 iar r-eps este 9.98
Before swap start end (8.15, 10.35) (20.7, 10.95) 32 284
After swap start end (20.7, 10.95) (8.15, 10.35) 32 284
p1 = (27.2, 4.55)
startIdx = 33 obj (7.95, 10.95)
endIdx = 283 obj (21.1, 11.0)
startDIST = 20.286017351860863 obj (7.95, 10.95)
endDIST = 8.87764045228235 obj (21.1, 11.0)
Pentru (21.1, 11.0) endDist este 8.87764045228235 iar r-eps este 9.98
Before swap start end (7.95, 10.95) (21.1, 11.0) 33 283
After swap start end (21.1, 11.0) (7.95, 10.95) 33 283
p1 = (27.2, 4.55)
startIdx = 34 obj (7.75, 11.7)
endIdx = 282 obj (21.45, 11.05)
startDIST = 20.722572234160506 obj (7.75, 11.7)
endDIST = 8.678277478854891 obj (21.45, 11.05)
Pentru (21.45, 11.05) endDist este 8.678277478854891 iar r-eps este 9.98
Before swap start end (7.75, 11.7) (21.45, 11.05) 34 282
After swap start end (21.45, 11.05) (7.75, 11.7) 34 282
p1 = (27.2, 4.55)
startIdx = 35 obj (7.55, 12.35)
endIdx = 281 obj (21.9, 11.1)
startDIST = 21.141487648696813 obj (7.55, 12.35)
endDIST = 8.425704718301017 obj (21.9, 11.1)
Pentru (21.9, 11.1) endDist este 8.425704718301017 iar r-eps este 9.98
Before swap start end (7.55, 12.35) (21.9, 11.1) 35 281
After swap start end (21.9, 11.1) (7.55, 12.35) 35 281
p1 = (27.2, 4.55)
startIdx = 36 obj (7.45, 13.0)
endIdx = 280 obj (22.3, 11.3)
startDIST = 21.481736428883025 obj (7.45, 13.0)
endDIST = 8.34101312791198 obj (22.3, 11.3)
Pentru (22.3, 11.3) endDist este 8.34101312791198 iar r-eps este 9.98
Before swap start end (7.45, 13.0) (22.3, 11.3) 36 280
After swap start end (22.3, 11.3) (7.45, 13.0) 36 280
p1 = (27.2, 4.55)
startIdx = 37 obj (7.35, 13.75)
endIdx = 279 obj (22.75, 11.4)
startDIST = 21.878356885287342 obj (7.35, 13.75)
endDIST = 8.168537200747757 obj (22.75, 11.4)
Pentru (22.75, 11.4) endDist este 8.168537200747757 iar r-eps este 9.98
Before swap start end (7.35, 13.75) (22.75, 11.4) 37 279
After swap start end (22.75, 11.4) (7.35, 13.75) 37 279
p1 = (27.2, 4.55)
startIdx = 38 obj (7.3, 14.35)
endIdx = 278 obj (23.2, 11.65)
startDIST = 22.18220007122828 obj (7.3, 14.35)
endDIST = 8.149233092751736 obj (23.2, 11.65)
Pentru (23.2, 11.65) endDist este 8.149233092751736 iar r-eps este 9.98
Before swap start end (7.3, 14.35) (23.2, 11.65) 38 278
After swap start end (23.2, 11.65) (7.3, 14.35) 38 278
p1 = (27.2, 4.55)
startIdx = 39 obj (7.35, 14.95)
endIdx = 277 obj (23.55, 11.85)
startDIST = 22.409428819137716 obj (7.35, 14.95)
endDIST = 8.16164811787423 obj (23.55, 11.85)
Pentru (23.55, 11.85) endDist este 8.16164811787423 iar r-eps este 9.98
Before swap start end (7.35, 14.95) (23.55, 11.85) 39 277
After swap start end (23.55, 11.85) (7.35, 14.95) 39 277
p1 = (27.2, 4.55)
startIdx = 40 obj (7.35, 15.75)
endIdx = 276 obj (24.05, 12.2)
startDIST = 22.791719987749936 obj (7.35, 15.75)
endDIST = 8.273149339882604 obj (24.05, 12.2)
Pentru (24.05, 12.2) endDist este 8.273149339882604 iar r-eps este 9.98
Before swap start end (7.35, 15.75) (24.05, 12.2) 40 276
After swap start end (24.05, 12.2) (7.35, 15.75) 40 276
p1 = (27.2, 4.55)
startIdx = 41 obj (7.55, 16.35)
endIdx = 275 obj (24.4, 12.45)
startDIST = 22.920787508286008 obj (7.55, 16.35)
endDIST = 8.381527307120106 obj (24.4, 12.45)
Pentru (24.4, 12.45) endDist este 8.381527307120106 iar r-eps este 9.98
Before swap start end (7.55, 16.35) (24.4, 12.45) 41 275
After swap start end (24.4, 12.45) (7.55, 16.35) 41 275
p1 = (27.2, 4.55)
startIdx = 42 obj (7.7, 16.95)
endIdx = 274 obj (24.8, 12.7)
startDIST = 23.108656386730924 obj (7.7, 16.95)
endDIST = 8.496028483944716 obj (24.8, 12.7)
Pentru (24.8, 12.7) endDist este 8.496028483944716 iar r-eps este 9.98
Before swap start end (7.7, 16.95) (24.8, 12.7) 42 274
After swap start end (24.8, 12.7) (7.7, 16.95) 42 274
p1 = (27.2, 4.55)
startIdx = 43 obj (7.8, 17.55)
endIdx = 273 obj (25.05, 12.95)
startDIST = 23.352944139872385 obj (7.8, 17.55)
endDIST = 8.670784278253032 obj (25.05, 12.95)
Pentru (25.05, 12.95) endDist este 8.670784278253032 iar r-eps este 9.98
Before swap start end (7.8, 17.55) (25.05, 12.95) 43 273
After swap start end (25.05, 12.95) (7.8, 17.55) 43 273
p1 = (27.2, 4.55)
startIdx = 44 obj (8.05, 18.15)
endIdx = 272 obj (25.35, 13.3)
startDIST = 23.487922428346018 obj (8.05, 18.15)
endDIST = 8.943433345198027 obj (25.35, 13.3)
Pentru (25.35, 13.3) endDist este 8.943433345198027 iar r-eps este 9.98
Before swap start end (8.05, 18.15) (25.35, 13.3) 44 272
After swap start end (25.35, 13.3) (8.05, 18.15) 44 272
p1 = (27.2, 4.55)
startIdx = 45 obj (8.3, 18.75)
endIdx = 271 obj (25.75, 13.7)
startDIST = 23.64000846023537 obj (8.3, 18.75)
endDIST = 9.264178322981481 obj (25.75, 13.7)
Pentru (25.75, 13.7) endDist este 9.264178322981481 iar r-eps este 9.98
Before swap start end (8.3, 18.75) (25.75, 13.7) 45 271
After swap start end (25.75, 13.7) (8.3, 18.75) 45 271
p1 = (27.2, 4.55)
startIdx = 46 obj (8.65, 19.3)
endIdx = 270 obj (25.95, 14.1)
startDIST = 23.69947256797079 obj (8.65, 19.3)
endDIST = 9.631458871842833 obj (25.95, 14.1)
Pentru (25.95, 14.1) endDist este 9.631458871842833 iar r-eps este 9.98
Before swap start end (8.65, 19.3) (25.95, 14.1) 46 270
After swap start end (25.95, 14.1) (8.65, 19.3) 46 270
p1 = (27.2, 4.55)
startIdx = 47 obj (8.9, 19.85)
endIdx = 269 obj (26.3, 14.45)
startDIST = 23.85330165826106 obj (8.9, 19.85)
endDIST = 9.940824915468534 obj (26.3, 14.45)
Pentru (26.3, 14.45) endDist este 9.940824915468534 iar r-eps este 9.98
Before swap start end (8.9, 19.85) (26.3, 14.45) 47 269
After swap start end (26.3, 14.45) (8.9, 19.85) 47 269
p1 = (27.2, 4.55)
startIdx = 48 obj (9.3, 20.3)
endIdx = 268 obj (26.55, 14.85)
startDIST = 23.842661344740858 obj (9.3, 20.3)
endDIST = 10.320489329484335 obj (26.55, 14.85)
Pentru (26.55, 14.85) endDist este 10.320489329484335 iar r-eps este 9.98
endDist Il apendeaza pe (26.55, 14.85) endDist 10.320489329484335
Before swap start end (9.3, 20.3) (26.55, 14.85) 48 268
After swap start end (26.55, 14.85) (9.3, 20.3) 48 268
p1 = (27.2, 4.55)
startIdx = 49 obj (9.65, 20.8)
endIdx = 267 obj (26.75, 15.35)
startDIST = 23.917880340866326 obj (9.65, 20.8)
endDIST = 10.809370934517883 obj (26.75, 15.35)
Pentru (26.75, 15.35) endDist este 10.809370934517883 iar r-eps este 9.98
endDist Il apendeaza pe (26.75, 15.35) endDist 10.809370934517883
Before swap start end (9.65, 20.8) (26.75, 15.35) 49 267
After swap start end (26.75, 15.35) (9.65, 20.8) 49 267
p1 = (27.2, 4.55)
startIdx = 50 obj (10.2, 21.25)
endIdx = 266 obj (27.0, 15.9)
startDIST = 23.83044271514904 obj (10.2, 21.25)
endDIST = 11.351761977772439 obj (27.0, 15.9)
Pentru (27.0, 15.9) endDist este 11.351761977772439 iar r-eps este 9.98
endDist Il apendeaza pe (27.0, 15.9) endDist 11.351761977772439
Before swap start end (10.2, 21.25) (27.0, 15.9) 50 266
After swap start end (27.0, 15.9) (10.2, 21.25) 50 266
p1 = (27.2, 4.55)
startIdx = 51 obj (10.6, 21.65)
endIdx = 265 obj (27.0, 16.4)
startDIST = 23.832121181296472 obj (10.6, 21.65)
endDIST = 11.851687643538364 obj (27.0, 16.4)
Pentru (27.0, 16.4) endDist este 11.851687643538364 iar r-eps este 9.98
endDist Il apendeaza pe (27.0, 16.4) endDist 11.851687643538364
Before swap start end (10.6, 21.65) (27.0, 16.4) 51 265
After swap start end (27.0, 16.4) (10.6, 21.65) 51 265
p1 = (27.2, 4.55)
startIdx = 52 obj (11.1, 22.15)
endIdx = 264 obj (27.15, 16.9)
startDIST = 23.853092042752028 obj (11.1, 22.15)
endDIST = 12.350101214160148 obj (27.15, 16.9)
Pentru (27.15, 16.9) endDist este 12.350101214160148 iar r-eps este 9.98
endDist Il apendeaza pe (27.15, 16.9) endDist 12.350101214160148
Before swap start end (11.1, 22.15) (27.15, 16.9) 52 264
After swap start end (27.15, 16.9) (11.1, 22.15) 52 264
p1 = (27.2, 4.55)
startIdx = 53 obj (11.55, 22.45)
endIdx = 263 obj (27.3, 17.4)
startDIST = 23.776721809366403 obj (11.55, 22.45)
endDIST = 12.850389099167383 obj (27.3, 17.4)
PRIMUL WHILE endIdx = 263 obj (27.3, 17.4) endDist 12.850389099167383
endDist Il apendeaza pe (27.3, 17.4) endDist 12.850389099167383
PRIMUL WHILE endIdx = 262 obj (27.4, 18.0) endDist 13.45148690665831
endDist Il apendeaza pe (27.4, 18.0) endDist 13.45148690665831
PRIMUL WHILE endIdx = 261 obj (27.35, 18.45) endDist 13.900809328956353
endDist Il apendeaza pe (27.35, 18.45) endDist 13.900809328956353
PRIMUL WHILE endIdx = 260 obj (27.35, 19.1) endDist 14.550773175333331
endDist Il apendeaza pe (27.35, 19.1) endDist 14.550773175333331
PRIMUL WHILE endIdx = 259 obj (27.15, 19.6) endDist 15.050083056249225
endDist Il apendeaza pe (27.15, 19.6) endDist 15.050083056249225
PRIMUL WHILE endIdx = 258 obj (27.15, 20.15) endDist 15.600080127999341
PRIMUL WHILE endIdx = 257 obj (27.0, 20.7) endDist 16.15123834261633
PRIMUL WHILE endIdx = 256 obj (26.75, 21.25) endDist 16.706061774098647
PRIMUL WHILE endIdx = 255 obj (26.6, 21.8) endDist 17.260431628438496
PRIMUL WHILE endIdx = 254 obj (26.2, 22.3) endDist 17.778146697561027
PRIMUL WHILE endIdx = 253 obj (26.05, 23.0) endDist 18.485805365198456
PRIMUL WHILE endIdx = 252 obj (25.65, 23.45) endDist 18.963451690027316
PRIMUL WHILE endIdx = 251 obj (25.25, 23.95) endDist 19.497756281172457
PRIMUL WHILE endIdx = 250 obj (24.75, 24.35) endDist 19.95100248107849
PRIMUL WHILE endIdx = 249 obj (24.3, 24.85) endDist 20.506096654409877
PRIMUL WHILE endIdx = 248 obj (23.8, 25.3) endDist 21.02670920519899
PRIMUL WHILE endIdx = 247 obj (23.35, 25.65) endDist 21.4483682363018
PRIMUL WHILE endIdx = 246 obj (22.7, 26.15) endDist 22.063771209836272
PRIMUL WHILE endIdx = 245 obj (22.05, 26.5) endDist 22.546063958039326
PRIMUL WHILE endIdx = 244 obj (21.45, 26.8) endDist 22.980970388562795
PRIMUL WHILE endIdx = 243 obj (20.7, 27.1) endDist 23.46811666921741
PRIMUL WHILE endIdx = 242 obj (20.1, 27.35) endDist 23.879907872519105
PRIMUL WHILE endIdx = 241 obj (19.35, 27.6) endDist 24.350051334648146
PRIMUL WHILE endIdx = 240 obj (18.55, 27.7) endDist 24.71325555243582
PRIMUL WHILE endIdx = 239 obj (17.9, 27.75) endDist 24.994599416673996
PRIMUL WHILE endIdx = 238 obj (17.1, 27.75) endDist 25.30316185775999
PRIMUL WHILE endIdx = 237 obj (16.4, 27.75) endDist 25.5906232827573
PRIMUL WHILE endIdx = 236 obj (15.55, 27.75) endDist 25.960787738433517
PRIMUL WHILE endIdx = 235 obj (14.7, 27.75) endDist 26.3531781764553
PRIMUL WHILE endIdx = 234 obj (14.05, 27.6) endDist 26.537237987401777
PRIMUL WHILE endIdx = 233 obj (13.3, 27.6) endDist 26.91676986564324
PRIMUL WHILE endIdx = 232 obj (12.45, 27.25) endDist 27.071248585907522
PRIMUL WHILE endIdx = 231 obj (11.7, 27.0) endDist 27.280991550894917
PRIMUL WHILE endIdx = 230 obj (10.9, 26.75) endDist 27.54142334738711
PRIMUL WHILE endIdx = 229 obj (10.2, 26.35) endDist 27.644891028904418
PRIMUL WHILE endIdx = 228 obj (9.5, 26.0) endDist 27.809935275005586
PRIMUL WHILE endIdx = 227 obj (8.8, 25.45) endDist 27.84546641735419
PRIMUL WHILE endIdx = 226 obj (8.05, 24.95) endDist 27.980037526779693
PRIMUL WHILE endIdx = 225 obj (7.35, 24.45) endDist 28.10751678821877
PRIMUL WHILE endIdx = 224 obj (6.8, 23.85) endDist 28.08291295432153
PRIMUL WHILE endIdx = 223 obj (6.2, 23.3) endDist 28.15248656868519
PRIMUL WHILE endIdx = 222 obj (5.6, 22.5) endDist 28.084915880237208
PRIMUL WHILE endIdx = 221 obj (5.15, 21.8) endDist 27.99580325691692
PRIMUL WHILE endIdx = 220 obj (4.7, 21.1) endDist 27.931210142061516
PRIMUL WHILE endIdx = 219 obj (4.35, 20.25) endDist 27.72386156364225
PRIMUL WHILE endIdx = 218 obj (3.95, 19.55) endDist 27.668800118545075
PRIMUL WHILE endIdx = 217 obj (3.7, 18.7) endDist 27.43123219981195
PRIMUL WHILE endIdx = 216 obj (3.45, 17.75) endDist 27.17172243344172
PRIMUL WHILE endIdx = 215 obj (3.2, 16.85) endDist 26.96831474156292
PRIMUL WHILE endIdx = 214 obj (3.1, 16.0) endDist 26.68168847730593
PRIMUL WHILE endIdx = 213 obj (3.0, 15.1) endDist 26.3996685585255
PRIMUL WHILE endIdx = 212 obj (3.05, 14.15) endDist 25.98812228692177
PRIMUL WHILE endIdx = 211 obj (3.1, 13.25) endDist 25.62225595063791
PRIMUL WHILE endIdx = 210 obj (3.1, 12.35) endDist 25.330811277967392
PRIMUL WHILE endIdx = 209 obj (3.35, 11.4) endDist 24.814209638833955
PRIMUL WHILE endIdx = 208 obj (3.55, 10.65) endDist 24.42401482148256
PRIMUL WHILE endIdx = 207 obj (3.9, 9.6) endDist 23.84098362064787
PRIMUL WHILE endIdx = 206 obj (18.2, 19.55) endDist 17.4928556845359
PRIMUL WHILE endIdx = 205 obj (18.0, 19.6) endDist 17.639231842685216
PRIMUL WHILE endIdx = 204 obj (17.8, 19.7) endDist 17.829259659335268
PRIMUL WHILE endIdx = 203 obj (17.65, 19.75) endDist 17.951114171549353
PRIMUL WHILE endIdx = 202 obj (17.4, 19.8) endDist 18.127396393304803
PRIMUL WHILE endIdx = 201 obj (17.2, 19.9) endDist 18.320002729257435
PRIMUL WHILE endIdx = 200 obj (16.85, 19.9) endDist 18.513373544548813
PRIMUL WHILE endIdx = 199 obj (16.55, 19.9) endDist 18.682746050835245
PRIMUL WHILE endIdx = 198 obj (16.2, 19.9) endDist 18.884451276116017
PRIMUL WHILE endIdx = 197 obj (15.95, 19.9) endDist 19.03115866152137
PRIMUL WHILE endIdx = 196 obj (15.55, 19.85) endDist 19.230509613632186
PRIMUL WHILE endIdx = 195 obj (15.25, 19.7) endDist 19.295724915120445
PRIMUL WHILE endIdx = 194 obj (15.0, 19.7) endDist 19.45154235529923
PRIMUL WHILE endIdx = 193 obj (14.85, 19.55) endDist 19.42993823973715
PRIMUL WHILE endIdx = 192 obj (14.45, 19.5) endDist 19.64853684120016
PRIMUL WHILE endIdx = 191 obj (14.15, 19.25) endDist 19.656869028408362
PRIMUL WHILE endIdx = 190 obj (13.8, 19.05) endDist 19.743606560099398
PRIMUL WHILE endIdx = 189 obj (13.55, 18.85) endDist 19.768978223469215
PRIMUL WHILE endIdx = 188 obj (13.3, 18.6) endDist 19.76391914575649
PRIMUL WHILE endIdx = 187 obj (13.1, 18.4) endDist 19.764425111801252
PRIMUL WHILE endIdx = 186 obj (12.8, 18.05) endDist 19.738540979515175
PRIMUL WHILE endIdx = 185 obj (12.55, 17.85) endDist 19.786674809072895
PRIMUL WHILE endIdx = 184 obj (12.3, 17.6) endDist 19.806880117777258
PRIMUL WHILE endIdx = 183 obj (12.15, 17.2) endDist 19.660239062636037
PRIMUL WHILE endIdx = 182 obj (12.0, 16.75) endDist 19.490510511528424
PRIMUL WHILE endIdx = 181 obj (11.85, 16.5) endDist 19.45314884536691
PRIMUL WHILE endIdx = 180 obj (11.8, 16.05) endDist 19.22004162326398
PRIMUL WHILE endIdx = 179 obj (11.65, 15.7) endDist 19.134393118152452
PRIMUL WHILE endIdx = 178 obj (11.6, 15.25) endDist 18.91692363995795
PRIMUL WHILE endIdx = 177 obj (11.55, 14.7) endDist 18.653283893191567
PRIMUL WHILE endIdx = 176 obj (11.55, 14.35) endDist 18.465169915275624
PRIMUL WHILE endIdx = 175 obj (11.55, 14.0) endDist 18.281821572261336
PRIMUL WHILE endIdx = 174 obj (11.55, 13.6) endDist 18.078301911407497
PRIMUL WHILE endIdx = 173 obj (11.75, 13.05) endDist 17.633845298175892
PRIMUL WHILE endIdx = 172 obj (11.8, 12.65) endDist 17.40028735394907
PRIMUL WHILE endIdx = 171 obj (11.95, 12.2) endDist 17.061213321449326
PRIMUL WHILE endIdx = 170 obj (12.2, 11.75) endDist 16.63850954863446
PRIMUL WHILE endIdx = 169 obj (12.35, 11.4) endDist 16.353745748298767
PRIMUL WHILE endIdx = 168 obj (12.65, 10.9) endDist 15.875295272844532
PRIMUL WHILE endIdx = 167 obj (12.95, 10.55) endDist 15.461646096066227
endDist Il apendeaza pe (12.95, 10.55) endDist 15.461646096066227
PRIMUL WHILE endIdx = 166 obj (13.25, 10.1) endDist 15.013493930461356
endDist Il apendeaza pe (13.25, 10.1) endDist 15.013493930461356
PRIMUL WHILE endIdx = 165 obj (13.6, 9.65) endDist 14.524806367039801
endDist Il apendeaza pe (13.6, 9.65) endDist 14.524806367039801
PRIMUL WHILE endIdx = 164 obj (13.95, 9.3) endDist 14.075688260259247
endDist Il apendeaza pe (13.95, 9.3) endDist 14.075688260259247
PRIMUL WHILE endIdx = 163 obj (14.45, 8.9) endDist 13.471636871590624
endDist Il apendeaza pe (14.45, 8.9) endDist 13.471636871590624
PRIMUL WHILE endIdx = 162 obj (14.9, 8.7) endDist 12.981236458827794
endDist Il apendeaza pe (14.9, 8.7) endDist 12.981236458827794
Pentru (15.4, 8.35) endDist este 12.396773773849388 iar r-eps este 9.98
endDist Il apendeaza pe (15.4, 8.35) endDist 12.396773773849388
Before swap start end (11.55, 22.45) (15.4, 8.35) 53 161
After swap start end (15.4, 8.35) (11.55, 22.45) 53 161
p1 = (27.2, 4.55)
startIdx = 54 obj (11.95, 22.7)
endIdx = 160 obj (15.8, 8.05)
startDIST = 23.706222811742908 obj (11.95, 22.7)
endDIST = 11.925183436744275 obj (15.8, 8.05)
Pentru (15.8, 8.05) endDist este 11.925183436744275 iar r-eps este 9.98
endDist Il apendeaza pe (15.8, 8.05) endDist 11.925183436744275
Before swap start end (11.95, 22.7) (15.8, 8.05) 54 160
After swap start end (15.8, 8.05) (11.95, 22.7) 54 160
p1 = (27.2, 4.55)
startIdx = 55 obj (12.55, 23.0)
endIdx = 159 obj (16.35, 7.8)
startDIST = 23.55896856825442 obj (12.55, 23.0)
endDIST = 11.326296835241427 obj (16.35, 7.8)
Pentru (16.35, 7.8) endDist este 11.326296835241427 iar r-eps este 9.98
endDist Il apendeaza pe (16.35, 7.8) endDist 11.326296835241427
Before swap start end (12.55, 23.0) (16.35, 7.8) 55 159
After swap start end (16.35, 7.8) (12.55, 23.0) 55 159
p1 = (27.2, 4.55)
startIdx = 56 obj (13.05, 23.2)
endIdx = 158 obj (16.9, 7.6)
startDIST = 23.4103609540733 obj (13.05, 23.2)
endDIST = 10.742090113194918 obj (16.9, 7.6)
Pentru (16.9, 7.6) endDist este 10.742090113194918 iar r-eps este 9.98
endDist Il apendeaza pe (16.9, 7.6) endDist 10.742090113194918
Before swap start end (13.05, 23.2) (16.9, 7.6) 56 158
After swap start end (16.9, 7.6) (13.05, 23.2) 56 158
p1 = (27.2, 4.55)
startIdx = 57 obj (13.45, 23.4)
endIdx = 157 obj (17.5, 7.35)
startDIST = 23.332059489037825 obj (13.45, 23.4)
endDIST = 10.096038827183659 obj (17.5, 7.35)
Pentru (17.5, 7.35) endDist este 10.096038827183659 iar r-eps este 9.98
endDist Il apendeaza pe (17.5, 7.35) endDist 10.096038827183659
Before swap start end (13.45, 23.4) (17.5, 7.35) 57 157
After swap start end (17.5, 7.35) (13.45, 23.4) 57 157
p1 = (27.2, 4.55)
startIdx = 58 obj (14.0, 23.55)
endIdx = 156 obj (18.05, 7.25)
startDIST = 23.135254483147577 obj (14.0, 23.55)
endDIST = 9.540047169694706 obj (18.05, 7.25)
Pentru (18.05, 7.25) endDist este 9.540047169694706 iar r-eps este 9.98
Before swap start end (14.0, 23.55) (18.05, 7.25) 58 156
After swap start end (18.05, 7.25) (14.0, 23.55) 58 156
p1 = (27.2, 4.55)
startIdx = 59 obj (14.55, 23.6)
endIdx = 155 obj (18.75, 7.1)
startDIST = 22.867553432757077 obj (14.55, 23.6)
endDIST = 8.826380911789384 obj (18.75, 7.1)
Pentru (18.75, 7.1) endDist este 8.826380911789384 iar r-eps este 9.98
Before swap start end (14.55, 23.6) (18.75, 7.1) 59 155
After swap start end (18.75, 7.1) (14.55, 23.6) 59 155
p1 = (27.2, 4.55)
startIdx = 60 obj (15.1, 23.75)
endIdx = 154 obj (19.25, 7.05)
startDIST = 22.694713040706198 obj (15.1, 23.75)
endDIST = 8.333816652650812 obj (19.25, 7.05)
Pentru (19.25, 7.05) endDist este 8.333816652650812 iar r-eps este 9.98
Before swap start end (15.1, 23.75) (19.25, 7.05) 60 154
After swap start end (19.25, 7.05) (15.1, 23.75) 60 154
p1 = (27.2, 4.55)
startIdx = 61 obj (15.7, 23.75)
endIdx = 153 obj (19.9, 6.95)
startDIST = 22.380571931923456 obj (15.7, 23.75)
endDIST = 7.684399781375252 obj (19.9, 6.95)
Pentru (19.9, 6.95) endDist este 7.684399781375252 iar r-eps este 9.98
Before swap start end (15.7, 23.75) (19.9, 6.95) 61 153
After swap start end (19.9, 6.95) (15.7, 23.75) 61 153
p1 = (27.2, 4.55)
startIdx = 62 obj (16.15, 23.85)
endIdx = 152 obj (20.5, 7.0)
startDIST = 22.239435694279656 obj (16.15, 23.85)
endDIST = 7.133897952732433 obj (20.5, 7.0)
Pentru (20.5, 7.0) endDist este 7.133897952732433 iar r-eps este 9.98
Before swap start end (16.15, 23.85) (20.5, 7.0) 62 152
After swap start end (20.5, 7.0) (16.15, 23.85) 62 152
p1 = (27.2, 4.55)
startIdx = 63 obj (16.7, 23.8)
endIdx = 151 obj (21.25, 7.05)
startDIST = 21.92743715074792 obj (16.7, 23.8)
endDIST = 6.453874805107393 obj (21.25, 7.05)
Pentru (21.25, 7.05) endDist este 6.453874805107393 iar r-eps este 9.98
Before swap start end (16.7, 23.8) (21.25, 7.05) 63 151
After swap start end (21.25, 7.05) (16.7, 23.8) 63 151
p1 = (27.2, 4.55)
startIdx = 64 obj (17.15, 23.75)
endIdx = 150 obj (21.9, 7.1)
startDIST = 21.67123669752144 obj (17.15, 23.75)
endDIST = 5.881538914263852 obj (21.9, 7.1)
Pentru (21.9, 7.1) endDist este 5.881538914263852 iar r-eps este 9.98
Before swap start end (17.15, 23.75) (21.9, 7.1) 64 150
After swap start end (21.9, 7.1) (17.15, 23.75) 64 150
p1 = (27.2, 4.55)
startIdx = 65 obj (17.75, 23.75)
endIdx = 149 obj (22.5, 7.3)
startDIST = 21.39959111758914 obj (17.75, 23.75)
endDIST = 5.445410911951456 obj (22.5, 7.3)
Pentru (22.5, 7.3) endDist este 5.445410911951456 iar r-eps este 9.98
Before swap start end (17.75, 23.75) (22.5, 7.3) 65 149
After swap start end (22.5, 7.3) (17.75, 23.75) 65 149
p1 = (27.2, 4.55)
startIdx = 66 obj (18.2, 23.6)
endIdx = 148 obj (23.15, 7.4)
startDIST = 21.068993806064874 obj (18.2, 23.6)
endDIST = 4.952272205765754 obj (23.15, 7.4)
Pentru (23.15, 7.4) endDist este 4.952272205765754 iar r-eps este 9.98
Before swap start end (18.2, 23.6) (23.15, 7.4) 66 148
After swap start end (23.15, 7.4) (18.2, 23.6) 66 148
p1 = (27.2, 4.55)
startIdx = 67 obj (18.65, 23.5)
endIdx = 147 obj (23.9, 7.65)
startDIST = 20.789540639465798 obj (18.65, 23.5)
endDIST = 4.5276925690687095 obj (23.9, 7.65)
Pentru (23.9, 7.65) endDist este 4.5276925690687095 iar r-eps este 9.98
Before swap start end (18.65, 23.5) (23.9, 7.65) 67 147
After swap start end (23.9, 7.65) (18.65, 23.5) 67 147
p1 = (27.2, 4.55)
startIdx = 68 obj (19.1, 23.35)
endIdx = 146 obj (24.5, 7.75)
startDIST = 20.470710783946902 obj (19.1, 23.35)
endDIST = 4.186884283091664 obj (24.5, 7.75)
Pentru (24.5, 7.75) endDist este 4.186884283091664 iar r-eps este 9.98
Before swap start end (19.1, 23.35) (24.5, 7.75) 68 146
After swap start end (24.5, 7.75) (19.1, 23.35) 68 146
p1 = (27.2, 4.55)
startIdx = 69 obj (19.6, 23.15)
endIdx = 145 obj (25.15, 8.05)
startDIST = 20.092784774639874 obj (19.6, 23.15)
endDIST = 4.0561681424714155 obj (25.15, 8.05)
Pentru (25.15, 8.05) endDist este 4.0561681424714155 iar r-eps este 9.98
Before swap start end (19.6, 23.15) (25.15, 8.05) 69 145
After swap start end (25.15, 8.05) (19.6, 23.15) 69 145
p1 = (27.2, 4.55)
startIdx = 70 obj (20.0, 22.95)
endIdx = 144 obj (25.7, 8.4)
startDIST = 19.75854245636555 obj (20.0, 22.95)
endDIST = 4.1318881882258145 obj (25.7, 8.4)
Pentru (25.7, 8.4) endDist este 4.1318881882258145 iar r-eps este 9.98
Before swap start end (20.0, 22.95) (25.7, 8.4) 70 144
After swap start end (25.7, 8.4) (20.0, 22.95) 70 144
p1 = (27.2, 4.55)
startIdx = 71 obj (20.4, 22.7)
endIdx = 143 obj (26.25, 8.8)
startDIST = 19.382014859141965 obj (20.4, 22.7)
endDIST = 4.3548823175833355 obj (26.25, 8.8)
Pentru (26.25, 8.8) endDist este 4.3548823175833355 iar r-eps este 9.98
Before swap start end (20.4, 22.7) (26.25, 8.8) 71 143
After swap start end (26.25, 8.8) (20.4, 22.7) 71 143
p1 = (27.2, 4.55)
startIdx = 72 obj (20.7, 22.55)
endIdx = 142 obj (26.9, 9.1)
startDIST = 19.13765920900464 obj (20.7, 22.55)
endDIST = 4.559879384369722 obj (26.9, 9.1)
Pentru (26.9, 9.1) endDist este 4.559879384369722 iar r-eps este 9.98
Before swap start end (20.7, 22.55) (26.9, 9.1) 72 142
After swap start end (26.9, 9.1) (20.7, 22.55) 72 142
p1 = (27.2, 4.55)
startIdx = 73 obj (21.0, 22.15)
endIdx = 141 obj (27.55, 9.65)
startDIST = 18.66011789887727 obj (21.0, 22.15)
endDIST = 5.111995696398815 obj (27.55, 9.65)
Pentru (27.55, 9.65) endDist este 5.111995696398815 iar r-eps este 9.98
Before swap start end (21.0, 22.15) (27.55, 9.65) 73 141
After swap start end (27.55, 9.65) (21.0, 22.15) 73 141
p1 = (27.2, 4.55)
startIdx = 74 obj (21.45, 21.95)
endIdx = 140 obj (28.0, 10.1)
startDIST = 18.32546043077772 obj (21.45, 21.95)
endDIST = 5.607361233236182 obj (28.0, 10.1)
Pentru (28.0, 10.1) endDist este 5.607361233236182 iar r-eps este 9.98
Before swap start end (21.45, 21.95) (28.0, 10.1) 74 140
After swap start end (28.0, 10.1) (21.45, 21.95) 74 140
p1 = (27.2, 4.55)
startIdx = 75 obj (21.75, 21.55)
endIdx = 139 obj (28.5, 10.6)
startDIST = 17.85224075571467 obj (21.75, 21.55)
endDIST = 6.1880934058884405 obj (28.5, 10.6)
Pentru (28.5, 10.6) endDist este 6.1880934058884405 iar r-eps este 9.98
Before swap start end (21.75, 21.55) (28.5, 10.6) 75 139
After swap start end (28.5, 10.6) (21.75, 21.55) 75 139
p1 = (27.2, 4.55)
startIdx = 76 obj (22.0, 21.25)
endIdx = 138 obj (29.0, 11.15)
startDIST = 17.490854753270348 obj (22.0, 21.25)
endDIST = 6.841052550594829 obj (29.0, 11.15)
Pentru (29.0, 11.15) endDist este 6.841052550594829 iar r-eps este 9.98
Before swap start end (22.0, 21.25) (29.0, 11.15) 76 138
After swap start end (29.0, 11.15) (22.0, 21.25) 76 138
p1 = (27.2, 4.55)
startIdx = 77 obj (22.25, 21.0)
endIdx = 137 obj (29.5, 11.75)
startDIST = 17.178620433550535 obj (22.25, 21.0)
endDIST = 7.558438992278764 obj (29.5, 11.75)
Pentru (29.5, 11.75) endDist este 7.558438992278764 iar r-eps este 9.98
Before swap start end (22.25, 21.0) (29.5, 11.75) 77 137
After swap start end (29.5, 11.75) (22.25, 21.0) 77 137
p1 = (27.2, 4.55)
startIdx = 78 obj (22.5, 20.7)
endIdx = 136 obj (29.9, 12.3)
startDIST = 16.82000297265134 obj (22.5, 20.7)
endDIST = 8.206856889211606 obj (29.9, 12.3)
Pentru (29.9, 12.3) endDist este 8.206856889211606 iar r-eps este 9.98
Before swap start end (22.5, 20.7) (29.9, 12.3) 78 136
After swap start end (29.9, 12.3) (22.5, 20.7) 78 136
p1 = (27.2, 4.55)
startIdx = 79 obj (22.65, 20.35)
endIdx = 135 obj (30.3, 13.0)
startDIST = 16.442095365250744 obj (22.65, 20.35)
endDIST = 9.000694417654673 obj (30.3, 13.0)
Pentru (30.3, 13.0) endDist este 9.000694417654673 iar r-eps este 9.98
Before swap start end (22.65, 20.35) (30.3, 13.0) 79 135
After swap start end (30.3, 13.0) (22.65, 20.35) 79 135
p1 = (27.2, 4.55)
startIdx = 80 obj (22.75, 20.05)
endIdx = 134 obj (30.6, 13.65)
startDIST = 16.126143370316413 obj (22.75, 20.05)
endDIST = 9.714422267947798 obj (30.6, 13.65)
Pentru (30.6, 13.65) endDist este 9.714422267947798 iar r-eps este 9.98
Before swap start end (22.75, 20.05) (30.6, 13.65) 80 134
After swap start end (30.6, 13.65) (22.75, 20.05) 80 134
p1 = (27.2, 4.55)
startIdx = 81 obj (22.9, 19.65)
endIdx = 133 obj (30.9, 14.35)
startDIST = 15.70031846810758 obj (22.9, 19.65)
endDIST = 10.475208828467336 obj (30.9, 14.35)
Pentru (30.9, 14.35) endDist este 10.475208828467336 iar r-eps este 9.98
endDist Il apendeaza pe (30.9, 14.35) endDist 10.475208828467336
Before swap start end (22.9, 19.65) (30.9, 14.35) 81 133
After swap start end (30.9, 14.35) (22.9, 19.65) 81 133
p1 = (27.2, 4.55)
startIdx = 82 obj (23.0, 19.35)
endIdx = 132 obj (31.15, 15.05)
startDIST = 15.38440769090575 obj (23.0, 19.35)
endDIST = 11.218400064180274 obj (31.15, 15.05)
Pentru (31.15, 15.05) endDist este 11.218400064180274 iar r-eps este 9.98
endDist Il apendeaza pe (31.15, 15.05) endDist 11.218400064180274
startDist Il apendeaza pe (23.0, 19.35) startDist 15.38440769090575
Before swap start end (23.0, 19.35) (31.15, 15.05) 82 132
After swap start end (31.15, 15.05) (23.0, 19.35) 82 132
p1 = (27.2, 4.55)
startIdx = 83 obj (23.1, 19.0)
endIdx = 131 obj (31.3, 15.8)
startDIST = 15.020402790870822 obj (23.1, 19.0)
endDIST = 11.97382562091164 obj (31.3, 15.8)
Pentru (31.3, 15.8) endDist este 11.97382562091164 iar r-eps este 9.98
endDist Il apendeaza pe (31.3, 15.8) endDist 11.97382562091164
startDist Il apendeaza pe (23.1, 19.0) startDist 15.020402790870822
Before swap start end (23.1, 19.0) (31.3, 15.8) 83 131
After swap start end (31.3, 15.8) (23.1, 19.0) 83 131
p1 = (27.2, 4.55)
startIdx = 84 obj (23.15, 18.65)
endIdx = 130 obj (31.45, 16.55)
startDIST = 14.67012269887338 obj (23.15, 18.65)
endDIST = 12.730377056474016 obj (31.45, 16.55)
Pentru (31.45, 16.55) endDist este 12.730377056474016 iar r-eps este 9.98
endDist Il apendeaza pe (31.45, 16.55) endDist 12.730377056474016
startDist Il apendeaza pe (23.15, 18.65) startDist 14.67012269887338
Before swap start end (23.15, 18.65) (31.45, 16.55) 84 130
After swap start end (31.45, 16.55) (23.15, 18.65) 84 130
p1 = (27.2, 4.55)
startIdx = 85 obj (23.2, 18.25)
endIdx = 129 obj (31.6, 17.35)
startDIST = 14.272000560538105 obj (23.2, 18.25)
endDIST = 13.535139452550906 obj (31.6, 17.35)
PRIMUL WHILE endIdx = 129 obj (31.6, 17.35) endDist 13.535139452550906
endDist Il apendeaza pe (31.6, 17.35) endDist 13.535139452550906
PRIMUL WHILE endIdx = 128 obj (31.65, 18.15) endDist 14.309524799936577
endDist Il apendeaza pe (31.65, 18.15) endDist 14.309524799936577
PRIMUL WHILE endIdx = 127 obj (31.55, 18.9) endDist 14.994832443211893
endDist Il apendeaza pe (31.55, 18.9) endDist 14.994832443211893
PRIMUL WHILE endIdx = 126 obj (31.5, 19.7) endDist 15.748412618419673
PRIMUL WHILE endIdx = 125 obj (31.35, 20.55) endDist 16.529443426806605
PRIMUL WHILE endIdx = 124 obj (31.25, 21.3) endDist 17.232672456702705
PRIMUL WHILE endIdx = 123 obj (30.9, 22.1) endDist 17.93578824585081
PRIMUL WHILE endIdx = 122 obj (30.6, 22.9) endDist 18.662328364917382
PRIMUL WHILE endIdx = 121 obj (30.4, 23.7) endDist 19.415522140802704
PRIMUL WHILE endIdx = 120 obj (29.95, 24.45) endDist 20.089113967519822
PRIMUL WHILE endIdx = 119 obj (29.5, 25.15) endDist 20.728000385951365
PRIMUL WHILE endIdx = 118 obj (28.95, 25.85) endDist 21.37176876161634
PRIMUL WHILE endIdx = 117 obj (28.3, 26.6) endDist 22.077420592089105
PRIMUL WHILE endIdx = 116 obj (27.75, 27.35) endDist 22.806632807146258
PRIMUL WHILE endIdx = 115 obj (27.15, 27.9) endDist 23.35005353312921
PRIMUL WHILE endIdx = 114 obj (26.35, 28.5) endDist 23.96507876056325
PRIMUL WHILE endIdx = 113 obj (25.6, 29.05) endDist 24.552189311749775
PRIMUL WHILE endIdx = 112 obj (24.9, 29.65) endDist 25.205158202241062
PRIMUL WHILE endIdx = 111 obj (23.95, 30.05) endDist 25.70627355335658
PRIMUL WHILE endIdx = 110 obj (23.2, 30.45) endDist 26.207060117456898
PRIMUL WHILE endIdx = 109 obj (22.25, 30.9) endDist 26.810911957633962
PRIMUL WHILE endIdx = 108 obj (21.35, 31.1) endDist 27.186853440587786
PRIMUL WHILE endIdx = 107 obj (20.35, 31.45) endDist 27.758467176701238
PRIMUL WHILE endIdx = 106 obj (19.35, 31.65) endDist 28.214047919431906
Pentru (21.5, 14.9) endDist este 11.815773355984788 iar r-eps este 9.98
endDist Il apendeaza pe (21.5, 14.9) endDist 11.815773355984788
startDist Il apendeaza pe (23.2, 18.25) startDist 14.272000560538105
Before swap start end (23.2, 18.25) (21.5, 14.9) 85 105
After swap start end (21.5, 14.9) (23.2, 18.25) 85 105
p1 = (27.2, 4.55)
startIdx = 86 obj (23.2, 18.05)
endIdx = 104 obj (21.55, 15.0)
startDIST = 14.080127840328723 obj (23.2, 18.05)
endDIST = 11.87960437051672 obj (21.55, 15.0)
Pentru (21.55, 15.0) endDist este 11.87960437051672 iar r-eps este 9.98
endDist Il apendeaza pe (21.55, 15.0) endDist 11.87960437051672
startDist Il apendeaza pe (23.2, 18.05) startDist 14.080127840328723
Before swap start end (23.2, 18.05) (21.55, 15.0) 86 104
After swap start end (21.55, 15.0) (23.2, 18.05) 86 104
p1 = (27.2, 4.55)
startIdx = 87 obj (23.2, 17.8)
endIdx = 103 obj (21.65, 15.05)
startDIST = 13.840610535666409 obj (23.2, 17.8)
endDIST = 11.87655253009054 obj (21.65, 15.05)
Pentru (21.65, 15.05) endDist este 11.87655253009054 iar r-eps este 9.98
endDist Il apendeaza pe (21.65, 15.05) endDist 11.87655253009054
startDist Il apendeaza pe (23.2, 17.8) startDist 13.840610535666409
Before swap start end (23.2, 17.8) (21.65, 15.05) 87 103
After swap start end (21.65, 15.05) (23.2, 17.8) 87 103
p1 = (27.2, 4.55)
startIdx = 88 obj (23.1, 17.45)
endIdx = 102 obj (21.75, 15.15)
startDIST = 13.535878250043472 obj (23.1, 17.45)
endDIST = 11.918997441060219 obj (21.75, 15.15)
Pentru (21.75, 15.15) endDist este 11.918997441060219 iar r-eps este 9.98
endDist Il apendeaza pe (21.75, 15.15) endDist 11.918997441060219
startDist Il apendeaza pe (23.1, 17.45) startDist 13.535878250043472
Before swap start end (23.1, 17.45) (21.75, 15.15) 88 102
After swap start end (21.75, 15.15) (23.1, 17.45) 88 102
p1 = (27.2, 4.55)
startIdx = 89 obj (23.05, 17.15)
endIdx = 101 obj (21.85, 15.25)
startDIST = 13.265839588959302 obj (23.05, 17.15)
endDIST = 11.962963679623874 obj (21.85, 15.25)
Pentru (21.85, 15.25) endDist este 11.962963679623874 iar r-eps este 9.98
endDist Il apendeaza pe (21.85, 15.25) endDist 11.962963679623874
startDist Il apendeaza pe (23.05, 17.15) startDist 13.265839588959302
Before swap start end (23.05, 17.15) (21.85, 15.25) 89 101
After swap start end (21.85, 15.25) (23.05, 17.15) 89 101
p1 = (27.2, 4.55)
startIdx = 90 obj (22.9, 16.9)
endIdx = 100 obj (21.9, 15.3)
startDIST = 13.077174771333446 obj (22.9, 16.9)
endDIST = 11.985512087516328 obj (21.9, 15.3)
Pentru (21.9, 15.3) endDist este 11.985512087516328 iar r-eps este 9.98
endDist Il apendeaza pe (21.9, 15.3) endDist 11.985512087516328
startDist Il apendeaza pe (22.9, 16.9) startDist 13.077174771333446
Before swap start end (22.9, 16.9) (21.9, 15.3) 90 100
After swap start end (21.9, 15.3) (22.9, 16.9) 90 100
p1 = (27.2, 4.55)
startIdx = 91 obj (22.85, 16.6)
endIdx = 99 obj (22.0, 15.4)
startDIST = 12.811127975318957 obj (22.85, 16.6)
endDIST = 12.031728886573202 obj (22.0, 15.4)
Pentru (22.0, 15.4) endDist este 12.031728886573202 iar r-eps este 9.98
endDist Il apendeaza pe (22.0, 15.4) endDist 12.031728886573202
startDist Il apendeaza pe (22.85, 16.6) startDist 12.811127975318957
Before swap start end (22.85, 16.6) (22.0, 15.4) 91 99
After swap start end (22.0, 15.4) (22.85, 16.6) 91 99
p1 = (27.2, 4.55)
startIdx = 92 obj (22.7, 16.4)
endIdx = 98 obj (22.15, 15.55)
startDIST = 12.675665662993797 obj (22.7, 16.4)
endDIST = 12.103821710517716 obj (22.15, 15.55)
AL DOILEA WHILE startIdx = 92 obj (22.7, 16.4) start 12.675665662993797
startDist Il apendeaza pe (22.7, 16.4) endDist 12.675665662993797
AL DOILEA WHILE startIdx = 93 obj (22.6, 16.2) start 12.525274448090945
startDist Il apendeaza pe (22.6, 16.2) endDist 12.525274448090945
AL DOILEA WHILE startIdx = 94 obj (22.55, 16.05) start 12.404535460870754
startDist Il apendeaza pe (22.55, 16.05) endDist 12.404535460870754
AL DOILEA WHILE startIdx = 95 obj (22.4, 15.95) start 12.36931687685298
startDist Il apendeaza pe (22.4, 15.95) endDist 12.36931687685298
AL DOILEA WHILE startIdx = 96 obj (22.35, 15.8) start 12.250918332925087
startDist Il apendeaza pe (22.35, 15.8) endDist 12.250918332925087
AL DOILEA WHILE startIdx = 97 obj (22.2, 15.65) start 12.174152947946729
startDist Il apendeaza pe (22.2, 15.65) endDist 12.174152947946729
sunt egale 98 98
========================= WIN L ===================
[(17.3, 3.25), (16.55, 3.5), (15.7, 3.7), (14.85, 4.1), (17.0, 12.05), (17.2, 11.95), (17.5, 11.7), (17.85, 11.5), (18.15, 11.35), (18.45, 11.25), (18.85, 11.1), (19.15, 11.05), (19.55, 11.0), (26.55, 14.85), (26.75, 15.35), (27.0, 15.9), (27.0, 16.4), (27.15, 16.9), (15.4, 8.35), (15.8, 8.05), (16.35, 7.8), (16.9, 7.6), (17.5, 7.35), (30.9, 14.35), (31.15, 15.05), (31.3, 15.8), (31.45, 16.55), (21.5, 14.9), (21.55, 15.0), (21.65, 15.05), (21.75, 15.15), (21.85, 15.25), (21.9, 15.3), (22.0, 15.4), (22.7, 16.4), (22.6, 16.2), (22.55, 16.05), (22.4, 15.95), (22.35, 15.8), (22.2, 15.65), (22.15, 15.55)]
========================= WIN L END ===================
========================= WIN G ===================
[(15.65, 14.6), (15.65, 14.5), (15.65, 14.25), (15.65, 14.05), (15.75, 13.85), (15.8, 13.65), (15.8, 13.5), (15.9, 13.4), (15.95, 13.25), (16.0, 13.1), (16.15, 12.95), (16.2, 12.8), (16.35, 12.7), (16.5, 12.5), (16.65, 12.35), (16.75, 12.2), (14.15, 4.4), (13.4, 4.75), (12.7, 5.2), (12.05, 5.65), (27.3, 17.4), (27.4, 18.0), (27.35, 18.45), (27.35, 19.1), (27.15, 19.6), (12.95, 10.55), (13.25, 10.1), (13.6, 9.65), (13.95, 9.3), (14.45, 8.9), (14.9, 8.7), (23.0, 19.35), (23.1, 19.0), (23.15, 18.65), (31.6, 17.35), (31.65, 18.15), (31.55, 18.9), (23.2, 18.25), (23.2, 18.05), (23.2, 17.8), (23.1, 17.45), (23.05, 17.15), (22.9, 16.9), (22.85, 16.6)]
========================= WIN G END ===================
========================= OBJS first half ===================
[(31.95, 7.95), (31.15, 7.3), (30.45, 6.65), (29.7, 6.0), (28.9, 5.55), (28.05, 5.0), (27.2, 4.55), (26.35, 4.15), (25.4, 3.85), (24.6, 3.6), (23.6, 3.3), (22.75, 3.15), (21.85, 3.05), (20.9, 3.0), (20.0, 2.9), (19.1, 3.0), (18.2, 3.2), (17.3, 3.25), (16.55, 3.5), (15.7, 3.7), (14.85, 4.1), (17.0, 12.05), (17.2, 11.95), (17.5, 11.7), (17.85, 11.5), (18.15, 11.35), (18.45, 11.25), (18.85, 11.1), (19.15, 11.05), (19.55, 11.0), (19.95, 11.0), (20.35, 10.95), (20.7, 10.95), (21.1, 11.0), (21.45, 11.05), (21.9, 11.1), (22.3, 11.3), (22.75, 11.4), (23.2, 11.65), (23.55, 11.85), (24.05, 12.2), (24.4, 12.45), (24.8, 12.7), (25.05, 12.95), (25.35, 13.3), (25.75, 13.7), (25.95, 14.1), (26.3, 14.45), (26.55, 14.85), (26.75, 15.35), (27.0, 15.9), (27.0, 16.4), (27.15, 16.9), (15.4, 8.35), (15.8, 8.05), (16.35, 7.8), (16.9, 7.6), (17.5, 7.35), (18.05, 7.25), (18.75, 7.1), (19.25, 7.05), (19.9, 6.95), (20.5, 7.0), (21.25, 7.05), (21.9, 7.1), (22.5, 7.3), (23.15, 7.4), (23.9, 7.65), (24.5, 7.75), (25.15, 8.05), (25.7, 8.4), (26.25, 8.8), (26.9, 9.1), (27.55, 9.65), (28.0, 10.1), (28.5, 10.6), (29.0, 11.15), (29.5, 11.75), (29.9, 12.3), (30.3, 13.0), (30.6, 13.65), (30.9, 14.35), (31.15, 15.05), (31.3, 15.8), (31.45, 16.55), (21.5, 14.9), (21.55, 15.0), (21.65, 15.05), (21.75, 15.15), (21.85, 15.25), (21.9, 15.3), (22.0, 15.4), (22.7, 16.4), (22.6, 16.2), (22.55, 16.05), (22.4, 15.95), (22.35, 15.8), (22.2, 15.65)]
========================= OBJS first half END ===================
========================= OBJS last half ===================
[(22.15, 15.55), (22.85, 16.6), (22.9, 16.9), (23.05, 17.15), (23.1, 17.45), (23.2, 17.8), (23.2, 18.05), (23.2, 18.25), (19.35, 31.65), (20.35, 31.45), (21.35, 31.1), (22.25, 30.9), (23.2, 30.45), (23.95, 30.05), (24.9, 29.65), (25.6, 29.05), (26.35, 28.5), (27.15, 27.9), (27.75, 27.35), (28.3, 26.6), (28.95, 25.85), (29.5, 25.15), (29.95, 24.45), (30.4, 23.7), (30.6, 22.9), (30.9, 22.1), (31.25, 21.3), (31.35, 20.55), (31.5, 19.7), (31.55, 18.9), (31.65, 18.15), (31.6, 17.35), (23.15, 18.65), (23.1, 19.0), (23.0, 19.35), (22.9, 19.65), (22.75, 20.05), (22.65, 20.35), (22.5, 20.7), (22.25, 21.0), (22.0, 21.25), (21.75, 21.55), (21.45, 21.95), (21.0, 22.15), (20.7, 22.55), (20.4, 22.7), (20.0, 22.95), (19.6, 23.15), (19.1, 23.35), (18.65, 23.5), (18.2, 23.6), (17.75, 23.75), (17.15, 23.75), (16.7, 23.8), (16.15, 23.85), (15.7, 23.75), (15.1, 23.75), (14.55, 23.6), (14.0, 23.55), (13.45, 23.4), (13.05, 23.2), (12.55, 23.0), (11.95, 22.7), (11.55, 22.45), (14.9, 8.7), (14.45, 8.9), (13.95, 9.3), (13.6, 9.65), (13.25, 10.1), (12.95, 10.55), (12.65, 10.9), (12.35, 11.4), (12.2, 11.75), (11.95, 12.2), (11.8, 12.65), (11.75, 13.05), (11.55, 13.6), (11.55, 14.0), (11.55, 14.35), (11.55, 14.7), (11.6, 15.25), (11.65, 15.7), (11.8, 16.05), (11.85, 16.5), (12.0, 16.75), (12.15, 17.2), (12.3, 17.6), (12.55, 17.85), (12.8, 18.05), (13.1, 18.4), (13.3, 18.6), (13.55, 18.85), (13.8, 19.05), (14.15, 19.25), (14.45, 19.5), (14.85, 19.55), (15.0, 19.7), (15.25, 19.7), (15.55, 19.85), (15.95, 19.9), (16.2, 19.9), (16.55, 19.9), (16.85, 19.9), (17.2, 19.9), (17.4, 19.8), (17.65, 19.75), (17.8, 19.7), (18.0, 19.6), (18.2, 19.55), (3.9, 9.6), (3.55, 10.65), (3.35, 11.4), (3.1, 12.35), (3.1, 13.25), (3.05, 14.15), (3.0, 15.1), (3.1, 16.0), (3.2, 16.85), (3.45, 17.75), (3.7, 18.7), (3.95, 19.55), (4.35, 20.25), (4.7, 21.1), (5.15, 21.8), (5.6, 22.5), (6.2, 23.3), (6.8, 23.85), (7.35, 24.45), (8.05, 24.95), (8.8, 25.45), (9.5, 26.0), (10.2, 26.35), (10.9, 26.75), (11.7, 27.0), (12.45, 27.25), (13.3, 27.6), (14.05, 27.6), (14.7, 27.75), (15.55, 27.75), (16.4, 27.75), (17.1, 27.75), (17.9, 27.75), (18.55, 27.7), (19.35, 27.6), (20.1, 27.35), (20.7, 27.1), (21.45, 26.8), (22.05, 26.5), (22.7, 26.15), (23.35, 25.65), (23.8, 25.3), (24.3, 24.85), (24.75, 24.35), (25.25, 23.95), (25.65, 23.45), (26.05, 23.0), (26.2, 22.3), (26.6, 21.8), (26.75, 21.25), (27.0, 20.7), (27.15, 20.15), (27.15, 19.6), (27.35, 19.1), (27.35, 18.45), (27.4, 18.0), (27.3, 17.4), (11.1, 22.15), (10.6, 21.65), (10.2, 21.25), (9.65, 20.8), (9.3, 20.3), (8.9, 19.85), (8.65, 19.3), (8.3, 18.75), (8.05, 18.15), (7.8, 17.55), (7.7, 16.95), (7.55, 16.35), (7.35, 15.75), (7.35, 14.95), (7.3, 14.35), (7.35, 13.75), (7.45, 13.0), (7.55, 12.35), (7.75, 11.7), (7.95, 10.95), (8.15, 10.35), (8.55, 9.65), (8.9, 9.05), (9.35, 8.35), (9.7, 7.85), (10.3, 7.25), (10.9, 6.65), (11.45, 6.15), (12.05, 5.65), (12.7, 5.2), (13.4, 4.75), (14.15, 4.4), (16.75, 12.2), (16.65, 12.35), (16.5, 12.5), (16.35, 12.7), (16.2, 12.8), (16.15, 12.95), (16.0, 13.1), (15.95, 13.25), (15.9, 13.4), (15.8, 13.5), (15.8, 13.65), (15.75, 13.85), (15.65, 14.05), (15.65, 14.25), (15.65, 14.5), (15.65, 14.6)]
========================= OBJS last half END ===================
Intra in win
win len(objs), len(objs1), len(objs2), constSmallNumber 85 | [(17.3, 3.25), (16.55, 3.5), (15.7, 3.7), (14.85, 4.1), (17.0, 12.05), (17.2, 11.95), (17.5, 11.7), (17.85, 11.5), (18.15, 11.35), (18.45, 11.25), (18.85, 11.1), (19.15, 11.05), (19.55, 11.0), (26.55, 14.85), (26.75, 15.35), (27.0, 15.9), (27.0, 16.4), (27.15, 16.9), (15.4, 8.35), (15.8, 8.05), (16.35, 7.8), (16.9, 7.6), (17.5, 7.35), (30.9, 14.35), (31.15, 15.05), (31.3, 15.8), (31.45, 16.55), (21.5, 14.9), (21.55, 15.0), (21.65, 15.05), (21.75, 15.15), (21.85, 15.25), (21.9, 15.3), (22.0, 15.4), (22.7, 16.4), (22.6, 16.2), (22.55, 16.05), (22.4, 15.95), (22.35, 15.8), (22.2, 15.65), (22.15, 15.55)] | [(15.65, 14.6), (15.65, 14.5), (15.65, 14.25), (15.65, 14.05), (15.75, 13.85), (15.8, 13.65), (15.8, 13.5), (15.9, 13.4), (15.95, 13.25), (16.0, 13.1), (16.15, 12.95), (16.2, 12.8), (16.35, 12.7), (16.5, 12.5), (16.65, 12.35), (16.75, 12.2), (14.15, 4.4), (13.4, 4.75), (12.7, 5.2), (12.05, 5.65), (27.3, 17.4), (27.4, 18.0), (27.35, 18.45), (27.35, 19.1), (27.15, 19.6), (12.95, 10.55), (13.25, 10.1), (13.6, 9.65), (13.95, 9.3), (14.45, 8.9), (14.9, 8.7), (23.0, 19.35), (23.1, 19.0), (23.15, 18.65), (31.6, 17.35), (31.65, 18.15), (31.55, 18.9), (23.2, 18.25), (23.2, 18.05), (23.2, 17.8), (23.1, 17.45), (23.05, 17.15), (22.9, 16.9), (22.85, 16.6)] | 10
p1 = (27.0, 15.9) len objs = 41
r is 7.37
new r is 7.37
p1 = (27.0, 15.9)
startIdx = 0 obj (17.3, 3.25)
endIdx = 40 obj (22.15, 15.55)
startDIST = 15.940906498690719 obj (17.3, 3.25)
endDIST = 4.862612466565685 obj (22.15, 15.55)
Pentru (22.15, 15.55) endDist este 4.862612466565685 iar r-eps este 4.57
endDist Il apendeaza pe (22.15, 15.55) endDist 4.862612466565685
Before swap start end (17.3, 3.25) (22.15, 15.55) 0 40
After swap start end (22.15, 15.55) (17.3, 3.25) 0 40
p1 = (27.0, 15.9)
startIdx = 1 obj (16.55, 3.5)
endIdx = 39 obj (22.2, 15.65)
startDIST = 16.21611852448051 obj (16.55, 3.5)
endDIST = 4.806506007486104 obj (22.2, 15.65)
Pentru (22.2, 15.65) endDist este 4.806506007486104 iar r-eps este 4.57
endDist Il apendeaza pe (22.2, 15.65) endDist 4.806506007486104
Before swap start end (16.55, 3.5) (22.2, 15.65) 1 39
After swap start end (22.2, 15.65) (16.55, 3.5) 1 39
p1 = (27.0, 15.9)
startIdx = 2 obj (15.7, 3.7)
endIdx = 38 obj (22.35, 15.8)
startDIST = 16.629191201017566 obj (15.7, 3.7)
endDIST = 4.651075144523037 obj (22.35, 15.8)
Pentru (22.35, 15.8) endDist este 4.651075144523037 iar r-eps este 4.57
endDist Il apendeaza pe (22.35, 15.8) endDist 4.651075144523037
Before swap start end (15.7, 3.7) (22.35, 15.8) 2 38
After swap start end (22.35, 15.8) (15.7, 3.7) 2 38
p1 = (27.0, 15.9)
startIdx = 3 obj (14.85, 4.1)
endIdx = 37 obj (22.4, 15.95)
startDIST = 16.93701567573225 obj (14.85, 4.1)
endDIST = 4.6002717311045895 obj (22.4, 15.95)
Pentru (22.4, 15.95) endDist este 4.6002717311045895 iar r-eps este 4.57
endDist Il apendeaza pe (22.4, 15.95) endDist 4.6002717311045895
Before swap start end (14.85, 4.1) (22.4, 15.95) 3 37
After swap start end (22.4, 15.95) (14.85, 4.1) 3 37
p1 = (27.0, 15.9)
startIdx = 4 obj (17.0, 12.05)
endIdx = 36 obj (22.55, 16.05)
startDIST = 10.715526118674715 obj (17.0, 12.05)
endDIST = 4.452527372178636 obj (22.55, 16.05)
Pentru (22.55, 16.05) endDist este 4.452527372178636 iar r-eps este 4.57
Before swap start end (17.0, 12.05) (22.55, 16.05) 4 36
After swap start end (22.55, 16.05) (17.0, 12.05) 4 36
p1 = (27.0, 15.9)
startIdx = 5 obj (17.2, 11.95)
endIdx = 35 obj (22.6, 16.2)
startDIST = 10.566101457018101 obj (17.2, 11.95)
endDIST = 4.410215414239988 obj (22.6, 16.2)
Pentru (22.6, 16.2) endDist este 4.410215414239988 iar r-eps este 4.57
Before swap start end (17.2, 11.95) (22.6, 16.2) 5 35
After swap start end (22.6, 16.2) (17.2, 11.95) 5 35
p1 = (27.0, 15.9)
startIdx = 6 obj (17.5, 11.7)
endIdx = 34 obj (22.7, 16.4)
startDIST = 10.387011119662866 obj (17.5, 11.7)
endDIST = 4.328972164382673 obj (22.7, 16.4)
Pentru (22.7, 16.4) endDist este 4.328972164382673 iar r-eps este 4.57
Before swap start end (17.5, 11.7) (22.7, 16.4) 6 34
After swap start end (22.7, 16.4) (17.5, 11.7) 6 34
p1 = (27.0, 15.9)
startIdx = 7 obj (17.85, 11.5)
endIdx = 33 obj (22.0, 15.4)
startDIST = 10.152955234807251 obj (17.85, 11.5)
endDIST = 5.024937810560445 obj (22.0, 15.4)
Pentru (22.0, 15.4) endDist este 5.024937810560445 iar r-eps este 4.57
endDist Il apendeaza pe (22.0, 15.4) endDist 5.024937810560445
startDist Il apendeaza pe (17.85, 11.5) startDist 10.152955234807251
Before swap start end (17.85, 11.5) (22.0, 15.4) 7 33
After swap start end (22.0, 15.4) (17.85, 11.5) 7 33
p1 = (27.0, 15.9)
startIdx = 8 obj (18.15, 11.35)
endIdx = 32 obj (21.9, 15.3)
startDIST = 9.95113058903359 obj (18.15, 11.35)
endDIST = 5.135172830587108 obj (21.9, 15.3)
Pentru (21.9, 15.3) endDist este 5.135172830587108 iar r-eps este 4.57
endDist Il apendeaza pe (21.9, 15.3) endDist 5.135172830587108
startDist Il apendeaza pe (18.15, 11.35) startDist 9.95113058903359
Before swap start end (18.15, 11.35) (21.9, 15.3) 8 32
After swap start end (21.9, 15.3) (18.15, 11.35) 8 32
p1 = (27.0, 15.9)
startIdx = 9 obj (18.45, 11.25)
endIdx = 31 obj (21.85, 15.25)
startDIST = 9.732676918505001 obj (18.45, 11.25)
endDIST = 5.190857347298227 obj (21.85, 15.25)
Pentru (21.85, 15.25) endDist este 5.190857347298227 iar r-eps este 4.57
endDist Il apendeaza pe (21.85, 15.25) endDist 5.190857347298227
startDist Il apendeaza pe (18.45, 11.25) startDist 9.732676918505001
Before swap start end (18.45, 11.25) (21.85, 15.25) 9 31
After swap start end (21.85, 15.25) (18.45, 11.25) 9 31
p1 = (27.0, 15.9)
startIdx = 10 obj (18.85, 11.1)
endIdx = 30 obj (21.75, 15.15)
startDIST = 9.458461819978975 obj (18.85, 11.1)
endDIST = 5.303300858899107 obj (21.75, 15.15)
Pentru (21.75, 15.15) endDist este 5.303300858899107 iar r-eps este 4.57
endDist Il apendeaza pe (21.75, 15.15) endDist 5.303300858899107
startDist Il apendeaza pe (18.85, 11.1) startDist 9.458461819978975
Before swap start end (18.85, 11.1) (21.75, 15.15) 10 30
After swap start end (21.75, 15.15) (18.85, 11.1) 10 30
p1 = (27.0, 15.9)
startIdx = 11 obj (19.15, 11.05)
endIdx = 29 obj (21.65, 15.05)
startDIST = 9.227404835597062 obj (19.15, 11.05)
endDIST = 5.417102546564909 obj (21.65, 15.05)
Pentru (21.65, 15.05) endDist este 5.417102546564909 iar r-eps este 4.57
endDist Il apendeaza pe (21.65, 15.05) endDist 5.417102546564909
startDist Il apendeaza pe (19.15, 11.05) startDist 9.227404835597062
Before swap start end (19.15, 11.05) (21.65, 15.05) 11 29
After swap start end (21.65, 15.05) (19.15, 11.05) 11 29
p1 = (27.0, 15.9)
startIdx = 12 obj (19.55, 11.0)
endIdx = 28 obj (21.55, 15.0)
startDIST = 8.916978187704622 obj (19.55, 11.0)
endDIST = 5.523812089490373 obj (21.55, 15.0)
Pentru (21.55, 15.0) endDist este 5.523812089490373 iar r-eps este 4.57
endDist Il apendeaza pe (21.55, 15.0) endDist 5.523812089490373
startDist Il apendeaza pe (19.55, 11.0) startDist 8.916978187704622
Before swap start end (19.55, 11.0) (21.55, 15.0) 12 28
After swap start end (21.55, 15.0) (19.55, 11.0) 12 28
p1 = (27.0, 15.9)
startIdx = 13 obj (26.55, 14.85)
endIdx = 27 obj (21.5, 14.9)
startDIST = 1.1423659658795866 obj (26.55, 14.85)
endDIST = 5.5901699437494745 obj (21.5, 14.9)
AL DOILEA WHILE startIdx = 13 obj (26.55, 14.85) start 1.1423659658795866
AL DOILEA WHILE startIdx = 14 obj (26.75, 15.35) start 0.6041522986797292
AL DOILEA WHILE startIdx = 15 obj (27.0, 15.9) start 0.0
AL DOILEA WHILE startIdx = 16 obj (27.0, 16.4) start 0.4999999999999982
AL DOILEA WHILE startIdx = 17 obj (27.15, 16.9) start 1.0111874208078322
Pentru (21.5, 14.9) endDist este 5.5901699437494745 iar r-eps este 4.57
endDist Il apendeaza pe (21.5, 14.9) endDist 5.5901699437494745
Before swap start end (15.4, 8.35) (21.5, 14.9) 18 27
After swap start end (21.5, 14.9) (15.4, 8.35) 18 27
p1 = (27.0, 15.9)
startIdx = 19 obj (15.8, 8.05)
endIdx = 26 obj (31.45, 16.55)
startDIST = 13.677079366589929 obj (15.8, 8.05)
endDIST = 4.497221364353771 obj (31.45, 16.55)
Pentru (31.45, 16.55) endDist este 4.497221364353771 iar r-eps este 4.57
Before swap start end (15.8, 8.05) (31.45, 16.55) 19 26
After swap start end (31.45, 16.55) (15.8, 8.05) 19 26
p1 = (27.0, 15.9)
startIdx = 20 obj (16.35, 7.8)
endIdx = 25 obj (31.3, 15.8)
startDIST = 13.380302687159212 obj (16.35, 7.8)
endDIST = 4.301162633521314 obj (31.3, 15.8)
Pentru (31.3, 15.8) endDist este 4.301162633521314 iar r-eps este 4.57
Before swap start end (16.35, 7.8) (31.3, 15.8) 20 25
After swap start end (31.3, 15.8) (16.35, 7.8) 20 25
p1 = (27.0, 15.9)
startIdx = 21 obj (16.9, 7.6)
endIdx = 24 obj (31.15, 15.05)
startDIST = 13.072872675888801 obj (16.9, 7.6)
endDIST = 4.236153915995025 obj (31.15, 15.05)
Pentru (31.15, 15.05) endDist este 4.236153915995025 iar r-eps este 4.57
Before swap start end (16.9, 7.6) (31.15, 15.05) 21 24
After swap start end (31.15, 15.05) (16.9, 7.6) 21 24
p1 = (27.0, 15.9)
startIdx = 22 obj (17.5, 7.35)
endIdx = 23 obj (30.9, 14.35)
startDIST = 12.780942844720025 obj (17.5, 7.35)
endDIST = 4.196724913548658 obj (30.9, 14.35)
Pentru (30.9, 14.35) endDist este 4.196724913548658 iar r-eps este 4.57
Before swap start end (17.5, 7.35) (30.9, 14.35) 22 23
After swap start end (30.9, 14.35) (17.5, 7.35) 22 23
========================= WIN L ===================
[(22.15, 15.55), (22.2, 15.65), (22.35, 15.8), (22.4, 15.95), (22.0, 15.4), (21.9, 15.3), (21.85, 15.25), (21.75, 15.15), (21.65, 15.05), (21.55, 15.0), (21.5, 14.9)]
========================= WIN L END ===================
========================= WIN G ===================
[(17.85, 11.5), (18.15, 11.35), (18.45, 11.25), (18.85, 11.1), (19.15, 11.05), (19.55, 11.0)]
========================= WIN G END ===================
========================= OBJS first half ===================
[(22.15, 15.55), (22.2, 15.65), (22.35, 15.8), (22.4, 15.95), (22.55, 16.05), (22.6, 16.2), (22.7, 16.4), (22.0, 15.4), (21.9, 15.3), (21.85, 15.25), (21.75, 15.15), (21.65, 15.05), (21.55, 15.0), (26.55, 14.85), (26.75, 15.35), (27.0, 15.9), (27.0, 16.4), (27.15, 16.9), (21.5, 14.9), (31.45, 16.55), (31.3, 15.8), (31.15, 15.05)]
========================= OBJS first half END ===================
========================= OBJS last half ===================
[(30.9, 14.35), (17.5, 7.35), (16.9, 7.6), (16.35, 7.8), (15.8, 8.05), (15.4, 8.35), (19.55, 11.0), (19.15, 11.05), (18.85, 11.1), (18.45, 11.25), (18.15, 11.35), (17.85, 11.5), (17.5, 11.7), (17.2, 11.95), (17.0, 12.05), (14.85, 4.1), (15.7, 3.7), (16.55, 3.5), (17.3, 3.25)]
========================= OBJS last half END ===================
p1 = (27.0, 15.9) len objs = 44
r is 8.38
new r is 8.38
p1 = (27.0, 15.9)
startIdx = 0 obj (15.65, 14.6)
endIdx = 43 obj (22.85, 16.6)
startDIST = 11.424206755832108 obj (15.65, 14.6)
endDIST = 4.208622102303792 obj (22.85, 16.6)
Pentru (22.85, 16.6) endDist este 4.208622102303792 iar r-eps este 5.580000000000001
Before swap start end (15.65, 14.6) (22.85, 16.6) 0 43
After swap start end (22.85, 16.6) (15.65, 14.6) 0 43
p1 = (27.0, 15.9)
startIdx = 1 obj (15.65, 14.5)
endIdx = 42 obj (22.9, 16.9)
startDIST = 11.436017663505071 obj (15.65, 14.5)
endDIST = 4.22018956920184 obj (22.9, 16.9)
Pentru (22.9, 16.9) endDist este 4.22018956920184 iar r-eps este 5.580000000000001
Before swap start end (15.65, 14.5) (22.9, 16.9) 1 42
After swap start end (22.9, 16.9) (15.65, 14.5) 1 42
p1 = (27.0, 15.9)
startIdx = 2 obj (15.65, 14.25)
endIdx = 41 obj (23.05, 17.15)
startDIST = 11.469306866589628 obj (15.65, 14.25)
endDIST = 4.143066497173318 obj (23.05, 17.15)
Pentru (23.05, 17.15) endDist este 4.143066497173318 iar r-eps este 5.580000000000001
Before swap start end (15.65, 14.25) (23.05, 17.15) 2 41
After swap start end (23.05, 17.15) (15.65, 14.25) 2 41
p1 = (27.0, 15.9)
startIdx = 3 obj (15.65, 14.05)
endIdx = 40 obj (23.1, 17.45)
startDIST = 11.499782606640874 obj (15.65, 14.05)
endDIST = 4.196724913548658 obj (23.1, 17.45)
Pentru (23.1, 17.45) endDist este 4.196724913548658 iar r-eps este 5.580000000000001
Before swap start end (15.65, 14.05) (23.1, 17.45) 3 40
After swap start end (23.1, 17.45) (15.65, 14.05) 3 40
p1 = (27.0, 15.9)
startIdx = 4 obj (15.75, 13.85)
endIdx = 39 obj (23.2, 17.8)
startDIST = 11.435252511422737 obj (15.75, 13.85)
endDIST = 4.248529157249601 obj (23.2, 17.8)
Pentru (23.2, 17.8) endDist este 4.248529157249601 iar r-eps este 5.580000000000001
Before swap start end (15.75, 13.85) (23.2, 17.8) 4 39
After swap start end (23.2, 17.8) (15.75, 13.85) 4 39
p1 = (27.0, 15.9)
startIdx = 5 obj (15.8, 13.65)
endIdx = 38 obj (23.2, 18.05)
startDIST = 11.423769080299198 obj (15.8, 13.65)
endDIST = 4.366062299143246 obj (23.2, 18.05)
Pentru (23.2, 18.05) endDist este 4.366062299143246 iar r-eps este 5.580000000000001
Before swap start end (15.8, 13.65) (23.2, 18.05) 5 38
After swap start end (23.2, 18.05) (15.8, 13.65) 5 38
p1 = (27.0, 15.9)
startIdx = 6 obj (15.8, 13.5)
endIdx = 37 obj (23.2, 18.25)
startDIST = 11.454256850621082 obj (15.8, 13.5)
endDIST = 4.467941360403022 obj (23.2, 18.25)
Pentru (23.2, 18.25) endDist este 4.467941360403022 iar r-eps este 5.580000000000001
Before swap start end (15.8, 13.5) (23.2, 18.25) 6 37
After swap start end (23.2, 18.25) (15.8, 13.5) 6 37
p1 = (27.0, 15.9)
startIdx = 7 obj (15.9, 13.4)
endIdx = 36 obj (31.55, 18.9)
startDIST = 11.378049041905205 obj (15.9, 13.4)
endDIST = 5.449999999999999 obj (31.55, 18.9)
Pentru (31.55, 18.9) endDist este 5.449999999999999 iar r-eps este 5.580000000000001
Before swap start end (15.9, 13.4) (31.55, 18.9) 7 36
After swap start end (31.55, 18.9) (15.9, 13.4) 7 36
p1 = (27.0, 15.9)
startIdx = 8 obj (15.95, 13.25)
endIdx = 35 obj (31.65, 18.15)
startDIST = 11.363318177363514 obj (15.95, 13.25)
endDIST = 5.165752607316768 obj (31.65, 18.15)
Pentru (31.65, 18.15) endDist este 5.165752607316768 iar r-eps este 5.580000000000001
Before swap start end (15.95, 13.25) (31.65, 18.15) 8 35
After swap start end (31.65, 18.15) (15.95, 13.25) 8 35
p1 = (27.0, 15.9)
startIdx = 9 obj (16.0, 13.1)
endIdx = 34 obj (31.6, 17.35)
startDIST = 11.35077089893017 obj (16.0, 13.1)
endDIST = 4.823121395942675 obj (31.6, 17.35)
Pentru (31.6, 17.35) endDist este 4.823121395942675 iar r-eps este 5.580000000000001
Before swap start end (16.0, 13.1) (31.6, 17.35) 9 34
After swap start end (31.6, 17.35) (16.0, 13.1) 9 34
p1 = (27.0, 15.9)
startIdx = 10 obj (16.15, 12.95)
endIdx = 33 obj (23.15, 18.65)
startDIST = 11.243887228178696 obj (16.15, 12.95)
endDIST = 4.7312788968734445 obj (23.15, 18.65)
Pentru (23.15, 18.65) endDist este 4.7312788968734445 iar r-eps este 5.580000000000001
Before swap start end (16.15, 12.95) (23.15, 18.65) 10 33
After swap start end (23.15, 18.65) (16.15, 12.95) 10 33
p1 = (27.0, 15.9)
startIdx = 11 obj (16.2, 12.8)
endIdx = 32 obj (23.1, 19.0)
startDIST = 11.236102527122117 obj (16.2, 12.8)
endDIST = 4.9819674828324585 obj (23.1, 19.0)
Pentru (23.1, 19.0) endDist este 4.9819674828324585 iar r-eps este 5.580000000000001
Before swap start end (16.2, 12.8) (23.1, 19.0) 11 32
After swap start end (23.1, 19.0) (16.2, 12.8) 11 32
p1 = (27.0, 15.9)
startIdx = 12 obj (16.35, 12.7)
endIdx = 31 obj (23.0, 19.35)
startDIST = 11.120364202668902 obj (16.35, 12.7)
endDIST = 5.282281703960894 obj (23.0, 19.35)
Pentru (23.0, 19.35) endDist este 5.282281703960894 iar r-eps este 5.580000000000001
startDist Il apendeaza pe (16.35, 12.7) startDist 11.120364202668902
Before swap start end (16.35, 12.7) (23.0, 19.35) 12 31
After swap start end (23.0, 19.35) (16.35, 12.7) 12 31
p1 = (27.0, 15.9)
startIdx = 13 obj (16.5, 12.5)
endIdx = 30 obj (14.9, 8.7)
startDIST = 11.03675676999362 obj (16.5, 12.5)
endDIST = 14.080127840328723 obj (14.9, 8.7)
PRIMUL WHILE endIdx = 30 obj (14.9, 8.7) endDist 14.080127840328723
PRIMUL WHILE endIdx = 29 obj (14.45, 8.9) endDist 14.370194849061722
PRIMUL WHILE endIdx = 28 obj (13.95, 9.3) endDist 14.624038429927625
PRIMUL WHILE endIdx = 27 obj (13.6, 9.65) endDist 14.785888542796473
PRIMUL WHILE endIdx = 26 obj (13.25, 10.1) endDist 14.923220161881952
PRIMUL WHILE endIdx = 25 obj (12.95, 10.55) endDist 15.034127843011047
Pentru (27.15, 19.6) endDist este 3.703039292257106 iar r-eps este 5.580000000000001
startDist Il apendeaza pe (16.5, 12.5) startDist 11.03675676999362
Before swap start end (16.5, 12.5) (27.15, 19.6) 13 24
After swap start end (27.15, 19.6) (16.5, 12.5) 13 24
p1 = (27.0, 15.9)
startIdx = 14 obj (16.65, 12.35)
endIdx = 23 obj (27.35, 19.1)
startDIST = 10.94189197533955 obj (16.65, 12.35)
endDIST = 3.2190837205639755 obj (27.35, 19.1)
Pentru (27.35, 19.1) endDist este 3.2190837205639755 iar r-eps este 5.580000000000001
startDist Il apendeaza pe (16.65, 12.35) startDist 10.94189197533955
Before swap start end (16.65, 12.35) (27.35, 19.1) 14 23
After swap start end (27.35, 19.1) (16.65, 12.35) 14 23
p1 = (27.0, 15.9)
startIdx = 15 obj (16.75, 12.2)
endIdx = 22 obj (27.35, 18.45)
startDIST = 10.897362066114901 obj (16.75, 12.2)
endDIST = 2.5739075352467493 obj (27.35, 18.45)
Pentru (27.35, 18.45) endDist este 2.5739075352467493 iar r-eps este 5.580000000000001
startDist Il apendeaza pe (16.75, 12.2) startDist 10.897362066114901
Before swap start end (16.75, 12.2) (27.35, 18.45) 15 22
After swap start end (27.35, 18.45) (16.75, 12.2) 15 22
p1 = (27.0, 15.9)
startIdx = 16 obj (14.15, 4.4)
endIdx = 21 obj (27.4, 18.0)
startDIST = 17.244491874218852 obj (14.15, 4.4)
endDIST = 2.1377558326431942 obj (27.4, 18.0)
Pentru (27.4, 18.0) endDist este 2.1377558326431942 iar r-eps este 5.580000000000001
Before swap start end (14.15, 4.4) (27.4, 18.0) 16 21
After swap start end (27.4, 18.0) (14.15, 4.4) 16 21
p1 = (27.0, 15.9)
startIdx = 17 obj (13.4, 4.75)
endIdx = 20 obj (27.3, 17.4)
startDIST = 17.5864294272601 obj (13.4, 4.75)
endDIST = 1.5297058540778339 obj (27.3, 17.4)
Pentru (27.3, 17.4) endDist este 1.5297058540778339 iar r-eps este 5.580000000000001
Before swap start end (13.4, 4.75) (27.3, 17.4) 17 20
After swap start end (27.3, 17.4) (13.4, 4.75) 17 20
p1 = (27.0, 15.9)
startIdx = 18 obj (12.7, 5.2)
endIdx = 19 obj (12.05, 5.65)
startDIST = 17.860011198204777 obj (12.7, 5.2)
endDIST = 18.12636201779055 obj (12.05, 5.65)
PRIMUL WHILE endIdx = 19 obj (12.05, 5.65) endDist 18.12636201779055
sunt egale 18 18
========================= WIN L ===================
[]
========================= WIN L END ===================
========================= WIN G ===================
[(16.35, 12.7), (16.5, 12.5), (16.65, 12.35), (16.75, 12.2)]
========================= WIN G END ===================
========================= OBJS first half ===================
[(22.85, 16.6), (22.9, 16.9), (23.05, 17.15), (23.1, 17.45), (23.2, 17.8), (23.2, 18.05), (23.2, 18.25), (31.55, 18.9), (31.65, 18.15), (31.6, 17.35), (23.15, 18.65), (23.1, 19.0), (23.0, 19.35), (27.15, 19.6), (27.35, 19.1), (27.35, 18.45), (27.4, 18.0)]
========================= OBJS first half END ===================
========================= OBJS last half ===================
[(27.3, 17.4), (12.7, 5.2), (12.05, 5.65), (13.4, 4.75), (14.15, 4.4), (16.75, 12.2), (16.65, 12.35), (16.5, 12.5), (12.95, 10.55), (13.25, 10.1), (13.6, 9.65), (13.95, 9.3), (14.45, 8.9), (14.9, 8.7), (16.35, 12.7), (16.2, 12.8), (16.15, 12.95), (16.0, 13.1), (15.95, 13.25), (15.9, 13.4), (15.8, 13.5), (15.8, 13.65), (15.75, 13.85), (15.65, 14.05), (15.65, 14.25), (15.65, 14.5), (15.65, 14.6)]
========================= OBJS last half END ===================
nested loop vine din 
nested loop objs1, objs2 [(22.15, 15.55), (22.2, 15.65), (22.35, 15.8), (22.4, 15.95), (22.0, 15.4), (21.9, 15.3), (21.85, 15.25), (21.75, 15.15), (21.65, 15.05), (21.55, 15.0), (21.5, 14.9)][(16.35, 12.7), (16.5, 12.5), (16.65, 12.35), (16.75, 12.2)]
nested loop vine din 
nested loop objs1, objs2 [(17.85, 11.5), (18.15, 11.35), (18.45, 11.25), (18.85, 11.1), (19.15, 11.05), (19.55, 11.0)][]
nested loop vine din 
nested loop objs1, objs2 [(22.15, 15.55), (22.2, 15.65), (22.35, 15.8), (22.4, 15.95), (22.55, 16.05), (22.6, 16.2), (22.7, 16.4), (22.0, 15.4), (21.9, 15.3), (21.85, 15.25), (21.75, 15.15), (21.65, 15.05), (21.55, 15.0), (26.55, 14.85), (26.75, 15.35), (27.0, 15.9), (27.0, 16.4), (27.15, 16.9), (21.5, 14.9), (31.45, 16.55), (31.3, 15.8), (31.15, 15.05), (30.9, 14.35)][(22.85, 16.6), (22.9, 16.9), (23.05, 17.15), (23.1, 17.45), (23.2, 17.8), (23.2, 18.05), (23.2, 18.25), (31.55, 18.9), (31.65, 18.15), (31.6, 17.35), (23.15, 18.65), (23.1, 19.0), (23.0, 19.35), (27.15, 19.6), (27.35, 19.1), (27.35, 18.45), (27.4, 18.0), (27.3, 17.4)]
nested loop vine din 
nested loop objs1, objs2 [(17.5, 7.35), (16.9, 7.6), (16.35, 7.8), (15.8, 8.05), (15.4, 8.35), (19.55, 11.0), (19.15, 11.05), (18.85, 11.1), (18.45, 11.25), (18.15, 11.35), (17.85, 11.5), (17.5, 11.7), (17.2, 11.95), (17.0, 12.05), (14.85, 4.1), (15.7, 3.7), (16.55, 3.5), (17.3, 3.25)][(12.7, 5.2), (12.05, 5.65), (13.4, 4.75), (14.15, 4.4), (16.75, 12.2), (16.65, 12.35), (16.5, 12.5), (12.95, 10.55), (13.25, 10.1), (13.6, 9.65), (13.95, 9.3), (14.45, 8.9), (14.9, 8.7), (16.35, 12.7), (16.2, 12.8), (16.15, 12.95), (16.0, 13.1), (15.95, 13.25), (15.9, 13.4), (15.8, 13.5), (15.8, 13.65), (15.75, 13.85), (15.65, 14.05), (15.65, 14.25), (15.65, 14.5), (15.65, 14.6)]
quick len(objs), constSmallNumber 99 10
p1 = (14.85, 4.1) len objs = 99
r is 7.7
new r is 7.7
p1 = (14.85, 4.1)
startIdx = 0 obj (31.95, 7.95)
endIdx = 98 obj (22.15, 15.55)
startDIST = 17.528048950182676 obj (31.95, 7.95)
endDIST = 13.579120000942623 obj (22.15, 15.55)
PRIMUL WHILE endIdx = 98 obj (22.15, 15.55) endDist 13.579120000942623
PRIMUL WHILE endIdx = 97 obj (22.2, 15.65) endDist 13.690325050925562
PRIMUL WHILE endIdx = 96 obj (22.35, 15.8) endDist 13.897481786280565
PRIMUL WHILE endIdx = 95 obj (22.4, 15.95) endDist 14.050800688928726
PRIMUL WHILE endIdx = 94 obj (22.55, 16.05) endDist 14.21592416974711
PRIMUL WHILE endIdx = 93 obj (22.6, 16.2) endDist 14.369150983965616
PRIMUL WHILE endIdx = 92 obj (22.7, 16.4) endDist 14.591521510795232
PRIMUL WHILE endIdx = 91 obj (22.0, 15.4) endDist 13.372079120316332
PRIMUL WHILE endIdx = 90 obj (21.9, 15.3) endDist 13.234141453075074
PRIMUL WHILE endIdx = 89 obj (21.85, 15.25) endDist 13.165200340291069
PRIMUL WHILE endIdx = 88 obj (21.75, 15.15) endDist 13.02737502338825
PRIMUL WHILE endIdx = 87 obj (21.65, 15.05) endDist 12.889627612929708
PRIMUL WHILE endIdx = 86 obj (21.55, 15.0) endDist 12.794530081249565
PRIMUL WHILE endIdx = 85 obj (21.5, 14.9) endDist 12.683158124063581
PRIMUL WHILE endIdx = 84 obj (31.45, 16.55) endDist 20.750000000000004
PRIMUL WHILE endIdx = 83 obj (31.3, 15.8) endDist 20.186443470804857
PRIMUL WHILE endIdx = 82 obj (31.15, 15.05) endDist 19.636509363937368
PRIMUL WHILE endIdx = 81 obj (30.9, 14.35) endDist 19.04376538397803
PRIMUL WHILE endIdx = 80 obj (30.6, 13.65) endDist 18.419147645860274
PRIMUL WHILE endIdx = 79 obj (30.3, 13.0) endDist 17.830100953163445
PRIMUL WHILE endIdx = 78 obj (29.9, 12.3) endDist 17.138917702118768
PRIMUL WHILE endIdx = 77 obj (29.5, 11.75) endDist 16.527098958982485
PRIMUL WHILE endIdx = 76 obj (29.0, 11.15) endDist 15.809016414691966
PRIMUL WHILE endIdx = 75 obj (28.5, 10.6) endDist 15.11861435449691
PRIMUL WHILE endIdx = 74 obj (28.0, 10.1) endDist 14.45415165272594
PRIMUL WHILE endIdx = 73 obj (27.55, 9.65) endDist 13.859743864877158
PRIMUL WHILE endIdx = 72 obj (26.9, 9.1) endDist 13.046168019767336
PRIMUL WHILE endIdx = 71 obj (26.25, 8.8) endDist 12.330855606972293
PRIMUL WHILE endIdx = 70 obj (25.7, 8.4) endDist 11.6710110958734
PRIMUL WHILE endIdx = 69 obj (25.15, 8.05) endDist 11.031432363931712
PRIMUL WHILE endIdx = 68 obj (24.5, 7.75) endDist 10.31721861743755
endDist Il apendeaza pe (24.5, 7.75) endDist 10.31721861743755
PRIMUL WHILE endIdx = 67 obj (23.9, 7.65) endDist 9.721368216460068
endDist Il apendeaza pe (23.9, 7.65) endDist 9.721368216460068
PRIMUL WHILE endIdx = 66 obj (23.15, 7.4) endDist 8.931965069345042
endDist Il apendeaza pe (23.15, 7.4) endDist 8.931965069345042
PRIMUL WHILE endIdx = 65 obj (22.5, 7.3) endDist 8.292315719990407
endDist Il apendeaza pe (22.5, 7.3) endDist 8.292315719990407
Pentru (21.9, 7.1) endDist este 7.661755673473279 iar r-eps este 4.9
endDist Il apendeaza pe (21.9, 7.1) endDist 7.661755673473279
Before swap start end (31.95, 7.95) (21.9, 7.1) 0 64
After swap start end (21.9, 7.1) (31.95, 7.95) 0 64
p1 = (14.85, 4.1)
startIdx = 1 obj (31.15, 7.3)
endIdx = 63 obj (21.25, 7.05)
startDIST = 16.611140839809885 obj (31.15, 7.3)
endDIST = 7.047162549565606 obj (21.25, 7.05)
Pentru (21.25, 7.05) endDist este 7.047162549565606 iar r-eps este 4.9
endDist Il apendeaza pe (21.25, 7.05) endDist 7.047162549565606
Before swap start end (31.15, 7.3) (21.25, 7.05) 1 63
After swap start end (21.25, 7.05) (31.15, 7.3) 1 63
p1 = (14.85, 4.1)
startIdx = 2 obj (30.45, 6.65)
endIdx = 62 obj (20.5, 7.0)
startDIST = 15.807039571026575 obj (30.45, 6.65)
endDIST = 6.350787352761861 obj (20.5, 7.0)
Pentru (20.5, 7.0) endDist este 6.350787352761861 iar r-eps este 4.9
endDist Il apendeaza pe (20.5, 7.0) endDist 6.350787352761861
Before swap start end (30.45, 6.65) (20.5, 7.0) 2 62
After swap start end (20.5, 7.0) (30.45, 6.65) 2 62
p1 = (14.85, 4.1)
startIdx = 3 obj (29.7, 6.0)
endIdx = 61 obj (19.9, 6.95)
startDIST = 14.971055407017904 obj (29.7, 6.0)
endDIST = 5.798706752371601 obj (19.9, 6.95)
Pentru (19.9, 6.95) endDist este 5.798706752371601 iar r-eps este 4.9
endDist Il apendeaza pe (19.9, 6.95) endDist 5.798706752371601
Before swap start end (29.7, 6.0) (19.9, 6.95) 3 61
After swap start end (19.9, 6.95) (29.7, 6.0) 3 61
p1 = (14.85, 4.1)
startIdx = 4 obj (28.9, 5.55)
endIdx = 60 obj (19.25, 7.05)
startDIST = 14.124623888797888 obj (28.9, 5.55)
endDIST = 5.297405025104273 obj (19.25, 7.05)
Pentru (19.25, 7.05) endDist este 5.297405025104273 iar r-eps este 4.9
endDist Il apendeaza pe (19.25, 7.05) endDist 5.297405025104273
Before swap start end (28.9, 5.55) (19.25, 7.05) 4 60
After swap start end (19.25, 7.05) (28.9, 5.55) 4 60
p1 = (14.85, 4.1)
startIdx = 5 obj (28.05, 5.0)
endIdx = 59 obj (18.75, 7.1)
startDIST = 13.230646242719969 obj (28.05, 5.0)
endDIST = 4.920365840057018 obj (18.75, 7.1)
Pentru (18.75, 7.1) endDist este 4.920365840057018 iar r-eps este 4.9
endDist Il apendeaza pe (18.75, 7.1) endDist 4.920365840057018
Before swap start end (28.05, 5.0) (18.75, 7.1) 5 59
After swap start end (18.75, 7.1) (28.05, 5.0) 5 59
p1 = (14.85, 4.1)
startIdx = 6 obj (27.2, 4.55)
endIdx = 58 obj (18.05, 7.25)
startDIST = 12.358195661179668 obj (27.2, 4.55)
endDIST = 4.490267252625395 obj (18.05, 7.25)
Pentru (18.05, 7.25) endDist este 4.490267252625395 iar r-eps este 4.9
Before swap start end (27.2, 4.55) (18.05, 7.25) 6 58
After swap start end (18.05, 7.25) (27.2, 4.55) 6 58
p1 = (14.85, 4.1)
startIdx = 7 obj (26.35, 4.15)
endIdx = 57 obj (17.5, 7.35)
startDIST = 11.500108695138495 obj (26.35, 4.15)
endDIST = 4.193447269252351 obj (17.5, 7.35)
Pentru (17.5, 7.35) endDist este 4.193447269252351 iar r-eps este 4.9
Before swap start end (26.35, 4.15) (17.5, 7.35) 7 57
After swap start end (17.5, 7.35) (26.35, 4.15) 7 57
p1 = (14.85, 4.1)
startIdx = 8 obj (25.4, 3.85)
endIdx = 56 obj (16.9, 7.6)
startDIST = 10.552961669597781 obj (25.4, 3.85)
endDIST = 4.056168142471413 obj (16.9, 7.6)
Pentru (16.9, 7.6) endDist este 4.056168142471413 iar r-eps este 4.9
Before swap start end (25.4, 3.85) (16.9, 7.6) 8 56
After swap start end (16.9, 7.6) (25.4, 3.85) 8 56
p1 = (14.85, 4.1)
startIdx = 9 obj (24.6, 3.6)
endIdx = 55 obj (16.35, 7.8)
startDIST = 9.76281209488332 obj (24.6, 3.6)
endDIST = 3.9924929555354267 obj (16.35, 7.8)
Pentru (16.35, 7.8) endDist este 3.9924929555354267 iar r-eps este 4.9
startDist Il apendeaza pe (24.6, 3.6) startDist 9.76281209488332
Before swap start end (24.6, 3.6) (16.35, 7.8) 9 55
After swap start end (16.35, 7.8) (24.6, 3.6) 9 55
p1 = (14.85, 4.1)
startIdx = 10 obj (23.6, 3.3)
endIdx = 54 obj (15.8, 8.05)
startDIST = 8.786495319523025 obj (23.6, 3.3)
endDIST = 4.062634613154376 obj (15.8, 8.05)
Pentru (15.8, 8.05) endDist este 4.062634613154376 iar r-eps este 4.9
startDist Il apendeaza pe (23.6, 3.3) startDist 8.786495319523025
Before swap start end (23.6, 3.3) (15.8, 8.05) 10 54
After swap start end (15.8, 8.05) (23.6, 3.3) 10 54
p1 = (14.85, 4.1)
startIdx = 11 obj (22.75, 3.15)
endIdx = 53 obj (15.4, 8.35)
startDIST = 7.956915231419774 obj (22.75, 3.15)
endDIST = 4.285440467443224 obj (15.4, 8.35)
Pentru (15.4, 8.35) endDist este 4.285440467443224 iar r-eps este 4.9
startDist Il apendeaza pe (22.75, 3.15) startDist 7.956915231419774
Before swap start end (22.75, 3.15) (15.4, 8.35) 11 53
After swap start end (15.4, 8.35) (22.75, 3.15) 11 53
p1 = (14.85, 4.1)
startIdx = 12 obj (21.85, 3.05)
endIdx = 52 obj (27.15, 16.9)
startDIST = 7.078311945654842 obj (21.85, 3.05)
endDIST = 17.75190130662065 obj (27.15, 16.9)
PRIMUL WHILE endIdx = 52 obj (27.15, 16.9) endDist 17.75190130662065
PRIMUL WHILE endIdx = 51 obj (27.0, 16.4) endDist 17.289086152830635
PRIMUL WHILE endIdx = 50 obj (27.0, 15.9) endDist 16.93701567573225
PRIMUL WHILE endIdx = 49 obj (26.75, 15.35) endDist 16.375973253519927
PRIMUL WHILE endIdx = 48 obj (26.55, 14.85) endDist 15.888753884430333
PRIMUL WHILE endIdx = 47 obj (26.3, 14.45) endDist 15.434539189752314
PRIMUL WHILE endIdx = 46 obj (25.95, 14.1) endDist 14.940214188558341
PRIMUL WHILE endIdx = 45 obj (25.75, 13.7) endDist 14.524806367039803
PRIMUL WHILE endIdx = 44 obj (25.35, 13.3) endDist 13.96030085635693
PRIMUL WHILE endIdx = 43 obj (25.05, 12.95) endDist 13.504166023860934
PRIMUL WHILE endIdx = 42 obj (24.8, 12.7) endDist 13.15152082460428
PRIMUL WHILE endIdx = 41 obj (24.4, 12.45) endDist 12.685621782159517
PRIMUL WHILE endIdx = 40 obj (24.05, 12.2) endDist 12.257650672131263
PRIMUL WHILE endIdx = 39 obj (23.55, 11.85) endDist 11.651287482505957
PRIMUL WHILE endIdx = 38 obj (23.2, 11.65) endDist 11.257219905465115
PRIMUL WHILE endIdx = 37 obj (22.75, 11.4) endDist 10.756393447619885
PRIMUL WHILE endIdx = 36 obj (22.3, 11.3) endDist 10.360622568166454
endDist Il apendeaza pe (22.3, 11.3) endDist 10.360622568166454
PRIMUL WHILE endIdx = 35 obj (21.9, 11.1) endDist 9.93491318532779
endDist Il apendeaza pe (21.9, 11.1) endDist 9.93491318532779
PRIMUL WHILE endIdx = 34 obj (21.45, 11.05) endDist 9.584492683496608
endDist Il apendeaza pe (21.45, 11.05) endDist 9.584492683496608
PRIMUL WHILE endIdx = 33 obj (21.1, 11.0) endDist 9.309806657498319
endDist Il apendeaza pe (21.1, 11.0) endDist 9.309806657498319
PRIMUL WHILE endIdx = 32 obj (20.7, 10.95) endDist 9.008051953669005
endDist Il apendeaza pe (20.7, 10.95) endDist 9.008051953669005
PRIMUL WHILE endIdx = 31 obj (20.35, 10.95) endDist 8.78478798833529
endDist Il apendeaza pe (20.35, 10.95) endDist 8.78478798833529
PRIMUL WHILE endIdx = 30 obj (19.95, 11.0) endDist 8.580209787645055
endDist Il apendeaza pe (19.95, 11.0) endDist 8.580209787645055
PRIMUL WHILE endIdx = 29 obj (19.55, 11.0) endDist 8.34865258589672
endDist Il apendeaza pe (19.55, 11.0) endDist 8.34865258589672
PRIMUL WHILE endIdx = 28 obj (19.15, 11.05) endDist 8.172667863066502
endDist Il apendeaza pe (19.15, 11.05) endDist 8.172667863066502
PRIMUL WHILE endIdx = 27 obj (18.85, 11.1) endDist 8.062257748298551
endDist Il apendeaza pe (18.85, 11.1) endDist 8.062257748298551
PRIMUL WHILE endIdx = 26 obj (18.45, 11.25) endDist 8.005154589388015
endDist Il apendeaza pe (18.45, 11.25) endDist 8.005154589388015
PRIMUL WHILE endIdx = 25 obj (18.15, 11.35) endDist 7.965707752610561
endDist Il apendeaza pe (18.15, 11.35) endDist 7.965707752610561
PRIMUL WHILE endIdx = 24 obj (17.85, 11.5) endDist 7.9849859110708525
endDist Il apendeaza pe (17.85, 11.5) endDist 7.9849859110708525
PRIMUL WHILE endIdx = 23 obj (17.5, 11.7) endDist 8.048757668112515
endDist Il apendeaza pe (17.5, 11.7) endDist 8.048757668112515
PRIMUL WHILE endIdx = 22 obj (17.2, 11.95) endDist 8.194205269579228
endDist Il apendeaza pe (17.2, 11.95) endDist 8.194205269579228
PRIMUL WHILE endIdx = 21 obj (17.0, 12.05) endDist 8.235593481953806
endDist Il apendeaza pe (17.0, 12.05) endDist 8.235593481953806
AL DOILEA WHILE startIdx = 12 obj (21.85, 3.05) start 7.078311945654842
startDist Il apendeaza pe (21.85, 3.05) endDist 7.078311945654842
AL DOILEA WHILE startIdx = 13 obj (20.9, 3.0) start 6.14918693812442
startDist Il apendeaza pe (20.9, 3.0) endDist 6.14918693812442
AL DOILEA WHILE startIdx = 14 obj (20.0, 2.9) start 5.287958017987662
startDist Il apendeaza pe (20.0, 2.9) endDist 5.287958017987662
AL DOILEA WHILE startIdx = 15 obj (19.1, 3.0) start 4.39004555785017
AL DOILEA WHILE startIdx = 16 obj (18.2, 3.2) start 3.468789414190489
AL DOILEA WHILE startIdx = 17 obj (17.3, 3.25) start 2.593260495977989
AL DOILEA WHILE startIdx = 18 obj (16.55, 3.5) start 1.8027756377319955
AL DOILEA WHILE startIdx = 19 obj (15.7, 3.7) start 0.9394147114027962
sunt egale 20 20
========================= WIN L ===================
[(21.9, 7.1), (21.25, 7.05), (20.5, 7.0), (19.9, 6.95), (19.25, 7.05), (18.75, 7.1), (21.85, 3.05), (20.9, 3.0), (20.0, 2.9)]
========================= WIN L END ===================
========================= WIN G ===================
[(24.5, 7.75), (23.9, 7.65), (23.15, 7.4), (22.5, 7.3), (24.6, 3.6), (23.6, 3.3), (22.75, 3.15), (22.3, 11.3), (21.9, 11.1), (21.45, 11.05), (21.1, 11.0), (20.7, 10.95), (20.35, 10.95), (19.95, 11.0), (19.55, 11.0), (19.15, 11.05), (18.85, 11.1), (18.45, 11.25), (18.15, 11.35), (17.85, 11.5), (17.5, 11.7), (17.2, 11.95), (17.0, 12.05)]
========================= WIN G END ===================
========================= OBJS first half ===================
[(21.9, 7.1), (21.25, 7.05), (20.5, 7.0), (19.9, 6.95), (19.25, 7.05), (18.75, 7.1), (18.05, 7.25), (17.5, 7.35), (16.9, 7.6), (16.35, 7.8), (15.8, 8.05), (15.4, 8.35), (21.85, 3.05), (20.9, 3.0), (20.0, 2.9), (19.1, 3.0), (18.2, 3.2), (17.3, 3.25), (16.55, 3.5), (15.7, 3.7)]
========================= OBJS first half END ===================
========================= OBJS last half ===================
[(14.85, 4.1), (17.0, 12.05), (17.2, 11.95), (17.5, 11.7), (17.85, 11.5), (18.15, 11.35), (18.45, 11.25), (18.85, 11.1), (19.15, 11.05), (19.55, 11.0), (19.95, 11.0), (20.35, 10.95), (20.7, 10.95), (21.1, 11.0), (21.45, 11.05), (21.9, 11.1), (22.3, 11.3), (22.75, 11.4), (23.2, 11.65), (23.55, 11.85), (24.05, 12.2), (24.4, 12.45), (24.8, 12.7), (25.05, 12.95), (25.35, 13.3), (25.75, 13.7), (25.95, 14.1), (26.3, 14.45), (26.55, 14.85), (26.75, 15.35), (27.0, 15.9), (27.0, 16.4), (27.15, 16.9), (22.75, 3.15), (23.6, 3.3), (24.6, 3.6), (25.4, 3.85), (26.35, 4.15), (27.2, 4.55), (28.05, 5.0), (28.9, 5.55), (29.7, 6.0), (30.45, 6.65), (31.15, 7.3), (31.95, 7.95), (22.5, 7.3), (23.15, 7.4), (23.9, 7.65), (24.5, 7.75), (25.15, 8.05), (25.7, 8.4), (26.25, 8.8), (26.9, 9.1), (27.55, 9.65), (28.0, 10.1), (28.5, 10.6), (29.0, 11.15), (29.5, 11.75), (29.9, 12.3), (30.3, 13.0), (30.6, 13.65), (30.9, 14.35), (31.15, 15.05), (31.3, 15.8), (31.45, 16.55), (21.5, 14.9), (21.55, 15.0), (21.65, 15.05), (21.75, 15.15), (21.85, 15.25), (21.9, 15.3), (22.0, 15.4), (22.7, 16.4), (22.6, 16.2), (22.55, 16.05), (22.4, 15.95), (22.35, 15.8), (22.2, 15.65), (22.15, 15.55)]
========================= OBJS last half END ===================
Intra in win
win len(objs), len(objs1), len(objs2), constSmallNumber 32 | [(21.9, 7.1), (21.25, 7.05), (20.5, 7.0), (19.9, 6.95), (19.25, 7.05), (18.75, 7.1), (21.85, 3.05), (20.9, 3.0), (20.0, 2.9)] | [(24.5, 7.75), (23.9, 7.65), (23.15, 7.4), (22.5, 7.3), (24.6, 3.6), (23.6, 3.3), (22.75, 3.15), (22.3, 11.3), (21.9, 11.1), (21.45, 11.05), (21.1, 11.0), (20.7, 10.95), (20.35, 10.95), (19.95, 11.0), (19.55, 11.0), (19.15, 11.05), (18.85, 11.1), (18.45, 11.25), (18.15, 11.35), (17.85, 11.5), (17.5, 11.7), (17.2, 11.95), (17.0, 12.05)] | 10
p1 = (17.85, 11.5) len objs = 9
r is 2.88
new r is 2.88
p1 = (17.85, 11.5)
startIdx = 0 obj (21.9, 7.1)
endIdx = 8 obj (20.0, 2.9)
startDIST = 5.98017558270658 obj (21.9, 7.1)
endDIST = 8.864677095077969 obj (20.0, 2.9)
PRIMUL WHILE endIdx = 8 obj (20.0, 2.9) endDist 8.864677095077969
PRIMUL WHILE endIdx = 7 obj (20.9, 3.0) endDist 9.03064228059112
PRIMUL WHILE endIdx = 6 obj (21.85, 3.05) endDist 9.34893042010689
PRIMUL WHILE endIdx = 5 obj (18.75, 7.1) endDist 4.491102314577124
endDist Il apendeaza pe (18.75, 7.1) endDist 4.491102314577124
PRIMUL WHILE endIdx = 4 obj (19.25, 7.05) endDist 4.665029474719319
endDist Il apendeaza pe (19.25, 7.05) endDist 4.665029474719319
PRIMUL WHILE endIdx = 3 obj (19.9, 6.95) endDist 4.990490957811665
endDist Il apendeaza pe (19.9, 6.95) endDist 4.990490957811665
PRIMUL WHILE endIdx = 2 obj (20.5, 7.0) endDist 5.222307918918607
endDist Il apendeaza pe (20.5, 7.0) endDist 5.222307918918607
PRIMUL WHILE endIdx = 1 obj (21.25, 7.05) endDist 5.600223209837264
endDist Il apendeaza pe (21.25, 7.05) endDist 5.600223209837264
sunt egale 0 0
========================= WIN L ===================
[]
========================= WIN L END ===================
========================= WIN G ===================
[(18.75, 7.1), (19.25, 7.05), (19.9, 6.95), (20.5, 7.0), (21.25, 7.05)]
========================= WIN G END ===================
========================= OBJS first half ===================
[(21.9, 7.1), (21.25, 7.05), (20.5, 7.0), (19.9, 6.95), (19.25, 7.05), (18.75, 7.1), (21.85, 3.05), (20.9, 3.0)]
========================= OBJS first half END ===================
========================= OBJS last half ===================
[(20.0, 2.9)]
========================= OBJS last half END ===================
p1 = (17.85, 11.5) len objs = 23
r is 4.39
new r is 4.39
p1 = (17.85, 11.5)
startIdx = 0 obj (24.5, 7.75)
endIdx = 22 obj (17.0, 12.05)
startDIST = 7.634461343146612 obj (24.5, 7.75)
endDIST = 1.0124228365658308 obj (17.0, 12.05)
Pentru (17.0, 12.05) endDist este 1.0124228365658308 iar r-eps este 1.5899999999999999
Before swap start end (24.5, 7.75) (17.0, 12.05) 0 22
After swap start end (17.0, 12.05) (24.5, 7.75) 0 22
p1 = (17.85, 11.5)
startIdx = 1 obj (23.9, 7.65)
endIdx = 21 obj (17.2, 11.95)
startDIST = 7.171122645722911 obj (23.9, 7.65)
endDIST = 0.7905694150420962 obj (17.2, 11.95)
Pentru (17.2, 11.95) endDist este 0.7905694150420962 iar r-eps este 1.5899999999999999
startDist Il apendeaza pe (23.9, 7.65) startDist 7.171122645722911
Before swap start end (23.9, 7.65) (17.2, 11.95) 1 21
After swap start end (17.2, 11.95) (23.9, 7.65) 1 21
p1 = (17.85, 11.5)
startIdx = 2 obj (23.15, 7.4)
endIdx = 20 obj (17.5, 11.7)
startDIST = 6.700746227100379 obj (23.15, 7.4)
endDIST = 0.40311288741492834 obj (17.5, 11.7)
Pentru (17.5, 11.7) endDist este 0.40311288741492834 iar r-eps este 1.5899999999999999
startDist Il apendeaza pe (23.15, 7.4) startDist 6.700746227100379
Before swap start end (23.15, 7.4) (17.5, 11.7) 2 20
After swap start end (17.5, 11.7) (23.15, 7.4) 2 20
p1 = (17.85, 11.5)
startIdx = 3 obj (22.5, 7.3)
endIdx = 19 obj (17.85, 11.5)
startDIST = 6.265979572261626 obj (22.5, 7.3)
endDIST = 0.0 obj (17.85, 11.5)
Pentru (17.85, 11.5) endDist este 0.0 iar r-eps este 1.5899999999999999
startDist Il apendeaza pe (22.5, 7.3) startDist 6.265979572261626
Before swap start end (22.5, 7.3) (17.85, 11.5) 3 19
After swap start end (17.85, 11.5) (22.5, 7.3) 3 19
p1 = (17.85, 11.5)
startIdx = 4 obj (24.6, 3.6)
endIdx = 18 obj (18.15, 11.35)
startDIST = 10.39098166681089 obj (24.6, 3.6)
endDIST = 0.3354101966249661 obj (18.15, 11.35)
Pentru (18.15, 11.35) endDist este 0.3354101966249661 iar r-eps este 1.5899999999999999
Before swap start end (24.6, 3.6) (18.15, 11.35) 4 18
After swap start end (18.15, 11.35) (24.6, 3.6) 4 18
p1 = (17.85, 11.5)
startIdx = 5 obj (23.6, 3.3)
endIdx = 17 obj (18.45, 11.25)
startDIST = 10.015113578986512 obj (23.6, 3.3)
endDIST = 0.649999999999998 obj (18.45, 11.25)
Pentru (18.45, 11.25) endDist este 0.649999999999998 iar r-eps este 1.5899999999999999
Before swap start end (23.6, 3.3) (18.45, 11.25) 5 17
After swap start end (18.45, 11.25) (23.6, 3.3) 5 17
p1 = (17.85, 11.5)
startIdx = 6 obj (22.75, 3.15)
endIdx = 16 obj (18.85, 11.1)
startDIST = 9.681554627228005 obj (22.75, 3.15)
endDIST = 1.077032961426901 obj (18.85, 11.1)
Pentru (18.85, 11.1) endDist este 1.077032961426901 iar r-eps este 1.5899999999999999
Before swap start end (22.75, 3.15) (18.85, 11.1) 6 16
After swap start end (18.85, 11.1) (22.75, 3.15) 6 16
p1 = (17.85, 11.5)
startIdx = 7 obj (22.3, 11.3)
endIdx = 15 obj (19.15, 11.05)
startDIST = 4.454492114708477 obj (22.3, 11.3)
endDIST = 1.3756816492197577 obj (19.15, 11.05)
Pentru (19.15, 11.05) endDist este 1.3756816492197577 iar r-eps este 1.5899999999999999
startDist Il apendeaza pe (22.3, 11.3) startDist 4.454492114708477
Before swap start end (22.3, 11.3) (19.15, 11.05) 7 15
After swap start end (19.15, 11.05) (22.3, 11.3) 7 15
p1 = (17.85, 11.5)
startIdx = 8 obj (21.9, 11.1)
endIdx = 14 obj (19.55, 11.0)
startDIST = 4.069705149024924 obj (21.9, 11.1)
endDIST = 1.7720045146669343 obj (19.55, 11.0)
AL DOILEA WHILE startIdx = 8 obj (21.9, 11.1) start 4.069705149024924
startDist Il apendeaza pe (21.9, 11.1) endDist 4.069705149024924
AL DOILEA WHILE startIdx = 9 obj (21.45, 11.05) start 3.628015986734345
startDist Il apendeaza pe (21.45, 11.05) endDist 3.628015986734345
AL DOILEA WHILE startIdx = 10 obj (21.1, 11.0) start 3.2882366094914763
startDist Il apendeaza pe (21.1, 11.0) endDist 3.2882366094914763
AL DOILEA WHILE startIdx = 11 obj (20.7, 10.95) start 2.9025850547399963
startDist Il apendeaza pe (20.7, 10.95) endDist 2.9025850547399963
AL DOILEA WHILE startIdx = 12 obj (20.35, 10.95) start 2.559785147234041
startDist Il apendeaza pe (20.35, 10.95) endDist 2.559785147234041
AL DOILEA WHILE startIdx = 13 obj (19.95, 11.0) start 2.1587033144922882
startDist Il apendeaza pe (19.95, 11.0) endDist 2.1587033144922882
sunt egale 14 14
========================= WIN L ===================
[(21.9, 11.1), (21.45, 11.05), (21.1, 11.0), (20.7, 10.95), (20.35, 10.95), (19.95, 11.0), (19.55, 11.0)]
========================= WIN L END ===================
========================= WIN G ===================
[(23.9, 7.65), (23.15, 7.4), (22.5, 7.3), (22.3, 11.3)]
========================= WIN G END ===================
========================= OBJS first half ===================
[(17.0, 12.05), (17.2, 11.95), (17.5, 11.7), (17.85, 11.5), (18.15, 11.35), (18.45, 11.25), (18.85, 11.1), (19.15, 11.05), (21.9, 11.1), (21.45, 11.05), (21.1, 11.0), (20.7, 10.95), (20.35, 10.95), (19.95, 11.0)]
========================= OBJS first half END ===================
========================= OBJS last half ===================
[(19.55, 11.0), (22.3, 11.3), (22.75, 3.15), (23.6, 3.3), (24.6, 3.6), (22.5, 7.3), (23.15, 7.4), (23.9, 7.65), (24.5, 7.75)]
========================= OBJS last half END ===================
nested loop vine din 
nested loop objs1, objs2 [][(23.9, 7.65), (23.15, 7.4), (22.5, 7.3), (22.3, 11.3)]
nested loop vine din 
nested loop objs1, objs2 [(18.75, 7.1), (19.25, 7.05), (19.9, 6.95), (20.5, 7.0), (21.25, 7.05)][(21.9, 11.1), (21.45, 11.05), (21.1, 11.0), (20.7, 10.95), (20.35, 10.95), (19.95, 11.0), (19.55, 11.0)]
nested loop vine din 
nested loop objs1, objs2 [][(17.0, 12.05), (17.2, 11.95), (17.5, 11.7), (17.85, 11.5), (18.15, 11.35), (18.45, 11.25), (18.85, 11.1), (19.15, 11.05), (21.9, 11.1), (21.45, 11.05), (21.1, 11.0), (20.7, 10.95), (20.35, 10.95), (19.95, 11.0), (19.55, 11.0)]
nested loop vine din 
nested loop objs1, objs2 [(21.9, 7.1), (21.25, 7.05), (20.5, 7.0), (19.9, 6.95), (19.25, 7.05), (18.75, 7.1), (21.85, 3.05), (20.9, 3.0), (20.0, 2.9)][(22.3, 11.3), (22.75, 3.15), (23.6, 3.3), (24.6, 3.6), (22.5, 7.3), (23.15, 7.4), (23.9, 7.65), (24.5, 7.75)]
quick len(objs), constSmallNumber 21 10
p1 = (21.85, 3.05) len objs = 21
r is 3.93
new r is 3.93
p1 = (21.85, 3.05)
startIdx = 0 obj (21.9, 7.1)
endIdx = 20 obj (14.85, 4.1)
startDIST = 4.050308630215727 obj (21.9, 7.1)
endDIST = 7.078311945654842 obj (14.85, 4.1)
PRIMUL WHILE endIdx = 20 obj (14.85, 4.1) endDist 7.078311945654842
PRIMUL WHILE endIdx = 19 obj (15.7, 3.7) endDist 6.184254199173901
endDist Il apendeaza pe (15.7, 3.7) endDist 6.184254199173901
PRIMUL WHILE endIdx = 18 obj (16.55, 3.5) endDist 5.319069467491472
endDist Il apendeaza pe (16.55, 3.5) endDist 5.319069467491472
PRIMUL WHILE endIdx = 17 obj (17.3, 3.25) endDist 4.554393483220352
endDist Il apendeaza pe (17.3, 3.25) endDist 4.554393483220352
Pentru (18.2, 3.2) endDist este 3.6530808915215682 iar r-eps este 1.1300000000000003
endDist Il apendeaza pe (18.2, 3.2) endDist 3.6530808915215682
startDist Il apendeaza pe (21.9, 7.1) startDist 4.050308630215727
Before swap start end (21.9, 7.1) (18.2, 3.2) 0 16
After swap start end (18.2, 3.2) (21.9, 7.1) 0 16
p1 = (21.85, 3.05)
startIdx = 1 obj (21.25, 7.05)
endIdx = 15 obj (19.1, 3.0)
startDIST = 4.044749683231338 obj (21.25, 7.05)
endDIST = 2.7504545078950136 obj (19.1, 3.0)
Pentru (19.1, 3.0) endDist este 2.7504545078950136 iar r-eps este 1.1300000000000003
endDist Il apendeaza pe (19.1, 3.0) endDist 2.7504545078950136
startDist Il apendeaza pe (21.25, 7.05) startDist 4.044749683231338
Before swap start end (21.25, 7.05) (19.1, 3.0) 1 15
After swap start end (19.1, 3.0) (21.25, 7.05) 1 15
p1 = (21.85, 3.05)
startIdx = 2 obj (20.5, 7.0)
endIdx = 14 obj (20.0, 2.9)
startDIST = 4.17432629294836 obj (20.5, 7.0)
endDIST = 1.85607111932706 obj (20.0, 2.9)
Pentru (20.0, 2.9) endDist este 1.85607111932706 iar r-eps este 1.1300000000000003
endDist Il apendeaza pe (20.0, 2.9) endDist 1.85607111932706
startDist Il apendeaza pe (20.5, 7.0) startDist 4.17432629294836
Before swap start end (20.5, 7.0) (20.0, 2.9) 2 14
After swap start end (20.0, 2.9) (20.5, 7.0) 2 14
p1 = (21.85, 3.05)
startIdx = 3 obj (19.9, 6.95)
endIdx = 13 obj (20.9, 3.0)
startDIST = 4.360332556124591 obj (19.9, 6.95)
endDIST = 0.9513148795220252 obj (20.9, 3.0)
Pentru (20.9, 3.0) endDist este 0.9513148795220252 iar r-eps este 1.1300000000000003
startDist Il apendeaza pe (19.9, 6.95) startDist 4.360332556124591
Before swap start end (19.9, 6.95) (20.9, 3.0) 3 13
After swap start end (20.9, 3.0) (19.9, 6.95) 3 13
p1 = (21.85, 3.05)
startIdx = 4 obj (19.25, 7.05)
endIdx = 12 obj (21.85, 3.05)
startDIST = 4.770744176750626 obj (19.25, 7.05)
endDIST = 0.0 obj (21.85, 3.05)
Pentru (21.85, 3.05) endDist este 0.0 iar r-eps este 1.1300000000000003
startDist Il apendeaza pe (19.25, 7.05) startDist 4.770744176750626
Before swap start end (19.25, 7.05) (21.85, 3.05) 4 12
After swap start end (21.85, 3.05) (19.25, 7.05) 4 12
p1 = (21.85, 3.05)
startIdx = 5 obj (18.75, 7.1)
endIdx = 11 obj (15.4, 8.35)
startDIST = 5.100245092149985 obj (18.75, 7.1)
endDIST = 8.348203399534537 obj (15.4, 8.35)
PRIMUL WHILE endIdx = 11 obj (15.4, 8.35) endDist 8.348203399534537
PRIMUL WHILE endIdx = 10 obj (15.8, 8.05) endDist 7.848726011270875
PRIMUL WHILE endIdx = 9 obj (16.35, 7.8) endDist 7.267220926874317
PRIMUL WHILE endIdx = 8 obj (16.9, 7.6) endDist 6.723466367878999
endDist Il apendeaza pe (16.9, 7.6) endDist 6.723466367878999
PRIMUL WHILE endIdx = 7 obj (17.5, 7.35) endDist 6.11657583947097
endDist Il apendeaza pe (17.5, 7.35) endDist 6.11657583947097
PRIMUL WHILE endIdx = 6 obj (18.05, 7.25) endDist 5.663920903402519
endDist Il apendeaza pe (18.05, 7.25) endDist 5.663920903402519
sunt egale 5 5
========================= WIN L ===================
[(18.2, 3.2), (19.1, 3.0), (20.0, 2.9)]
========================= WIN L END ===================
========================= WIN G ===================
[(15.7, 3.7), (16.55, 3.5), (17.3, 3.25), (21.9, 7.1), (21.25, 7.05), (20.5, 7.0), (19.9, 6.95), (19.25, 7.05), (16.9, 7.6), (17.5, 7.35), (18.05, 7.25), (18.75, 7.1)]
========================= WIN G END ===================
========================= OBJS first half ===================
[(18.2, 3.2), (19.1, 3.0), (20.0, 2.9), (20.9, 3.0)]
========================= OBJS first half END ===================
========================= OBJS last half ===================
[(21.85, 3.05), (18.75, 7.1), (18.05, 7.25), (17.5, 7.35), (16.9, 7.6), (16.35, 7.8), (15.8, 8.05), (15.4, 8.35), (19.25, 7.05), (19.9, 6.95), (20.5, 7.0), (21.25, 7.05), (21.9, 7.1), (17.3, 3.25), (16.55, 3.5), (15.7, 3.7), (14.85, 4.1)]
========================= OBJS last half END ===================
Intra in win
win len(objs), len(objs1), len(objs2), constSmallNumber 15 | [(18.2, 3.2), (19.1, 3.0), (20.0, 2.9)] | [(15.7, 3.7), (16.55, 3.5), (17.3, 3.25), (21.9, 7.1), (21.25, 7.05), (20.5, 7.0), (19.9, 6.95), (19.25, 7.05), (16.9, 7.6), (17.5, 7.35), (18.05, 7.25), (18.75, 7.1)] | 10
p1 = (21.25, 7.05) len objs = 3
r is 1.22
new r is 1.22
p1 = (21.25, 7.05)
startIdx = 0 obj (18.2, 3.2)
endIdx = 2 obj (20.0, 2.9)
startDIST = 4.911720676097125 obj (18.2, 3.2)
endDIST = 4.334166586553867 obj (20.0, 2.9)
PRIMUL WHILE endIdx = 2 obj (20.0, 2.9) endDist 4.334166586553867
PRIMUL WHILE endIdx = 1 obj (19.1, 3.0) endDist 4.58530260724415
sunt egale 0 0
========================= WIN L ===================
[]
========================= WIN L END ===================
========================= WIN G ===================
[]
========================= WIN G END ===================
========================= OBJS first half ===================
[(18.2, 3.2), (19.1, 3.0)]
========================= OBJS first half END ===================
========================= OBJS last half ===================
[(20.0, 2.9)]
========================= OBJS last half END ===================
p1 = (21.25, 7.05) len objs = 12
r is 3.19
new r is 3.19
p1 = (21.25, 7.05)
startIdx = 0 obj (15.7, 3.7)
endIdx = 11 obj (18.75, 7.1)
startDIST = 6.4826692033451785 obj (15.7, 3.7)
endDIST = 2.5004999500099974 obj (18.75, 7.1)
Pentru (18.75, 7.1) endDist este 2.5004999500099974 iar r-eps este 0.3900000000000001
endDist Il apendeaza pe (18.75, 7.1) endDist 2.5004999500099974
Before swap start end (15.7, 3.7) (18.75, 7.1) 0 11
After swap start end (18.75, 7.1) (15.7, 3.7) 0 11
p1 = (21.25, 7.05)
startIdx = 1 obj (16.55, 3.5)
endIdx = 10 obj (18.05, 7.25)
startDIST = 5.890033955759508 obj (16.55, 3.5)
endDIST = 3.206243908376279 obj (18.05, 7.25)
PRIMUL WHILE endIdx = 10 obj (18.05, 7.25) endDist 3.206243908376279
endDist Il apendeaza pe (18.05, 7.25) endDist 3.206243908376279
PRIMUL WHILE endIdx = 9 obj (17.5, 7.35) endDist 3.761980861195336
endDist Il apendeaza pe (17.5, 7.35) endDist 3.761980861195336
PRIMUL WHILE endIdx = 8 obj (16.9, 7.6) endDist 4.384632253678752
endDist Il apendeaza pe (16.9, 7.6) endDist 4.384632253678752
Pentru (19.25, 7.05) endDist este 2.0 iar r-eps este 0.3900000000000001
endDist Il apendeaza pe (19.25, 7.05) endDist 2.0
startDist Il apendeaza pe (16.55, 3.5) startDist 5.890033955759508
Before swap start end (16.55, 3.5) (19.25, 7.05) 1 7
After swap start end (19.25, 7.05) (16.55, 3.5) 1 7
p1 = (21.25, 7.05)
startIdx = 2 obj (17.3, 3.25)
endIdx = 6 obj (19.9, 6.95)
startDIST = 5.481103903412158 obj (17.3, 3.25)
endDIST = 1.3536986370680897 obj (19.9, 6.95)
Pentru (19.9, 6.95) endDist este 1.3536986370680897 iar r-eps este 0.3900000000000001
endDist Il apendeaza pe (19.9, 6.95) endDist 1.3536986370680897
startDist Il apendeaza pe (17.3, 3.25) startDist 5.481103903412158
Before swap start end (17.3, 3.25) (19.9, 6.95) 2 6
After swap start end (19.9, 6.95) (17.3, 3.25) 2 6
p1 = (21.25, 7.05)
startIdx = 3 obj (21.9, 7.1)
endIdx = 5 obj (20.5, 7.0)
startDIST = 0.6519202405202634 obj (21.9, 7.1)
endDIST = 0.7516648189186453 obj (20.5, 7.0)
AL DOILEA WHILE startIdx = 3 obj (21.9, 7.1) start 0.6519202405202634
startDist Il apendeaza pe (21.9, 7.1) endDist 0.6519202405202634
AL DOILEA WHILE startIdx = 4 obj (21.25, 7.05) start 0.0
sunt egale 5 5
========================= WIN L ===================
[(18.75, 7.1), (19.25, 7.05), (19.9, 6.95), (21.9, 7.1), (20.5, 7.0)]
========================= WIN L END ===================
========================= WIN G ===================
[(18.05, 7.25), (17.5, 7.35), (16.9, 7.6), (16.55, 3.5), (17.3, 3.25)]
========================= WIN G END ===================
========================= OBJS first half ===================
[(18.75, 7.1), (19.25, 7.05), (19.9, 6.95), (21.9, 7.1), (21.25, 7.05)]
========================= OBJS first half END ===================
========================= OBJS last half ===================
[(20.5, 7.0), (17.3, 3.25), (16.55, 3.5), (16.9, 7.6), (17.5, 7.35), (18.05, 7.25), (15.7, 3.7)]
========================= OBJS last half END ===================
nested loop vine din 
nested loop objs1, objs2 [][(18.05, 7.25), (17.5, 7.35), (16.9, 7.6), (16.55, 3.5), (17.3, 3.25)]
nested loop vine din 
nested loop objs1, objs2 [][(18.75, 7.1), (19.25, 7.05), (19.9, 6.95), (21.9, 7.1), (20.5, 7.0)]
nested loop vine din 
nested loop objs1, objs2 [][(18.75, 7.1), (19.25, 7.05), (19.9, 6.95), (21.9, 7.1), (21.25, 7.05), (20.5, 7.0)]
nested loop vine din 
nested loop objs1, objs2 [(18.2, 3.2), (19.1, 3.0), (20.0, 2.9)][(17.3, 3.25), (16.55, 3.5), (16.9, 7.6), (17.5, 7.35), (18.05, 7.25), (15.7, 3.7)]
quick len(objs), constSmallNumber 5 10
quick len(objs), constSmallNumber 16 10
p1 = (16.35, 7.8) len objs = 16
r is 3.5
new r is 3.5
p1 = (16.35, 7.8)
startIdx = 0 obj (18.75, 7.1)
endIdx = 15 obj (14.85, 4.1)
startDIST = 2.4999999999999987 obj (18.75, 7.1)
endDIST = 3.9924929555354267 obj (14.85, 4.1)
PRIMUL WHILE endIdx = 15 obj (14.85, 4.1) endDist 3.9924929555354267
endDist Il apendeaza pe (14.85, 4.1) endDist 3.9924929555354267
PRIMUL WHILE endIdx = 14 obj (15.7, 3.7) endDist 4.151204644437564
endDist Il apendeaza pe (15.7, 3.7) endDist 4.151204644437564
PRIMUL WHILE endIdx = 13 obj (16.55, 3.5) endDist 4.304648650006176
endDist Il apendeaza pe (16.55, 3.5) endDist 4.304648650006176
PRIMUL WHILE endIdx = 12 obj (17.3, 3.25) endDist 4.64811789867684
endDist Il apendeaza pe (17.3, 3.25) endDist 4.64811789867684
PRIMUL WHILE endIdx = 11 obj (21.9, 7.1) endDist 5.593969967742048
endDist Il apendeaza pe (21.9, 7.1) endDist 5.593969967742048
PRIMUL WHILE endIdx = 10 obj (21.25, 7.05) endDist 4.957065664281641
endDist Il apendeaza pe (21.25, 7.05) endDist 4.957065664281641
PRIMUL WHILE endIdx = 9 obj (20.5, 7.0) endDist 4.226405091800831
endDist Il apendeaza pe (20.5, 7.0) endDist 4.226405091800831
PRIMUL WHILE endIdx = 8 obj (19.9, 6.95) endDist 3.650342449688793
endDist Il apendeaza pe (19.9, 6.95) endDist 3.650342449688793
AL DOILEA WHILE startIdx = 0 obj (18.75, 7.1) start 2.4999999999999987
startDist Il apendeaza pe (18.75, 7.1) endDist 2.4999999999999987
AL DOILEA WHILE startIdx = 1 obj (18.05, 7.25) start 1.786756838520563
startDist Il apendeaza pe (18.05, 7.25) endDist 1.786756838520563
AL DOILEA WHILE startIdx = 2 obj (17.5, 7.35) start 1.2349089035228455
startDist Il apendeaza pe (17.5, 7.35) endDist 1.2349089035228455
AL DOILEA WHILE startIdx = 3 obj (16.9, 7.6) start 0.5852349955359787
AL DOILEA WHILE startIdx = 4 obj (16.35, 7.8) start 0.0
AL DOILEA WHILE startIdx = 5 obj (15.8, 8.05) start 0.6041522986797296
AL DOILEA WHILE startIdx = 6 obj (15.4, 8.35) start 1.0977249200050083
startDist Il apendeaza pe (15.4, 8.35) endDist 1.0977249200050083
sunt egale 7 7
========================= WIN L ===================
[(18.75, 7.1), (18.05, 7.25), (17.5, 7.35), (15.4, 8.35), (19.25, 7.05)]
========================= WIN L END ===================
========================= WIN G ===================
[(14.85, 4.1), (15.7, 3.7), (16.55, 3.5), (17.3, 3.25), (21.9, 7.1), (21.25, 7.05), (20.5, 7.0), (19.9, 6.95)]
========================= WIN G END ===================
========================= OBJS first half ===================
[(18.75, 7.1), (18.05, 7.25), (17.5, 7.35), (16.9, 7.6), (16.35, 7.8), (15.8, 8.05), (15.4, 8.35)]
========================= OBJS first half END ===================
========================= OBJS last half ===================
[(19.25, 7.05), (19.9, 6.95), (20.5, 7.0), (21.25, 7.05), (21.9, 7.1), (17.3, 3.25), (16.55, 3.5), (15.7, 3.7), (14.85, 4.1)]
========================= OBJS last half END ===================
Intra in win
win len(objs), len(objs1), len(objs2), constSmallNumber 13 | [(18.75, 7.1), (18.05, 7.25), (17.5, 7.35), (15.4, 8.35), (19.25, 7.05)] | [(14.85, 4.1), (15.7, 3.7), (16.55, 3.5), (17.3, 3.25), (21.9, 7.1), (21.25, 7.05), (20.5, 7.0), (19.9, 6.95)] | 10
p1 = (17.5, 7.35) len objs = 5
r is 1.89
new r is 1.89
p1 = (17.5, 7.35)
startIdx = 0 obj (18.75, 7.1)
endIdx = 4 obj (19.25, 7.05)
startDIST = 1.2747548783981961 obj (18.75, 7.1)
endDIST = 1.7755280904564703 obj (19.25, 7.05)
AL DOILEA WHILE startIdx = 0 obj (18.75, 7.1) start 1.2747548783981961
startDist Il apendeaza pe (18.75, 7.1) endDist 1.2747548783981961
AL DOILEA WHILE startIdx = 1 obj (18.05, 7.25) start 0.5590169943749481
startDist Il apendeaza pe (18.05, 7.25) endDist 0.5590169943749481
AL DOILEA WHILE startIdx = 2 obj (17.5, 7.35) start 0.0
startDist Il apendeaza pe (17.5, 7.35) endDist 0.0
Pentru (19.25, 7.05) endDist este 1.7755280904564703 iar r-eps este -0.9099999999999999
endDist Il apendeaza pe (19.25, 7.05) endDist 1.7755280904564703
startDist Il apendeaza pe (15.4, 8.35) startDist 2.325940669922601
Before swap start end (15.4, 8.35) (19.25, 7.05) 3 4
After swap start end (19.25, 7.05) (15.4, 8.35) 3 4
========================= WIN L ===================
[(18.75, 7.1), (18.05, 7.25), (17.5, 7.35), (19.25, 7.05)]
========================= WIN L END ===================
========================= WIN G ===================
[(15.4, 8.35)]
========================= WIN G END ===================
========================= OBJS first half ===================
[(18.75, 7.1), (18.05, 7.25), (17.5, 7.35)]
========================= OBJS first half END ===================
========================= OBJS last half ===================
[(19.25, 7.05), (15.4, 8.35)]
========================= OBJS last half END ===================
p1 = (17.5, 7.35) len objs = 8
r is 3.94
new r is 3.94
p1 = (17.5, 7.35)
startIdx = 0 obj (14.85, 4.1)
endIdx = 7 obj (19.9, 6.95)
startDIST = 4.193447269252351 obj (14.85, 4.1)
endDIST = 2.4331050121192863 obj (19.9, 6.95)
Pentru (19.9, 6.95) endDist este 2.4331050121192863 iar r-eps este 1.1400000000000001
endDist Il apendeaza pe (19.9, 6.95) endDist 2.4331050121192863
startDist Il apendeaza pe (14.85, 4.1) startDist 4.193447269252351
Before swap start end (14.85, 4.1) (19.9, 6.95) 0 7
After swap start end (19.9, 6.95) (14.85, 4.1) 0 7
p1 = (17.5, 7.35)
startIdx = 1 obj (15.7, 3.7)
endIdx = 6 obj (20.5, 7.0)
startDIST = 4.0697051490249265 obj (15.7, 3.7)
endDIST = 3.0203476621077914 obj (20.5, 7.0)
Pentru (20.5, 7.0) endDist este 3.0203476621077914 iar r-eps este 1.1400000000000001
endDist Il apendeaza pe (20.5, 7.0) endDist 3.0203476621077914
startDist Il apendeaza pe (15.7, 3.7) startDist 4.0697051490249265
Before swap start end (15.7, 3.7) (20.5, 7.0) 1 6
After swap start end (20.5, 7.0) (15.7, 3.7) 1 6
p1 = (17.5, 7.35)
startIdx = 2 obj (16.55, 3.5)
endIdx = 5 obj (21.25, 7.05)
startDIST = 3.96547601177967 obj (16.55, 3.5)
endDIST = 3.761980861195336 obj (21.25, 7.05)
Pentru (21.25, 7.05) endDist este 3.761980861195336 iar r-eps este 1.1400000000000001
endDist Il apendeaza pe (21.25, 7.05) endDist 3.761980861195336
startDist Il apendeaza pe (16.55, 3.5) startDist 3.96547601177967
Before swap start end (16.55, 3.5) (21.25, 7.05) 2 5
After swap start end (21.25, 7.05) (16.55, 3.5) 2 5
p1 = (17.5, 7.35)
startIdx = 3 obj (17.3, 3.25)
endIdx = 4 obj (21.9, 7.1)
startDIST = 4.104875150354758 obj (17.3, 3.25)
endDIST = 4.40709654988406 obj (21.9, 7.1)
PRIMUL WHILE endIdx = 4 obj (21.9, 7.1) endDist 4.40709654988406
endDist Il apendeaza pe (21.9, 7.1) endDist 4.40709654988406
sunt egale 3 3
========================= WIN L ===================
[(19.9, 6.95), (20.5, 7.0), (21.25, 7.05)]
========================= WIN L END ===================
========================= WIN G ===================
[(14.85, 4.1), (15.7, 3.7), (16.55, 3.5), (21.9, 7.1), (17.3, 3.25)]
========================= WIN G END ===================
========================= OBJS first half ===================
[(19.9, 6.95), (20.5, 7.0)]
========================= OBJS first half END ===================
========================= OBJS last half ===================
[(21.25, 7.05), (17.3, 3.25), (21.9, 7.1), (16.55, 3.5), (15.7, 3.7), (14.85, 4.1)]
========================= OBJS last half END ===================
Intra in win
win len(objs), len(objs1), len(objs2), constSmallNumber 9 | [(18.75, 7.1), (18.05, 7.25), (17.5, 7.35), (19.25, 7.05)] | [(14.85, 4.1), (15.7, 3.7), (16.55, 3.5), (21.9, 7.1), (17.3, 3.25)] | 10
nested loop vine din 
nested loop objs1, objs2 [(18.75, 7.1), (18.05, 7.25), (17.5, 7.35), (19.25, 7.05)][(14.85, 4.1), (15.7, 3.7), (16.55, 3.5), (21.9, 7.1), (17.3, 3.25)]
Intra in win
Una dintre partitii e 1, n-am de ce sa continui
nested loop objs1, objs2 [(15.4, 8.35)][(19.9, 6.95), (20.5, 7.0), (21.25, 7.05)]
Intra in win
win len(objs), len(objs1), len(objs2), constSmallNumber 7 | [(18.75, 7.1), (18.05, 7.25), (17.5, 7.35), (19.25, 7.05)] | [(19.9, 6.95), (20.5, 7.0), (21.25, 7.05)] | 10
nested loop vine din 
nested loop objs1, objs2 [(18.75, 7.1), (18.05, 7.25), (17.5, 7.35), (19.25, 7.05)][(19.9, 6.95), (20.5, 7.0), (21.25, 7.05)]
Intra in win
Una dintre partitii e 1, n-am de ce sa continui
nested loop objs1, objs2 [(15.4, 8.35)][(17.3, 3.25), (21.9, 7.1), (16.55, 3.5), (15.7, 3.7), (14.85, 4.1)]
quick len(objs), constSmallNumber 8 10
quick len(objs), constSmallNumber 8 10
quick len(objs), constSmallNumber 78 10
p1 = (22.35, 15.8) len objs = 78
r is 6.8
new r is 6.8
p1 = (22.35, 15.8)
startIdx = 0 obj (17.0, 12.05)
endIdx = 77 obj (22.15, 15.55)
startDIST = 6.533375850201794 obj (17.0, 12.05)
endDIST = 0.3201562118716442 obj (22.15, 15.55)
AL DOILEA WHILE startIdx = 0 obj (17.0, 12.05) start 6.533375850201794
startDist Il apendeaza pe (17.0, 12.05) endDist 6.533375850201794
AL DOILEA WHILE startIdx = 1 obj (17.2, 11.95) start 6.430007776045067
startDist Il apendeaza pe (17.2, 11.95) endDist 6.430007776045067
AL DOILEA WHILE startIdx = 2 obj (17.5, 11.7) start 6.350787352761863
startDist Il apendeaza pe (17.5, 11.7) endDist 6.350787352761863
AL DOILEA WHILE startIdx = 3 obj (17.85, 11.5) start 6.224146527838175
startDist Il apendeaza pe (17.85, 11.5) endDist 6.224146527838175
AL DOILEA WHILE startIdx = 4 obj (18.15, 11.35) start 6.119027700541977
startDist Il apendeaza pe (18.15, 11.35) endDist 6.119027700541977
AL DOILEA WHILE startIdx = 5 obj (18.45, 11.25) start 5.9927038972403786
startDist Il apendeaza pe (18.45, 11.25) endDist 5.9927038972403786
AL DOILEA WHILE startIdx = 6 obj (18.85, 11.1) start 5.860034129593446
startDist Il apendeaza pe (18.85, 11.1) endDist 5.860034129593446
AL DOILEA WHILE startIdx = 7 obj (19.15, 11.05) start 5.727346680619221
startDist Il apendeaza pe (19.15, 11.05) endDist 5.727346680619221
AL DOILEA WHILE startIdx = 8 obj (19.55, 11.0) start 5.556977595779923
startDist Il apendeaza pe (19.55, 11.0) endDist 5.556977595779923
AL DOILEA WHILE startIdx = 9 obj (19.95, 11.0) start 5.366563145999497
startDist Il apendeaza pe (19.95, 11.0) endDist 5.366563145999497
AL DOILEA WHILE startIdx = 10 obj (20.35, 10.95) start 5.246189093046496
startDist Il apendeaza pe (20.35, 10.95) endDist 5.246189093046496
AL DOILEA WHILE startIdx = 11 obj (20.7, 10.95) start 5.122987409705398
startDist Il apendeaza pe (20.7, 10.95) endDist 5.122987409705398
AL DOILEA WHILE startIdx = 12 obj (21.1, 11.0) start 4.9600907249767126
startDist Il apendeaza pe (21.1, 11.0) endDist 4.9600907249767126
AL DOILEA WHILE startIdx = 13 obj (21.45, 11.05) start 4.834511350695125
startDist Il apendeaza pe (21.45, 11.05) endDist 4.834511350695125
AL DOILEA WHILE startIdx = 14 obj (21.9, 11.1) start 4.721493407810712
startDist Il apendeaza pe (21.9, 11.1) endDist 4.721493407810712
AL DOILEA WHILE startIdx = 15 obj (22.3, 11.3) start 4.500277769204919
startDist Il apendeaza pe (22.3, 11.3) endDist 4.500277769204919
AL DOILEA WHILE startIdx = 16 obj (22.75, 11.4) start 4.418144406874904
startDist Il apendeaza pe (22.75, 11.4) endDist 4.418144406874904
AL DOILEA WHILE startIdx = 17 obj (23.2, 11.65) start 4.236153915995026
startDist Il apendeaza pe (23.2, 11.65) endDist 4.236153915995026
AL DOILEA WHILE startIdx = 18 obj (23.55, 11.85) start 4.128256290493604
startDist Il apendeaza pe (23.55, 11.85) endDist 4.128256290493604
AL DOILEA WHILE startIdx = 19 obj (24.05, 12.2) start 3.9812058474788774
AL DOILEA WHILE startIdx = 20 obj (24.4, 12.45) start 3.9274673773310957
AL DOILEA WHILE startIdx = 21 obj (24.8, 12.7) start 3.9512656200260703
AL DOILEA WHILE startIdx = 22 obj (25.05, 12.95) start 3.925875698490721
AL DOILEA WHILE startIdx = 23 obj (25.35, 13.3) start 3.905124837953327
AL DOILEA WHILE startIdx = 24 obj (25.75, 13.7) start 3.9962482405376165
AL DOILEA WHILE startIdx = 25 obj (25.95, 14.1) start 3.981205847478875
AL DOILEA WHILE startIdx = 26 obj (26.3, 14.45) start 4.1743262929483596
startDist Il apendeaza pe (26.3, 14.45) endDist 4.1743262929483596
AL DOILEA WHILE startIdx = 27 obj (26.55, 14.85) start 4.306100323959022
startDist Il apendeaza pe (26.55, 14.85) endDist 4.306100323959022
AL DOILEA WHILE startIdx = 28 obj (26.75, 15.35) start 4.422951503238532
startDist Il apendeaza pe (26.75, 15.35) endDist 4.422951503238532
AL DOILEA WHILE startIdx = 29 obj (27.0, 15.9) start 4.651075144523037
startDist Il apendeaza pe (27.0, 15.9) endDist 4.651075144523037
AL DOILEA WHILE startIdx = 30 obj (27.0, 16.4) start 4.688549882426333
startDist Il apendeaza pe (27.0, 16.4) endDist 4.688549882426333
AL DOILEA WHILE startIdx = 31 obj (27.15, 16.9) start 4.924428900898049
startDist Il apendeaza pe (27.15, 16.9) endDist 4.924428900898049
Pentru (22.15, 15.55) endDist este 0.3201562118716442 iar r-eps este 4.0
Before swap start end (22.75, 3.15) (22.15, 15.55) 32 77
After swap start end (22.15, 15.55) (22.75, 3.15) 32 77
p1 = (22.35, 15.8)
startIdx = 33 obj (23.6, 3.3)
endIdx = 76 obj (22.2, 15.65)
startDIST = 12.562344526401112 obj (23.6, 3.3)
endDIST = 0.21213203435596603 obj (22.2, 15.65)
Pentru (22.2, 15.65) endDist este 0.21213203435596603 iar r-eps este 4.0
Before swap start end (23.6, 3.3) (22.2, 15.65) 33 76
After swap start end (22.2, 15.65) (23.6, 3.3) 33 76
p1 = (22.35, 15.8)
startIdx = 34 obj (24.6, 3.6)
endIdx = 75 obj (22.35, 15.8)
startDIST = 12.4057446370623 obj (24.6, 3.6)
endDIST = 0.0 obj (22.35, 15.8)
Pentru (22.35, 15.8) endDist este 0.0 iar r-eps este 4.0
Before swap start end (24.6, 3.6) (22.35, 15.8) 34 75
After swap start end (22.35, 15.8) (24.6, 3.6) 34 75
p1 = (22.35, 15.8)
startIdx = 35 obj (25.4, 3.85)
endIdx = 74 obj (22.4, 15.95)
startDIST = 12.333085583097201 obj (25.4, 3.85)
endDIST = 0.15811388300841672 obj (22.4, 15.95)
Pentru (22.4, 15.95) endDist este 0.15811388300841672 iar r-eps este 4.0
Before swap start end (25.4, 3.85) (22.4, 15.95) 35 74
After swap start end (22.4, 15.95) (25.4, 3.85) 35 74
p1 = (22.35, 15.8)
startIdx = 36 obj (26.35, 4.15)
endIdx = 73 obj (22.55, 16.05)
startDIST = 12.317568753613678 obj (26.35, 4.15)
endDIST = 0.320156211871642 obj (22.55, 16.05)
Pentru (22.55, 16.05) endDist este 0.320156211871642 iar r-eps este 4.0
Before swap start end (26.35, 4.15) (22.55, 16.05) 36 73
After swap start end (22.55, 16.05) (26.35, 4.15) 36 73
p1 = (22.35, 15.8)
startIdx = 37 obj (27.2, 4.55)
endIdx = 72 obj (22.6, 16.2)
startDIST = 12.250918332925087 obj (27.2, 4.55)
endDIST = 0.471699056602829 obj (22.6, 16.2)
Pentru (22.6, 16.2) endDist este 0.471699056602829 iar r-eps este 4.0
Before swap start end (27.2, 4.55) (22.6, 16.2) 37 72
After swap start end (22.6, 16.2) (27.2, 4.55) 37 72
p1 = (22.35, 15.8)
startIdx = 38 obj (28.05, 5.0)
endIdx = 71 obj (22.7, 16.4)
startDIST = 12.211879462228572 obj (28.05, 5.0)
endDIST = 0.6946221994724873 obj (22.7, 16.4)
Pentru (22.7, 16.4) endDist este 0.6946221994724873 iar r-eps este 4.0
Before swap start end (28.05, 5.0) (22.7, 16.4) 38 71
After swap start end (22.7, 16.4) (28.05, 5.0) 38 71
p1 = (22.35, 15.8)
startIdx = 39 obj (28.9, 5.55)
endIdx = 70 obj (22.0, 15.4)
startDIST = 12.16408648440153 obj (28.9, 5.55)
endDIST = 0.5315072906367337 obj (22.0, 15.4)
Pentru (22.0, 15.4) endDist este 0.5315072906367337 iar r-eps este 4.0
Before swap start end (28.9, 5.55) (22.0, 15.4) 39 70
After swap start end (22.0, 15.4) (28.9, 5.55) 39 70
p1 = (22.35, 15.8)
startIdx = 40 obj (29.7, 6.0)
endIdx = 69 obj (21.9, 15.3)
startDIST = 12.25 obj (29.7, 6.0)
endDIST = 0.6726812023536874 obj (21.9, 15.3)
Pentru (21.9, 15.3) endDist este 0.6726812023536874 iar r-eps este 4.0
Before swap start end (29.7, 6.0) (21.9, 15.3) 40 69
After swap start end (21.9, 15.3) (29.7, 6.0) 40 69
p1 = (22.35, 15.8)
startIdx = 41 obj (30.45, 6.65)
endIdx = 68 obj (21.85, 15.25)
startDIST = 12.220167756622656 obj (30.45, 6.65)
endDIST = 0.7433034373659257 obj (21.85, 15.25)
Pentru (21.85, 15.25) endDist este 0.7433034373659257 iar r-eps este 4.0
Before swap start end (30.45, 6.65) (21.85, 15.25) 41 68
After swap start end (21.85, 15.25) (30.45, 6.65) 41 68
p1 = (22.35, 15.8)
startIdx = 42 obj (31.15, 7.3)
endIdx = 67 obj (21.75, 15.15)
startDIST = 12.234786471369247 obj (31.15, 7.3)
endDIST = 0.8845903006477078 obj (21.75, 15.15)
Pentru (21.75, 15.15) endDist este 0.8845903006477078 iar r-eps este 4.0
Before swap start end (31.15, 7.3) (21.75, 15.15) 42 67
After swap start end (21.75, 15.15) (31.15, 7.3) 42 67
p1 = (22.35, 15.8)
startIdx = 43 obj (31.95, 7.95)
endIdx = 66 obj (21.65, 15.05)
startDIST = 12.400907224876734 obj (31.95, 7.95)
endDIST = 1.0259142264341614 obj (21.65, 15.05)
Pentru (21.65, 15.05) endDist este 1.0259142264341614 iar r-eps este 4.0
Before swap start end (31.95, 7.95) (21.65, 15.05) 43 66
After swap start end (21.65, 15.05) (31.95, 7.95) 43 66
p1 = (22.35, 15.8)
startIdx = 44 obj (22.5, 7.3)
endIdx = 65 obj (21.55, 15.0)
startDIST = 8.50132342638486 obj (22.5, 7.3)
endDIST = 1.1313708498984771 obj (21.55, 15.0)
Pentru (21.55, 15.0) endDist este 1.1313708498984771 iar r-eps este 4.0
startDist Il apendeaza pe (22.5, 7.3) startDist 8.50132342638486
Before swap start end (22.5, 7.3) (21.55, 15.0) 44 65
After swap start end (21.55, 15.0) (22.5, 7.3) 44 65
p1 = (22.35, 15.8)
startIdx = 45 obj (23.15, 7.4)
endIdx = 64 obj (21.5, 14.9)
startDIST = 8.438009243891594 obj (23.15, 7.4)
endDIST = 1.237941840313996 obj (21.5, 14.9)
Pentru (21.5, 14.9) endDist este 1.237941840313996 iar r-eps este 4.0
startDist Il apendeaza pe (23.15, 7.4) startDist 8.438009243891594
Before swap start end (23.15, 7.4) (21.5, 14.9) 45 64
After swap start end (21.5, 14.9) (23.15, 7.4) 45 64
p1 = (22.35, 15.8)
startIdx = 46 obj (23.9, 7.65)
endIdx = 63 obj (31.45, 16.55)
startDIST = 8.296083413274001 obj (23.9, 7.65)
endDIST = 9.130854286429061 obj (31.45, 16.55)
PRIMUL WHILE endIdx = 63 obj (31.45, 16.55) endDist 9.130854286429061
endDist Il apendeaza pe (31.45, 16.55) endDist 9.130854286429061
PRIMUL WHILE endIdx = 62 obj (31.3, 15.8) endDist 8.95
endDist Il apendeaza pe (31.3, 15.8) endDist 8.95
PRIMUL WHILE endIdx = 61 obj (31.15, 15.05) endDist 8.831902399823038
endDist Il apendeaza pe (31.15, 15.05) endDist 8.831902399823038
PRIMUL WHILE endIdx = 60 obj (30.9, 14.35) endDist 8.672081641682114
endDist Il apendeaza pe (30.9, 14.35) endDist 8.672081641682114
PRIMUL WHILE endIdx = 59 obj (30.6, 13.65) endDist 8.525549835641101
endDist Il apendeaza pe (30.6, 13.65) endDist 8.525549835641101
PRIMUL WHILE endIdx = 58 obj (30.3, 13.0) endDist 8.428671306914275
endDist Il apendeaza pe (30.3, 13.0) endDist 8.428671306914275
PRIMUL WHILE endIdx = 57 obj (29.9, 12.3) endDist 8.321808697632983
endDist Il apendeaza pe (29.9, 12.3) endDist 8.321808697632983
PRIMUL WHILE endIdx = 56 obj (29.5, 11.75) endDist 8.217359673277056
endDist Il apendeaza pe (29.5, 11.75) endDist 8.217359673277056
PRIMUL WHILE endIdx = 55 obj (29.0, 11.15) endDist 8.114493206602615
endDist Il apendeaza pe (29.0, 11.15) endDist 8.114493206602615
PRIMUL WHILE endIdx = 54 obj (28.5, 10.6) endDist 8.053725845843028
endDist Il apendeaza pe (28.5, 10.6) endDist 8.053725845843028
PRIMUL WHILE endIdx = 53 obj (28.0, 10.1) endDist 8.025739841285661
endDist Il apendeaza pe (28.0, 10.1) endDist 8.025739841285661
PRIMUL WHILE endIdx = 52 obj (27.55, 9.65) endDist 8.053725845843028
endDist Il apendeaza pe (27.55, 9.65) endDist 8.053725845843028
PRIMUL WHILE endIdx = 51 obj (26.9, 9.1) endDist 8.098919681043885
endDist Il apendeaza pe (26.9, 9.1) endDist 8.098919681043885
PRIMUL WHILE endIdx = 50 obj (26.25, 8.8) endDist 8.01311425102625
endDist Il apendeaza pe (26.25, 8.8) endDist 8.01311425102625
PRIMUL WHILE endIdx = 49 obj (25.7, 8.4) endDist 8.122961282685027
endDist Il apendeaza pe (25.7, 8.4) endDist 8.122961282685027
PRIMUL WHILE endIdx = 48 obj (25.15, 8.05) endDist 8.240297324732888
endDist Il apendeaza pe (25.15, 8.05) endDist 8.240297324732888
PRIMUL WHILE endIdx = 47 obj (24.5, 7.75) endDist 8.332166584988565
endDist Il apendeaza pe (24.5, 7.75) endDist 8.332166584988565
sunt egale 46 46
========================= WIN L ===================
[(17.0, 12.05), (17.2, 11.95), (17.5, 11.7), (17.85, 11.5), (18.15, 11.35), (18.45, 11.25), (18.85, 11.1), (19.15, 11.05), (19.55, 11.0), (19.95, 11.0), (20.35, 10.95), (20.7, 10.95), (21.1, 11.0), (21.45, 11.05), (21.9, 11.1), (22.3, 11.3), (22.75, 11.4), (23.2, 11.65), (23.55, 11.85), (26.3, 14.45), (26.55, 14.85), (26.75, 15.35), (27.0, 15.9), (27.0, 16.4), (27.15, 16.9)]
========================= WIN L END ===================
========================= WIN G ===================
[(22.5, 7.3), (23.15, 7.4), (31.45, 16.55), (31.3, 15.8), (31.15, 15.05), (30.9, 14.35), (30.6, 13.65), (30.3, 13.0), (29.9, 12.3), (29.5, 11.75), (29.0, 11.15), (28.5, 10.6), (28.0, 10.1), (27.55, 9.65), (26.9, 9.1), (26.25, 8.8), (25.7, 8.4), (25.15, 8.05), (24.5, 7.75), (23.9, 7.65)]
========================= WIN G END ===================
========================= OBJS first half ===================
[(17.0, 12.05), (17.2, 11.95), (17.5, 11.7), (17.85, 11.5), (18.15, 11.35), (18.45, 11.25), (18.85, 11.1), (19.15, 11.05), (19.55, 11.0), (19.95, 11.0), (20.35, 10.95), (20.7, 10.95), (21.1, 11.0), (21.45, 11.05), (21.9, 11.1), (22.3, 11.3), (22.75, 11.4), (23.2, 11.65), (23.55, 11.85), (24.05, 12.2), (24.4, 12.45), (24.8, 12.7), (25.05, 12.95), (25.35, 13.3), (25.75, 13.7), (25.95, 14.1), (26.3, 14.45), (26.55, 14.85), (26.75, 15.35), (27.0, 15.9), (27.0, 16.4), (27.15, 16.9), (22.15, 15.55), (22.2, 15.65), (22.35, 15.8), (22.4, 15.95), (22.55, 16.05), (22.6, 16.2), (22.7, 16.4), (22.0, 15.4), (21.9, 15.3), (21.85, 15.25), (21.75, 15.15), (21.65, 15.05), (21.55, 15.0)]
========================= OBJS first half END ===================
========================= OBJS last half ===================
[(21.5, 14.9), (23.9, 7.65), (24.5, 7.75), (25.15, 8.05), (25.7, 8.4), (26.25, 8.8), (26.9, 9.1), (27.55, 9.65), (28.0, 10.1), (28.5, 10.6), (29.0, 11.15), (29.5, 11.75), (29.9, 12.3), (30.3, 13.0), (30.6, 13.65), (30.9, 14.35), (31.15, 15.05), (31.3, 15.8), (31.45, 16.55), (23.15, 7.4), (22.5, 7.3), (31.95, 7.95), (31.15, 7.3), (30.45, 6.65), (29.7, 6.0), (28.9, 5.55), (28.05, 5.0), (27.2, 4.55), (26.35, 4.15), (25.4, 3.85), (24.6, 3.6), (23.6, 3.3), (22.75, 3.15)]
========================= OBJS last half END ===================
Intra in win
win len(objs), len(objs1), len(objs2), constSmallNumber 45 | [(17.0, 12.05), (17.2, 11.95), (17.5, 11.7), (17.85, 11.5), (18.15, 11.35), (18.45, 11.25), (18.85, 11.1), (19.15, 11.05), (19.55, 11.0), (19.95, 11.0), (20.35, 10.95), (20.7, 10.95), (21.1, 11.0), (21.45, 11.05), (21.9, 11.1), (22.3, 11.3), (22.75, 11.4), (23.2, 11.65), (23.55, 11.85), (26.3, 14.45), (26.55, 14.85), (26.75, 15.35), (27.0, 15.9), (27.0, 16.4), (27.15, 16.9)] | [(22.5, 7.3), (23.15, 7.4), (31.45, 16.55), (31.3, 15.8), (31.15, 15.05), (30.9, 14.35), (30.6, 13.65), (30.3, 13.0), (29.9, 12.3), (29.5, 11.75), (29.0, 11.15), (28.5, 10.6), (28.0, 10.1), (27.55, 9.65), (26.9, 9.1), (26.25, 8.8), (25.7, 8.4), (25.15, 8.05), (24.5, 7.75), (23.9, 7.65)] | 10
p1 = (28.5, 10.6) len objs = 25
r is 4.59
new r is 4.59
p1 = (28.5, 10.6)
startIdx = 0 obj (17.0, 12.05)
endIdx = 24 obj (27.15, 16.9)
startDIST = 11.591052583782027 obj (17.0, 12.05)
endDIST = 6.443019478474358 obj (27.15, 16.9)
PRIMUL WHILE endIdx = 24 obj (27.15, 16.9) endDist 6.443019478474358
endDist Il apendeaza pe (27.15, 16.9) endDist 6.443019478474358
PRIMUL WHILE endIdx = 23 obj (27.0, 16.4) endDist 5.990826320300062
endDist Il apendeaza pe (27.0, 16.4) endDist 5.990826320300062
PRIMUL WHILE endIdx = 22 obj (27.0, 15.9) endDist 5.508175741568166
endDist Il apendeaza pe (27.0, 15.9) endDist 5.508175741568166
PRIMUL WHILE endIdx = 21 obj (26.75, 15.35) endDist 5.062114182829147
endDist Il apendeaza pe (26.75, 15.35) endDist 5.062114182829147
PRIMUL WHILE endIdx = 20 obj (26.55, 14.85) endDist 4.676002566295275
endDist Il apendeaza pe (26.55, 14.85) endDist 4.676002566295275
Pentru (26.3, 14.45) endDist este 4.434241761564202 iar r-eps este 1.79
endDist Il apendeaza pe (26.3, 14.45) endDist 4.434241761564202
Before swap start end (17.0, 12.05) (26.3, 14.45) 0 19
After swap start end (26.3, 14.45) (17.0, 12.05) 0 19
p1 = (28.5, 10.6)
startIdx = 1 obj (17.2, 11.95)
endIdx = 18 obj (23.55, 11.85)
startDIST = 11.380355881957296 obj (17.2, 11.95)
endDIST = 5.105389309347524 obj (23.55, 11.85)
PRIMUL WHILE endIdx = 18 obj (23.55, 11.85) endDist 5.105389309347524
endDist Il apendeaza pe (23.55, 11.85) endDist 5.105389309347524
PRIMUL WHILE endIdx = 17 obj (23.2, 11.65) endDist 5.4030084212408935
endDist Il apendeaza pe (23.2, 11.65) endDist 5.4030084212408935
PRIMUL WHILE endIdx = 16 obj (22.75, 11.4) endDist 5.805385430787521
endDist Il apendeaza pe (22.75, 11.4) endDist 5.805385430787521
PRIMUL WHILE endIdx = 15 obj (22.3, 11.3) endDist 6.239390995922598
endDist Il apendeaza pe (22.3, 11.3) endDist 6.239390995922598
PRIMUL WHILE endIdx = 14 obj (21.9, 11.1) endDist 6.6189122973491665
endDist Il apendeaza pe (21.9, 11.1) endDist 6.6189122973491665
PRIMUL WHILE endIdx = 13 obj (21.45, 11.05) endDist 7.064347103589971
endDist Il apendeaza pe (21.45, 11.05) endDist 7.064347103589971
PRIMUL WHILE endIdx = 12 obj (21.1, 11.0) endDist 7.410802925459561
PRIMUL WHILE endIdx = 11 obj (20.7, 10.95) endDist 7.807848615335726
PRIMUL WHILE endIdx = 10 obj (20.35, 10.95) endDist 8.157511875565978
PRIMUL WHILE endIdx = 9 obj (19.95, 11.0) endDist 8.559351610957457
PRIMUL WHILE endIdx = 8 obj (19.55, 11.0) endDist 8.958934088383506
PRIMUL WHILE endIdx = 7 obj (19.15, 11.05) endDist 9.36082261342453
PRIMUL WHILE endIdx = 6 obj (18.85, 11.1) endDist 9.662944685757028
PRIMUL WHILE endIdx = 5 obj (18.45, 11.25) endDist 10.070997964452182
PRIMUL WHILE endIdx = 4 obj (18.15, 11.35) endDist 10.377138333856788
PRIMUL WHILE endIdx = 3 obj (17.85, 11.5) endDist 10.687960516394135
PRIMUL WHILE endIdx = 2 obj (17.5, 11.7) endDist 11.054863183232978
sunt egale 1 1
========================= WIN L ===================
[(26.3, 14.45)]
========================= WIN L END ===================
========================= WIN G ===================
[(27.15, 16.9), (27.0, 16.4), (27.0, 15.9), (26.75, 15.35), (26.55, 14.85), (23.55, 11.85), (23.2, 11.65), (22.75, 11.4), (22.3, 11.3), (21.9, 11.1), (21.45, 11.05)]
========================= WIN G END ===================
========================= OBJS first half ===================
[]
========================= OBJS first half END ===================
========================= OBJS last half ===================
[(26.3, 14.45), (17.2, 11.95), (17.5, 11.7), (17.85, 11.5), (18.15, 11.35), (18.45, 11.25), (18.85, 11.1), (19.15, 11.05), (19.55, 11.0), (19.95, 11.0), (20.35, 10.95), (20.7, 10.95), (21.1, 11.0), (21.45, 11.05), (21.9, 11.1), (22.3, 11.3), (22.75, 11.4), (23.2, 11.65), (23.55, 11.85), (17.0, 12.05), (26.55, 14.85), (26.75, 15.35), (27.0, 15.9), (27.0, 16.4), (27.15, 16.9)]
========================= OBJS last half END ===================
p1 = (28.5, 10.6) len objs = 20
r is 4.96
new r is 4.96
p1 = (28.5, 10.6)
startIdx = 0 obj (22.5, 7.3)
endIdx = 19 obj (23.9, 7.65)
startDIST = 6.847627326307997 obj (22.5, 7.3)
endDIST = 5.464659184249281 obj (23.9, 7.65)
PRIMUL WHILE endIdx = 19 obj (23.9, 7.65) endDist 5.464659184249281
endDist Il apendeaza pe (23.9, 7.65) endDist 5.464659184249281
Pentru (24.5, 7.75) endDist este 4.911466176204413 iar r-eps este 2.16
endDist Il apendeaza pe (24.5, 7.75) endDist 4.911466176204413
startDist Il apendeaza pe (22.5, 7.3) startDist 6.847627326307997
Before swap start end (22.5, 7.3) (24.5, 7.75) 0 18
After swap start end (24.5, 7.75) (22.5, 7.3) 0 18
p1 = (28.5, 10.6)
startIdx = 1 obj (23.15, 7.4)
endIdx = 17 obj (25.15, 8.05)
startDIST = 6.2339794674028255 obj (23.15, 7.4)
endDIST = 4.210106887004177 obj (25.15, 8.05)
Pentru (25.15, 8.05) endDist este 4.210106887004177 iar r-eps este 2.16
endDist Il apendeaza pe (25.15, 8.05) endDist 4.210106887004177
startDist Il apendeaza pe (23.15, 7.4) startDist 6.2339794674028255
Before swap start end (23.15, 7.4) (25.15, 8.05) 1 17
After swap start end (25.15, 8.05) (23.15, 7.4) 1 17
p1 = (28.5, 10.6)
startIdx = 2 obj (31.45, 16.55)
endIdx = 16 obj (25.7, 8.4)
startDIST = 6.641159537309731 obj (31.45, 16.55)
endDIST = 3.5608987629529714 obj (25.7, 8.4)
Pentru (25.7, 8.4) endDist este 3.5608987629529714 iar r-eps este 2.16
endDist Il apendeaza pe (25.7, 8.4) endDist 3.5608987629529714
startDist Il apendeaza pe (31.45, 16.55) startDist 6.641159537309731
Before swap start end (31.45, 16.55) (25.7, 8.4) 2 16
After swap start end (25.7, 8.4) (31.45, 16.55) 2 16
p1 = (28.5, 10.6)
startIdx = 3 obj (31.3, 15.8)
endIdx = 15 obj (26.25, 8.8)
startDIST = 5.905929224093362 obj (31.3, 15.8)
endDIST = 2.8814059068447815 obj (26.25, 8.8)
Pentru (26.25, 8.8) endDist este 2.8814059068447815 iar r-eps este 2.16
endDist Il apendeaza pe (26.25, 8.8) endDist 2.8814059068447815
startDist Il apendeaza pe (31.3, 15.8) startDist 5.905929224093362
Before swap start end (31.3, 15.8) (26.25, 8.8) 3 15
After swap start end (26.25, 8.8) (31.3, 15.8) 3 15
p1 = (28.5, 10.6)
startIdx = 4 obj (31.15, 15.05)
endIdx = 14 obj (26.9, 9.1)
startDIST = 5.179285665031424 obj (31.15, 15.05)
endDIST = 2.193171219946132 obj (26.9, 9.1)
Pentru (26.9, 9.1) endDist este 2.193171219946132 iar r-eps este 2.16
endDist Il apendeaza pe (26.9, 9.1) endDist 2.193171219946132
startDist Il apendeaza pe (31.15, 15.05) startDist 5.179285665031424
Before swap start end (31.15, 15.05) (26.9, 9.1) 4 14
After swap start end (26.9, 9.1) (31.15, 15.05) 4 14
p1 = (28.5, 10.6)
startIdx = 5 obj (30.9, 14.35)
endIdx = 13 obj (27.55, 9.65)
startDIST = 4.452246623896748 obj (30.9, 14.35)
endDIST = 1.3435028842544392 obj (27.55, 9.65)
AL DOILEA WHILE startIdx = 5 obj (30.9, 14.35) start 4.452246623896748
startDist Il apendeaza pe (30.9, 14.35) endDist 4.452246623896748
AL DOILEA WHILE startIdx = 6 obj (30.6, 13.65) start 3.703039292257106
startDist Il apendeaza pe (30.6, 13.65) endDist 3.703039292257106
AL DOILEA WHILE startIdx = 7 obj (30.3, 13.0) start 3.0000000000000004
startDist Il apendeaza pe (30.3, 13.0) endDist 3.0000000000000004
AL DOILEA WHILE startIdx = 8 obj (29.9, 12.3) start 2.202271554554524
startDist Il apendeaza pe (29.9, 12.3) endDist 2.202271554554524
AL DOILEA WHILE startIdx = 9 obj (29.5, 11.75) start 1.5239750654128172
AL DOILEA WHILE startIdx = 10 obj (29.0, 11.15) start 0.7433034373659257
AL DOILEA WHILE startIdx = 11 obj (28.5, 10.6) start 0.0
AL DOILEA WHILE startIdx = 12 obj (28.0, 10.1) start 0.7071067811865476
sunt egale 13 13
========================= WIN L ===================
[(24.5, 7.75), (25.15, 8.05), (25.7, 8.4), (26.25, 8.8), (26.9, 9.1), (30.9, 14.35), (30.6, 13.65), (30.3, 13.0), (29.9, 12.3)]
========================= WIN L END ===================
========================= WIN G ===================
[(23.9, 7.65), (22.5, 7.3), (23.15, 7.4), (31.45, 16.55), (31.3, 15.8), (31.15, 15.05)]
========================= WIN G END ===================
========================= OBJS first half ===================
[(24.5, 7.75), (25.15, 8.05), (25.7, 8.4), (26.25, 8.8), (26.9, 9.1), (30.9, 14.35), (30.6, 13.65), (30.3, 13.0), (29.9, 12.3), (29.5, 11.75), (29.0, 11.15), (28.5, 10.6), (28.0, 10.1)]
========================= OBJS first half END ===================
========================= OBJS last half ===================
[(27.55, 9.65), (31.15, 15.05), (31.3, 15.8), (31.45, 16.55), (23.15, 7.4), (22.5, 7.3), (23.9, 7.65)]
========================= OBJS last half END ===================
Intra in win
Una dintre partitii e 1, n-am de ce sa continui
nested loop objs1, objs2 [(26.3, 14.45)][(23.9, 7.65), (22.5, 7.3), (23.15, 7.4), (31.45, 16.55), (31.3, 15.8), (31.15, 15.05)]
Intra in win
win len(objs), len(objs1), len(objs2), constSmallNumber 20 | [(27.15, 16.9), (27.0, 16.4), (27.0, 15.9), (26.75, 15.35), (26.55, 14.85), (23.55, 11.85), (23.2, 11.65), (22.75, 11.4), (22.3, 11.3), (21.9, 11.1), (21.45, 11.05)] | [(24.5, 7.75), (25.15, 8.05), (25.7, 8.4), (26.25, 8.8), (26.9, 9.1), (30.9, 14.35), (30.6, 13.65), (30.3, 13.0), (29.9, 12.3)] | 10
p1 = (26.75, 15.35) len objs = 11
r is 3.91
new r is 3.91
p1 = (26.75, 15.35)
startIdx = 0 obj (27.15, 16.9)
endIdx = 10 obj (21.45, 11.05)
startDIST = 1.6007810593582108 obj (27.15, 16.9)
endDIST = 6.8249542123006215 obj (21.45, 11.05)
PRIMUL WHILE endIdx = 10 obj (21.45, 11.05) endDist 6.8249542123006215
PRIMUL WHILE endIdx = 9 obj (21.9, 11.1) endDist 6.448643268161142
endDist Il apendeaza pe (21.9, 11.1) endDist 6.448643268161142
PRIMUL WHILE endIdx = 8 obj (22.3, 11.3) endDist 6.017059082309229
endDist Il apendeaza pe (22.3, 11.3) endDist 6.017059082309229
PRIMUL WHILE endIdx = 7 obj (22.75, 11.4) endDist 5.621610089645136
endDist Il apendeaza pe (22.75, 11.4) endDist 5.621610089645136
PRIMUL WHILE endIdx = 6 obj (23.2, 11.65) endDist 5.127621280866987
endDist Il apendeaza pe (23.2, 11.65) endDist 5.127621280866987
PRIMUL WHILE endIdx = 5 obj (23.55, 11.85) endDist 4.74236228055175
endDist Il apendeaza pe (23.55, 11.85) endDist 4.74236228055175
AL DOILEA WHILE startIdx = 0 obj (27.15, 16.9) start 1.6007810593582108
startDist Il apendeaza pe (27.15, 16.9) endDist 1.6007810593582108
AL DOILEA WHILE startIdx = 1 obj (27.0, 16.4) start 1.0793516572461441
AL DOILEA WHILE startIdx = 2 obj (27.0, 15.9) start 0.6041522986797292
AL DOILEA WHILE startIdx = 3 obj (26.75, 15.35) start 0.0
sunt egale 4 4
========================= WIN L ===================
[(27.15, 16.9)]
========================= WIN L END ===================
========================= WIN G ===================
[(21.9, 11.1), (22.3, 11.3), (22.75, 11.4), (23.2, 11.65), (23.55, 11.85)]
========================= WIN G END ===================
========================= OBJS first half ===================
[(27.15, 16.9), (27.0, 16.4), (27.0, 15.9), (26.75, 15.35)]
========================= OBJS first half END ===================
========================= OBJS last half ===================
[(26.55, 14.85), (23.55, 11.85), (23.2, 11.65), (22.75, 11.4), (22.3, 11.3), (21.9, 11.1), (21.45, 11.05)]
========================= OBJS last half END ===================
p1 = (26.75, 15.35) len objs = 9
r is 4.38
new r is 4.38
p1 = (26.75, 15.35)
startIdx = 0 obj (24.5, 7.75)
endIdx = 8 obj (29.9, 12.3)
startDIST = 7.92606459726389 obj (24.5, 7.75)
endDIST = 4.384632253678749 obj (29.9, 12.3)
PRIMUL WHILE endIdx = 8 obj (29.9, 12.3) endDist 4.384632253678749
endDist Il apendeaza pe (29.9, 12.3) endDist 4.384632253678749
Pentru (30.3, 13.0) endDist este 4.257346591481601 iar r-eps este 1.58
endDist Il apendeaza pe (30.3, 13.0) endDist 4.257346591481601
Before swap start end (24.5, 7.75) (30.3, 13.0) 0 7
After swap start end (30.3, 13.0) (24.5, 7.75) 0 7
p1 = (26.75, 15.35)
startIdx = 1 obj (25.15, 8.05)
endIdx = 6 obj (30.6, 13.65)
startDIST = 7.473285756613351 obj (25.15, 8.05)
endDIST = 4.208622102303794 obj (30.6, 13.65)
Pentru (30.6, 13.65) endDist este 4.208622102303794 iar r-eps este 1.58
endDist Il apendeaza pe (30.6, 13.65) endDist 4.208622102303794
Before swap start end (25.15, 8.05) (30.6, 13.65) 1 6
After swap start end (30.6, 13.65) (25.15, 8.05) 1 6
p1 = (26.75, 15.35)
startIdx = 2 obj (25.7, 8.4)
endIdx = 5 obj (30.9, 14.35)
startDIST = 7.028869041318098 obj (25.7, 8.4)
endDIST = 4.268782027698298 obj (30.9, 14.35)
Pentru (30.9, 14.35) endDist este 4.268782027698298 iar r-eps este 1.58
endDist Il apendeaza pe (30.9, 14.35) endDist 4.268782027698298
startDist Il apendeaza pe (25.7, 8.4) startDist 7.028869041318098
Before swap start end (25.7, 8.4) (30.9, 14.35) 2 5
After swap start end (30.9, 14.35) (25.7, 8.4) 2 5
p1 = (26.75, 15.35)
startIdx = 3 obj (26.25, 8.8)
endIdx = 4 obj (26.9, 9.1)
startDIST = 6.569056248807738 obj (26.25, 8.8)
endDIST = 6.251799740874623 obj (26.9, 9.1)
PRIMUL WHILE endIdx = 4 obj (26.9, 9.1) endDist 6.251799740874623
endDist Il apendeaza pe (26.9, 9.1) endDist 6.251799740874623
sunt egale 3 3
========================= WIN L ===================
[(30.3, 13.0), (30.6, 13.65), (30.9, 14.35)]
========================= WIN L END ===================
========================= WIN G ===================
[(29.9, 12.3), (25.7, 8.4), (26.9, 9.1), (26.25, 8.8)]
========================= WIN G END ===================
========================= OBJS first half ===================
[(30.3, 13.0), (30.6, 13.65)]
========================= OBJS first half END ===================
========================= OBJS last half ===================
[(30.9, 14.35), (26.25, 8.8), (26.9, 9.1), (25.7, 8.4), (25.15, 8.05), (24.5, 7.75), (29.9, 12.3)]
========================= OBJS last half END ===================
Intra in win
Una dintre partitii e 1, n-am de ce sa continui
nested loop objs1, objs2 [(27.15, 16.9)][(29.9, 12.3), (25.7, 8.4), (26.9, 9.1), (26.25, 8.8)]
Intra in win
win len(objs), len(objs1), len(objs2), constSmallNumber 8 | [(21.9, 11.1), (22.3, 11.3), (22.75, 11.4), (23.2, 11.65), (23.55, 11.85)] | [(30.3, 13.0), (30.6, 13.65), (30.9, 14.35)] | 10
nested loop vine din 
nested loop objs1, objs2 [(21.9, 11.1), (22.3, 11.3), (22.75, 11.4), (23.2, 11.65), (23.55, 11.85)][(30.3, 13.0), (30.6, 13.65), (30.9, 14.35)]
Intra in win
win len(objs), len(objs1), len(objs2), constSmallNumber 8 | [(27.15, 16.9), (27.0, 16.4), (27.0, 15.9), (26.75, 15.35), (26.55, 14.85)] | [(30.3, 13.0), (30.6, 13.65), (30.9, 14.35)] | 10
nested loop vine din 
nested loop objs1, objs2 [(27.15, 16.9), (27.0, 16.4), (27.0, 15.9), (26.75, 15.35), (26.55, 14.85)][(30.3, 13.0), (30.6, 13.65), (30.9, 14.35)]
Intra in win
win len(objs), len(objs1), len(objs2), constSmallNumber 12 | [(23.55, 11.85), (23.2, 11.65), (22.75, 11.4), (22.3, 11.3), (21.9, 11.1), (21.45, 11.05)] | [(26.25, 8.8), (26.9, 9.1), (25.7, 8.4), (25.15, 8.05), (24.5, 7.75), (29.9, 12.3)] | 10
p1 = (24.5, 7.75) len objs = 6
r is 1.07
new r is 1.07
p1 = (24.5, 7.75)
startIdx = 0 obj (23.55, 11.85)
endIdx = 5 obj (21.45, 11.05)
startDIST = 4.208622102303793 obj (23.55, 11.85)
endDIST = 4.493606569338265 obj (21.45, 11.05)
PRIMUL WHILE endIdx = 5 obj (21.45, 11.05) endDist 4.493606569338265
PRIMUL WHILE endIdx = 4 obj (21.9, 11.1) endDist 4.240577790820492
PRIMUL WHILE endIdx = 3 obj (22.3, 11.3) endDist 4.176421913552318
PRIMUL WHILE endIdx = 2 obj (22.75, 11.4) endDist 4.04783892960182
PRIMUL WHILE endIdx = 1 obj (23.2, 11.65) endDist 4.110960958218894
sunt egale 0 0
========================= WIN L ===================
[]
========================= WIN L END ===================
========================= WIN G ===================
[]
========================= WIN G END ===================
========================= OBJS first half ===================
[(23.55, 11.85), (23.2, 11.65), (22.75, 11.4), (22.3, 11.3), (21.9, 11.1)]
========================= OBJS first half END ===================
========================= OBJS last half ===================
[(21.45, 11.05)]
========================= OBJS last half END ===================
p1 = (24.5, 7.75) len objs = 6
r is 2.82
new r is 2.82
p1 = (24.5, 7.75)
startIdx = 0 obj (26.25, 8.8)
endIdx = 5 obj (29.9, 12.3)
startDIST = 2.0408331631958556 obj (26.25, 8.8)
endDIST = 7.061338400048535 obj (29.9, 12.3)
PRIMUL WHILE endIdx = 5 obj (29.9, 12.3) endDist 7.061338400048535
AL DOILEA WHILE startIdx = 0 obj (26.25, 8.8) start 2.0408331631958556
startDist Il apendeaza pe (26.25, 8.8) endDist 2.0408331631958556
AL DOILEA WHILE startIdx = 1 obj (26.9, 9.1) start 2.7536339626028714
startDist Il apendeaza pe (26.9, 9.1) endDist 2.7536339626028714
AL DOILEA WHILE startIdx = 2 obj (25.7, 8.4) start 1.3647344063956177
startDist Il apendeaza pe (25.7, 8.4) endDist 1.3647344063956177
AL DOILEA WHILE startIdx = 3 obj (25.15, 8.05) start 0.7158910531638167
startDist Il apendeaza pe (25.15, 8.05) endDist 0.7158910531638167
sunt egale 4 4
========================= WIN L ===================
[(26.25, 8.8), (26.9, 9.1), (25.7, 8.4), (25.15, 8.05)]
========================= WIN L END ===================
========================= WIN G ===================
[]
========================= WIN G END ===================
========================= OBJS first half ===================
[(26.25, 8.8), (26.9, 9.1), (25.7, 8.4), (25.15, 8.05)]
========================= OBJS first half END ===================
========================= OBJS last half ===================
[(24.5, 7.75), (29.9, 12.3)]
========================= OBJS last half END ===================
nested loop vine din 
nested loop objs1, objs2 [][]
nested loop vine din 
nested loop objs1, objs2 [][(26.25, 8.8), (26.9, 9.1), (25.7, 8.4), (25.15, 8.05)]
nested loop vine din 
nested loop objs1, objs2 [][(26.25, 8.8), (26.9, 9.1), (25.7, 8.4), (25.15, 8.05), (24.5, 7.75)]
nested loop vine din 
nested loop objs1, objs2 [(23.55, 11.85), (23.2, 11.65), (22.75, 11.4), (22.3, 11.3), (21.9, 11.1), (21.45, 11.05)][(29.9, 12.3)]
Intra in win
Una dintre partitii e 1, n-am de ce sa continui
nested loop objs1, objs2 [(26.3, 14.45)][(24.5, 7.75), (25.15, 8.05), (25.7, 8.4), (26.25, 8.8), (26.9, 9.1), (30.9, 14.35), (30.6, 13.65), (30.3, 13.0), (29.9, 12.3), (29.5, 11.75), (29.0, 11.15), (28.5, 10.6), (28.0, 10.1), (27.55, 9.65)]
Intra in win
win len(objs), len(objs1), len(objs2), constSmallNumber 30 | [(17.2, 11.95), (17.5, 11.7), (17.85, 11.5), (18.15, 11.35), (18.45, 11.25), (18.85, 11.1), (19.15, 11.05), (19.55, 11.0), (19.95, 11.0), (20.35, 10.95), (20.7, 10.95), (21.1, 11.0), (21.45, 11.05), (21.9, 11.1), (22.3, 11.3), (22.75, 11.4), (23.2, 11.65), (23.55, 11.85), (17.0, 12.05), (26.55, 14.85), (26.75, 15.35), (27.0, 15.9), (27.0, 16.4), (27.15, 16.9)] | [(31.15, 15.05), (31.3, 15.8), (31.45, 16.55), (23.15, 7.4), (22.5, 7.3), (23.9, 7.65)] | 10
p1 = (19.15, 11.05) len objs = 24
r is 4.47
new r is 4.47
p1 = (19.15, 11.05)
startIdx = 0 obj (17.2, 11.95)
endIdx = 23 obj (27.15, 16.9)
startDIST = 2.1476731594914518 obj (17.2, 11.95)
endDIST = 9.910726512218968 obj (27.15, 16.9)
PRIMUL WHILE endIdx = 23 obj (27.15, 16.9) endDist 9.910726512218968
PRIMUL WHILE endIdx = 22 obj (27.0, 16.4) endDist 9.499736838460317
PRIMUL WHILE endIdx = 21 obj (27.0, 15.9) endDist 9.227404835597062
PRIMUL WHILE endIdx = 20 obj (26.75, 15.35) endDist 8.732124598286491
PRIMUL WHILE endIdx = 19 obj (26.55, 14.85) endDist 8.31865373723417
AL DOILEA WHILE startIdx = 0 obj (17.2, 11.95) start 2.1476731594914518
startDist Il apendeaza pe (17.2, 11.95) endDist 2.1476731594914518
AL DOILEA WHILE startIdx = 1 obj (17.5, 11.7) start 1.773414785096818
startDist Il apendeaza pe (17.5, 11.7) endDist 1.773414785096818
AL DOILEA WHILE startIdx = 2 obj (17.85, 11.5) start 1.3756816492197577
AL DOILEA WHILE startIdx = 3 obj (18.15, 11.35) start 1.0440306508910548
AL DOILEA WHILE startIdx = 4 obj (18.45, 11.25) start 0.7280109889280509
AL DOILEA WHILE startIdx = 5 obj (18.85, 11.1) start 0.304138126514908
AL DOILEA WHILE startIdx = 6 obj (19.15, 11.05) start 0.0
AL DOILEA WHILE startIdx = 7 obj (19.55, 11.0) start 0.4031128874149297
AL DOILEA WHILE startIdx = 8 obj (19.95, 11.0) start 0.8015609770940706
AL DOILEA WHILE startIdx = 9 obj (20.35, 10.95) start 1.2041594578792325
AL DOILEA WHILE startIdx = 10 obj (20.7, 10.95) start 1.5532224567009074
AL DOILEA WHILE startIdx = 11 obj (21.1, 11.0) start 1.9506409203131188
startDist Il apendeaza pe (21.1, 11.0) endDist 1.9506409203131188
AL DOILEA WHILE startIdx = 12 obj (21.45, 11.05) start 2.3000000000000007
startDist Il apendeaza pe (21.45, 11.05) endDist 2.3000000000000007
AL DOILEA WHILE startIdx = 13 obj (21.9, 11.1) start 2.750454507895013
startDist Il apendeaza pe (21.9, 11.1) endDist 2.750454507895013
AL DOILEA WHILE startIdx = 14 obj (22.3, 11.3) start 3.159905061864994
startDist Il apendeaza pe (22.3, 11.3) endDist 3.159905061864994
AL DOILEA WHILE startIdx = 15 obj (22.75, 11.4) start 3.6169738732813665
startDist Il apendeaza pe (22.75, 11.4) endDist 3.6169738732813665
AL DOILEA WHILE startIdx = 16 obj (23.2, 11.65) start 4.094203219186855
startDist Il apendeaza pe (23.2, 11.65) endDist 4.094203219186855
Pentru (17.0, 12.05) endDist este 2.371181140275874 iar r-eps este 1.67
endDist Il apendeaza pe (17.0, 12.05) endDist 2.371181140275874
startDist Il apendeaza pe (23.55, 11.85) startDist 4.472135954999581
Before swap start end (23.55, 11.85) (17.0, 12.05) 17 18
After swap start end (17.0, 12.05) (23.55, 11.85) 17 18
========================= WIN L ===================
[(17.2, 11.95), (17.5, 11.7), (21.1, 11.0), (21.45, 11.05), (21.9, 11.1), (22.3, 11.3), (22.75, 11.4), (23.2, 11.65), (17.0, 12.05)]
========================= WIN L END ===================
========================= WIN G ===================
[(23.55, 11.85)]
========================= WIN G END ===================
========================= OBJS first half ===================
[(17.2, 11.95), (17.5, 11.7), (17.85, 11.5), (18.15, 11.35), (18.45, 11.25), (18.85, 11.1), (19.15, 11.05), (19.55, 11.0), (19.95, 11.0), (20.35, 10.95), (20.7, 10.95), (21.1, 11.0), (21.45, 11.05), (21.9, 11.1), (22.3, 11.3), (22.75, 11.4), (23.2, 11.65)]
========================= OBJS first half END ===================
========================= OBJS last half ===================
[(17.0, 12.05), (23.55, 11.85), (26.55, 14.85), (26.75, 15.35), (27.0, 15.9), (27.0, 16.4), (27.15, 16.9)]
========================= OBJS last half END ===================
p1 = (19.15, 11.05) len objs = 6
r is 7.39
new r is 7.39
p1 = (19.15, 11.05)
startIdx = 0 obj (31.15, 15.05)
endIdx = 5 obj (23.9, 7.65)
startDIST = 12.649110640673518 obj (31.15, 15.05)
endDIST = 5.841446738608511 obj (23.9, 7.65)
Pentru (23.9, 7.65) endDist este 5.841446738608511 iar r-eps este 4.59
endDist Il apendeaza pe (23.9, 7.65) endDist 5.841446738608511
Before swap start end (31.15, 15.05) (23.9, 7.65) 0 5
After swap start end (23.9, 7.65) (31.15, 15.05) 0 5
p1 = (19.15, 11.05)
startIdx = 1 obj (31.3, 15.8)
endIdx = 4 obj (22.5, 7.3)
startDIST = 13.045497307500396 obj (31.3, 15.8)
endDIST = 5.028419234709853 obj (22.5, 7.3)
Pentru (22.5, 7.3) endDist este 5.028419234709853 iar r-eps este 4.59
endDist Il apendeaza pe (22.5, 7.3) endDist 5.028419234709853
Before swap start end (31.3, 15.8) (22.5, 7.3) 1 4
After swap start end (22.5, 7.3) (31.3, 15.8) 1 4
p1 = (19.15, 11.05)
startIdx = 2 obj (31.45, 16.55)
endIdx = 3 obj (23.15, 7.4)
startDIST = 13.473678042761748 obj (31.45, 16.55)
endDIST = 5.4150253923689045 obj (23.15, 7.4)
Pentru (23.15, 7.4) endDist este 5.4150253923689045 iar r-eps este 4.59
endDist Il apendeaza pe (23.15, 7.4) endDist 5.4150253923689045
Before swap start end (31.45, 16.55) (23.15, 7.4) 2 3
After swap start end (23.15, 7.4) (31.45, 16.55) 2 3
========================= WIN L ===================
[(23.9, 7.65), (22.5, 7.3), (23.15, 7.4)]
========================= WIN L END ===================
========================= WIN G ===================
[]
========================= WIN G END ===================
========================= OBJS first half ===================
[(23.9, 7.65), (22.5, 7.3)]
========================= OBJS first half END ===================
========================= OBJS last half ===================
[(23.15, 7.4), (31.45, 16.55), (31.3, 15.8), (31.15, 15.05)]
========================= OBJS last half END ===================
nested loop vine din 
nested loop objs1, objs2 [(17.2, 11.95), (17.5, 11.7), (21.1, 11.0), (21.45, 11.05), (21.9, 11.1), (22.3, 11.3), (22.75, 11.4), (23.2, 11.65), (17.0, 12.05)][]
nested loop vine din 
nested loop objs1, objs2 [(23.55, 11.85)][(23.9, 7.65), (22.5, 7.3), (23.15, 7.4)]
nested loop vine din 
nested loop objs1, objs2 [(17.2, 11.95), (17.5, 11.7), (17.85, 11.5), (18.15, 11.35), (18.45, 11.25), (18.85, 11.1), (19.15, 11.05), (19.55, 11.0), (19.95, 11.0), (20.35, 10.95), (20.7, 10.95), (21.1, 11.0), (21.45, 11.05), (21.9, 11.1), (22.3, 11.3), (22.75, 11.4), (23.2, 11.65), (17.0, 12.05)][(23.9, 7.65), (22.5, 7.3), (23.15, 7.4)]
nested loop vine din 
nested loop objs1, objs2 [(23.55, 11.85), (26.55, 14.85), (26.75, 15.35), (27.0, 15.9), (27.0, 16.4), (27.15, 16.9)][(31.45, 16.55), (31.3, 15.8), (31.15, 15.05)]
quick len(objs), constSmallNumber 46 10
p1 = (17.85, 11.5) len objs = 46
r is 4.31
new r is 4.31
p1 = (17.85, 11.5)
startIdx = 0 obj (17.0, 12.05)
endIdx = 45 obj (21.5, 14.9)
startDIST = 1.0124228365658308 obj (17.0, 12.05)
endDIST = 4.988236161209691 obj (21.5, 14.9)
PRIMUL WHILE endIdx = 45 obj (21.5, 14.9) endDist 4.988236161209691
endDist Il apendeaza pe (21.5, 14.9) endDist 4.988236161209691
PRIMUL WHILE endIdx = 44 obj (21.55, 15.0) endDist 5.093132631298737
endDist Il apendeaza pe (21.55, 15.0) endDist 5.093132631298737
PRIMUL WHILE endIdx = 43 obj (21.65, 15.05) endDist 5.200240379059412
endDist Il apendeaza pe (21.65, 15.05) endDist 5.200240379059412
PRIMUL WHILE endIdx = 42 obj (21.75, 15.15) endDist 5.341582162618113
endDist Il apendeaza pe (21.75, 15.15) endDist 5.341582162618113
PRIMUL WHILE endIdx = 41 obj (21.85, 15.25) endDist 5.482928049865327
endDist Il apendeaza pe (21.85, 15.25) endDist 5.482928049865327
PRIMUL WHILE endIdx = 40 obj (21.9, 15.3) endDist 5.553602434456394
endDist Il apendeaza pe (21.9, 15.3) endDist 5.553602434456394
PRIMUL WHILE endIdx = 39 obj (22.0, 15.4) endDist 5.694953906749377
endDist Il apendeaza pe (22.0, 15.4) endDist 5.694953906749377
PRIMUL WHILE endIdx = 38 obj (22.7, 16.4) endDist 6.89438177068836
endDist Il apendeaza pe (22.7, 16.4) endDist 6.89438177068836
PRIMUL WHILE endIdx = 37 obj (22.6, 16.2) endDist 6.682252614201291
endDist Il apendeaza pe (22.6, 16.2) endDist 6.682252614201291
PRIMUL WHILE endIdx = 36 obj (22.55, 16.05) endDist 6.5415976641796005
endDist Il apendeaza pe (22.55, 16.05) endDist 6.5415976641796005
PRIMUL WHILE endIdx = 35 obj (22.4, 15.95) endDist 6.364353855655731
endDist Il apendeaza pe (22.4, 15.95) endDist 6.364353855655731
PRIMUL WHILE endIdx = 34 obj (22.35, 15.8) endDist 6.224146527838175
endDist Il apendeaza pe (22.35, 15.8) endDist 6.224146527838175
PRIMUL WHILE endIdx = 33 obj (22.2, 15.65) endDist 6.012071190529931
endDist Il apendeaza pe (22.2, 15.65) endDist 6.012071190529931
PRIMUL WHILE endIdx = 32 obj (22.15, 15.55) endDist 5.906987387831464
endDist Il apendeaza pe (22.15, 15.55) endDist 5.906987387831464
PRIMUL WHILE endIdx = 31 obj (27.15, 16.9) endDist 10.75406899736095
PRIMUL WHILE endIdx = 30 obj (27.0, 16.4) endDist 10.379426766445244
PRIMUL WHILE endIdx = 29 obj (27.0, 15.9) endDist 10.152955234807251
PRIMUL WHILE endIdx = 28 obj (26.75, 15.35) endDist 9.6970356295107
PRIMUL WHILE endIdx = 27 obj (26.55, 14.85) endDist 9.322687380793157
PRIMUL WHILE endIdx = 26 obj (26.3, 14.45) endDist 8.95013966371475
PRIMUL WHILE endIdx = 25 obj (25.95, 14.1) endDist 8.507055894961546
PRIMUL WHILE endIdx = 24 obj (25.75, 13.7) endDist 8.200609733428362
PRIMUL WHILE endIdx = 23 obj (25.35, 13.3) endDist 7.712976079309465
PRIMUL WHILE endIdx = 22 obj (25.05, 12.95) endDist 7.344555806854489
PRIMUL WHILE endIdx = 21 obj (24.8, 12.7) endDist 7.052836308890203
endDist Il apendeaza pe (24.8, 12.7) endDist 7.052836308890203
PRIMUL WHILE endIdx = 20 obj (24.4, 12.45) endDist 6.618534581008092
endDist Il apendeaza pe (24.4, 12.45) endDist 6.618534581008092
PRIMUL WHILE endIdx = 19 obj (24.05, 12.2) endDist 6.239390995922598
endDist Il apendeaza pe (24.05, 12.2) endDist 6.239390995922598
PRIMUL WHILE endIdx = 18 obj (23.55, 11.85) endDist 5.710735504293646
endDist Il apendeaza pe (23.55, 11.85) endDist 5.710735504293646
PRIMUL WHILE endIdx = 17 obj (23.2, 11.65) endDist 5.352102390649863
endDist Il apendeaza pe (23.2, 11.65) endDist 5.352102390649863
PRIMUL WHILE endIdx = 16 obj (22.75, 11.4) endDist 4.9010203019371374
endDist Il apendeaza pe (22.75, 11.4) endDist 4.9010203019371374
PRIMUL WHILE endIdx = 15 obj (22.3, 11.3) endDist 4.454492114708477
endDist Il apendeaza pe (22.3, 11.3) endDist 4.454492114708477
AL DOILEA WHILE startIdx = 0 obj (17.0, 12.05) start 1.0124228365658308
AL DOILEA WHILE startIdx = 1 obj (17.2, 11.95) start 0.7905694150420962
AL DOILEA WHILE startIdx = 2 obj (17.5, 11.7) start 0.40311288741492834
AL DOILEA WHILE startIdx = 3 obj (17.85, 11.5) start 0.0
AL DOILEA WHILE startIdx = 4 obj (18.15, 11.35) start 0.3354101966249661
AL DOILEA WHILE startIdx = 5 obj (18.45, 11.25) start 0.649999999999998
AL DOILEA WHILE startIdx = 6 obj (18.85, 11.1) start 1.077032961426901
AL DOILEA WHILE startIdx = 7 obj (19.15, 11.05) start 1.3756816492197577
AL DOILEA WHILE startIdx = 8 obj (19.55, 11.0) start 1.7720045146669343
startDist Il apendeaza pe (19.55, 11.0) endDist 1.7720045146669343
AL DOILEA WHILE startIdx = 9 obj (19.95, 11.0) start 2.1587033144922882
startDist Il apendeaza pe (19.95, 11.0) endDist 2.1587033144922882
AL DOILEA WHILE startIdx = 10 obj (20.35, 10.95) start 2.559785147234041
startDist Il apendeaza pe (20.35, 10.95) endDist 2.559785147234041
AL DOILEA WHILE startIdx = 11 obj (20.7, 10.95) start 2.9025850547399963
startDist Il apendeaza pe (20.7, 10.95) endDist 2.9025850547399963
AL DOILEA WHILE startIdx = 12 obj (21.1, 11.0) start 3.2882366094914763
startDist Il apendeaza pe (21.1, 11.0) endDist 3.2882366094914763
AL DOILEA WHILE startIdx = 13 obj (21.45, 11.05) start 3.628015986734345
startDist Il apendeaza pe (21.45, 11.05) endDist 3.628015986734345
sunt egale 14 14
========================= WIN L ===================
[(19.55, 11.0), (19.95, 11.0), (20.35, 10.95), (20.7, 10.95), (21.1, 11.0), (21.45, 11.05), (21.9, 11.1)]
========================= WIN L END ===================
========================= WIN G ===================
[(21.5, 14.9), (21.55, 15.0), (21.65, 15.05), (21.75, 15.15), (21.85, 15.25), (21.9, 15.3), (22.0, 15.4), (22.7, 16.4), (22.6, 16.2), (22.55, 16.05), (22.4, 15.95), (22.35, 15.8), (22.2, 15.65), (22.15, 15.55), (24.8, 12.7), (24.4, 12.45), (24.05, 12.2), (23.55, 11.85), (23.2, 11.65), (22.75, 11.4), (22.3, 11.3)]
========================= WIN G END ===================
========================= OBJS first half ===================
[(17.0, 12.05), (17.2, 11.95), (17.5, 11.7), (17.85, 11.5), (18.15, 11.35), (18.45, 11.25), (18.85, 11.1), (19.15, 11.05), (19.55, 11.0), (19.95, 11.0), (20.35, 10.95), (20.7, 10.95), (21.1, 11.0), (21.45, 11.05)]
========================= OBJS first half END ===================
========================= OBJS last half ===================
[(21.9, 11.1), (22.3, 11.3), (22.75, 11.4), (23.2, 11.65), (23.55, 11.85), (24.05, 12.2), (24.4, 12.45), (24.8, 12.7), (25.05, 12.95), (25.35, 13.3), (25.75, 13.7), (25.95, 14.1), (26.3, 14.45), (26.55, 14.85), (26.75, 15.35), (27.0, 15.9), (27.0, 16.4), (27.15, 16.9), (22.15, 15.55), (22.2, 15.65), (22.35, 15.8), (22.4, 15.95), (22.55, 16.05), (22.6, 16.2), (22.7, 16.4), (22.0, 15.4), (21.9, 15.3), (21.85, 15.25), (21.75, 15.15), (21.65, 15.05), (21.55, 15.0), (21.5, 14.9)]
========================= OBJS last half END ===================
Intra in win
win len(objs), len(objs1), len(objs2), constSmallNumber 28 | [(19.55, 11.0), (19.95, 11.0), (20.35, 10.95), (20.7, 10.95), (21.1, 11.0), (21.45, 11.05), (21.9, 11.1)] | [(21.5, 14.9), (21.55, 15.0), (21.65, 15.05), (21.75, 15.15), (21.85, 15.25), (21.9, 15.3), (22.0, 15.4), (22.7, 16.4), (22.6, 16.2), (22.55, 16.05), (22.4, 15.95), (22.35, 15.8), (22.2, 15.65), (22.15, 15.55), (24.8, 12.7), (24.4, 12.45), (24.05, 12.2), (23.55, 11.85), (23.2, 11.65), (22.75, 11.4), (22.3, 11.3)] | 10
p1 = (24.4, 12.45) len objs = 7
r is 1.03
new r is 1.03
p1 = (24.4, 12.45)
startIdx = 0 obj (19.55, 11.0)
endIdx = 6 obj (21.9, 11.1)
startDIST = 5.062114182829145 obj (19.55, 11.0)
endDIST = 2.8412145290350743 obj (21.9, 11.1)
PRIMUL WHILE endIdx = 6 obj (21.9, 11.1) endDist 2.8412145290350743
endDist Il apendeaza pe (21.9, 11.1) endDist 2.8412145290350743
PRIMUL WHILE endIdx = 5 obj (21.45, 11.05) endDist 3.265348373451138
endDist Il apendeaza pe (21.45, 11.05) endDist 3.265348373451138
PRIMUL WHILE endIdx = 4 obj (21.1, 11.0) endDist 3.604511062543709
endDist Il apendeaza pe (21.1, 11.0) endDist 3.604511062543709
PRIMUL WHILE endIdx = 3 obj (20.7, 10.95) endDist 3.992492955535425
PRIMUL WHILE endIdx = 2 obj (20.35, 10.95) endDist 4.318854014666388
PRIMUL WHILE endIdx = 1 obj (19.95, 11.0) endDist 4.680277769534624
sunt egale 0 0
========================= WIN L ===================
[]
========================= WIN L END ===================
========================= WIN G ===================
[(21.9, 11.1), (21.45, 11.05), (21.1, 11.0)]
========================= WIN G END ===================
========================= OBJS first half ===================
[(19.55, 11.0), (19.95, 11.0), (20.35, 10.95), (20.7, 10.95), (21.1, 11.0), (21.45, 11.05)]
========================= OBJS first half END ===================
========================= OBJS last half ===================
[(21.9, 11.1)]
========================= OBJS last half END ===================
p1 = (24.4, 12.45) len objs = 21
r is 2.34
new r is 2.34
p1 = (24.4, 12.45)
startIdx = 0 obj (21.5, 14.9)
endIdx = 20 obj (22.3, 11.3)
startDIST = 3.7963798545456426 obj (21.5, 14.9)
endDIST = 2.3942639787625732 obj (22.3, 11.3)
PRIMUL WHILE endIdx = 20 obj (22.3, 11.3) endDist 2.3942639787625732
endDist Il apendeaza pe (22.3, 11.3) endDist 2.3942639787625732
Pentru (22.75, 11.4) endDist este 1.9557607215607928 iar r-eps este -0.45999999999999996
endDist Il apendeaza pe (22.75, 11.4) endDist 1.9557607215607928
startDist Il apendeaza pe (21.5, 14.9) startDist 3.7963798545456426
Before swap start end (21.5, 14.9) (22.75, 11.4) 0 19
After swap start end (22.75, 11.4) (21.5, 14.9) 0 19
p1 = (24.4, 12.45)
startIdx = 1 obj (21.55, 15.0)
endIdx = 18 obj (23.2, 11.65)
startDIST = 3.8242646351945875 obj (21.55, 15.0)
endDIST = 1.4422205101855945 obj (23.2, 11.65)
Pentru (23.2, 11.65) endDist este 1.4422205101855945 iar r-eps este -0.45999999999999996
endDist Il apendeaza pe (23.2, 11.65) endDist 1.4422205101855945
startDist Il apendeaza pe (21.55, 15.0) startDist 3.8242646351945875
Before swap start end (21.55, 15.0) (23.2, 11.65) 1 18
After swap start end (23.2, 11.65) (21.55, 15.0) 1 18
p1 = (24.4, 12.45)
startIdx = 2 obj (21.65, 15.05)
endIdx = 17 obj (23.55, 11.85)
startDIST = 3.7845078940332533 obj (21.65, 15.05)
endDIST = 1.0404326023342387 obj (23.55, 11.85)
Pentru (23.55, 11.85) endDist este 1.0404326023342387 iar r-eps este -0.45999999999999996
endDist Il apendeaza pe (23.55, 11.85) endDist 1.0404326023342387
startDist Il apendeaza pe (21.65, 15.05) startDist 3.7845078940332533
Before swap start end (21.65, 15.05) (23.55, 11.85) 2 17
After swap start end (23.55, 11.85) (21.65, 15.05) 2 17
p1 = (24.4, 12.45)
startIdx = 3 obj (21.75, 15.15)
endIdx = 16 obj (24.05, 12.2)
startDIST = 3.7831864876053887 obj (21.75, 15.15)
endDIST = 0.4301162633521296 obj (24.05, 12.2)
Pentru (24.05, 12.2) endDist este 0.4301162633521296 iar r-eps este -0.45999999999999996
endDist Il apendeaza pe (24.05, 12.2) endDist 0.4301162633521296
startDist Il apendeaza pe (21.75, 15.15) startDist 3.7831864876053887
Before swap start end (21.75, 15.15) (24.05, 12.2) 3 16
After swap start end (24.05, 12.2) (21.75, 15.15) 3 16
p1 = (24.4, 12.45)
startIdx = 4 obj (21.85, 15.25)
endIdx = 15 obj (24.4, 12.45)
startDIST = 3.7871493236998184 obj (21.85, 15.25)
endDIST = 0.0 obj (24.4, 12.45)
Pentru (24.4, 12.45) endDist este 0.0 iar r-eps este -0.45999999999999996
endDist Il apendeaza pe (24.4, 12.45) endDist 0.0
startDist Il apendeaza pe (21.85, 15.25) startDist 3.7871493236998184
Before swap start end (21.85, 15.25) (24.4, 12.45) 4 15
After swap start end (24.4, 12.45) (21.85, 15.25) 4 15
p1 = (24.4, 12.45)
startIdx = 5 obj (21.9, 15.3)
endIdx = 14 obj (24.8, 12.7)
startDIST = 3.7911080174534737 obj (21.9, 15.3)
endDIST = 0.471699056602832 obj (24.8, 12.7)
Pentru (24.8, 12.7) endDist este 0.471699056602832 iar r-eps este -0.45999999999999996
endDist Il apendeaza pe (24.8, 12.7) endDist 0.471699056602832
startDist Il apendeaza pe (21.9, 15.3) startDist 3.7911080174534737
Before swap start end (21.9, 15.3) (24.8, 12.7) 5 14
After swap start end (24.8, 12.7) (21.9, 15.3) 5 14
p1 = (24.4, 12.45)
startIdx = 6 obj (22.0, 15.4)
endIdx = 13 obj (22.15, 15.55)
startDIST = 3.8029593739612837 obj (22.0, 15.4)
endDIST = 3.830469945058962 obj (22.15, 15.55)
PRIMUL WHILE endIdx = 13 obj (22.15, 15.55) endDist 3.830469945058962
endDist Il apendeaza pe (22.15, 15.55) endDist 3.830469945058962
PRIMUL WHILE endIdx = 12 obj (22.2, 15.65) endDist 3.8832975677895205
endDist Il apendeaza pe (22.2, 15.65) endDist 3.8832975677895205
PRIMUL WHILE endIdx = 11 obj (22.35, 15.8) endDist 3.9274673773310957
endDist Il apendeaza pe (22.35, 15.8) endDist 3.9274673773310957
PRIMUL WHILE endIdx = 10 obj (22.4, 15.95) endDist 4.031128874149275
endDist Il apendeaza pe (22.4, 15.95) endDist 4.031128874149275
PRIMUL WHILE endIdx = 9 obj (22.55, 16.05) endDist 4.047530111067736
endDist Il apendeaza pe (22.55, 16.05) endDist 4.047530111067736
PRIMUL WHILE endIdx = 8 obj (22.6, 16.2) endDist 4.159627387158613
endDist Il apendeaza pe (22.6, 16.2) endDist 4.159627387158613
PRIMUL WHILE endIdx = 7 obj (22.7, 16.4) endDist 4.300290687848904
endDist Il apendeaza pe (22.7, 16.4) endDist 4.300290687848904
sunt egale 6 6
========================= WIN L ===================
[(22.75, 11.4), (23.2, 11.65), (23.55, 11.85), (24.05, 12.2), (24.4, 12.45), (24.8, 12.7)]
========================= WIN L END ===================
========================= WIN G ===================
[(22.3, 11.3), (21.5, 14.9), (21.55, 15.0), (21.65, 15.05), (21.75, 15.15), (21.85, 15.25), (21.9, 15.3), (22.15, 15.55), (22.2, 15.65), (22.35, 15.8), (22.4, 15.95), (22.55, 16.05), (22.6, 16.2), (22.7, 16.4), (22.0, 15.4)]
========================= WIN G END ===================
========================= OBJS first half ===================
[(22.75, 11.4), (23.2, 11.65), (23.55, 11.85), (24.05, 12.2), (24.4, 12.45)]
========================= OBJS first half END ===================
========================= OBJS last half ===================
[(24.8, 12.7), (22.0, 15.4), (22.7, 16.4), (22.6, 16.2), (22.55, 16.05), (22.4, 15.95), (22.35, 15.8), (22.2, 15.65), (22.15, 15.55), (21.9, 15.3), (21.85, 15.25), (21.75, 15.15), (21.65, 15.05), (21.55, 15.0), (21.5, 14.9), (22.3, 11.3)]
========================= OBJS last half END ===================
nested loop vine din 
nested loop objs1, objs2 [][(22.3, 11.3), (21.5, 14.9), (21.55, 15.0), (21.65, 15.05), (21.75, 15.15), (21.85, 15.25), (21.9, 15.3), (22.15, 15.55), (22.2, 15.65), (22.35, 15.8), (22.4, 15.95), (22.55, 16.05), (22.6, 16.2), (22.7, 16.4), (22.0, 15.4)]
nested loop vine din 
nested loop objs1, objs2 [(21.9, 11.1), (21.45, 11.05), (21.1, 11.0)][(22.75, 11.4), (23.2, 11.65), (23.55, 11.85), (24.05, 12.2), (24.4, 12.45), (24.8, 12.7)]
nested loop vine din 
nested loop objs1, objs2 [][(22.75, 11.4), (23.2, 11.65), (23.55, 11.85), (24.05, 12.2), (24.4, 12.45), (24.8, 12.7)]
nested loop vine din 
nested loop objs1, objs2 [(19.55, 11.0), (19.95, 11.0), (20.35, 10.95), (20.7, 10.95), (21.1, 11.0), (21.45, 11.05), (21.9, 11.1)][(22.0, 15.4), (22.7, 16.4), (22.6, 16.2), (22.55, 16.05), (22.4, 15.95), (22.35, 15.8), (22.2, 15.65), (22.15, 15.55), (21.9, 15.3), (21.85, 15.25), (21.75, 15.15), (21.65, 15.05), (21.55, 15.0), (21.5, 14.9), (22.3, 11.3)]
quick len(objs), constSmallNumber 15 10
p1 = (17.85, 11.5) len objs = 15
r is 1.96
new r is 1.96
p1 = (17.85, 11.5)
startIdx = 0 obj (17.0, 12.05)
endIdx = 14 obj (21.9, 11.1)
startDIST = 1.0124228365658308 obj (17.0, 12.05)
endDIST = 4.069705149024924 obj (21.9, 11.1)
PRIMUL WHILE endIdx = 14 obj (21.9, 11.1) endDist 4.069705149024924
endDist Il apendeaza pe (21.9, 11.1) endDist 4.069705149024924
PRIMUL WHILE endIdx = 13 obj (21.45, 11.05) endDist 3.628015986734345
endDist Il apendeaza pe (21.45, 11.05) endDist 3.628015986734345
PRIMUL WHILE endIdx = 12 obj (21.1, 11.0) endDist 3.2882366094914763
endDist Il apendeaza pe (21.1, 11.0) endDist 3.2882366094914763
PRIMUL WHILE endIdx = 11 obj (20.7, 10.95) endDist 2.9025850547399963
endDist Il apendeaza pe (20.7, 10.95) endDist 2.9025850547399963
PRIMUL WHILE endIdx = 10 obj (20.35, 10.95) endDist 2.559785147234041
endDist Il apendeaza pe (20.35, 10.95) endDist 2.559785147234041
PRIMUL WHILE endIdx = 9 obj (19.95, 11.0) endDist 2.1587033144922882
endDist Il apendeaza pe (19.95, 11.0) endDist 2.1587033144922882
AL DOILEA WHILE startIdx = 0 obj (17.0, 12.05) start 1.0124228365658308
startDist Il apendeaza pe (17.0, 12.05) endDist 1.0124228365658308
AL DOILEA WHILE startIdx = 1 obj (17.2, 11.95) start 0.7905694150420962
startDist Il apendeaza pe (17.2, 11.95) endDist 0.7905694150420962
AL DOILEA WHILE startIdx = 2 obj (17.5, 11.7) start 0.40311288741492834
startDist Il apendeaza pe (17.5, 11.7) endDist 0.40311288741492834
AL DOILEA WHILE startIdx = 3 obj (17.85, 11.5) start 0.0
startDist Il apendeaza pe (17.85, 11.5) endDist 0.0
AL DOILEA WHILE startIdx = 4 obj (18.15, 11.35) start 0.3354101966249661
startDist Il apendeaza pe (18.15, 11.35) endDist 0.3354101966249661
AL DOILEA WHILE startIdx = 5 obj (18.45, 11.25) start 0.649999999999998
startDist Il apendeaza pe (18.45, 11.25) endDist 0.649999999999998
AL DOILEA WHILE startIdx = 6 obj (18.85, 11.1) start 1.077032961426901
startDist Il apendeaza pe (18.85, 11.1) endDist 1.077032961426901
AL DOILEA WHILE startIdx = 7 obj (19.15, 11.05) start 1.3756816492197577
startDist Il apendeaza pe (19.15, 11.05) endDist 1.3756816492197577
sunt egale 8 8
========================= WIN L ===================
[(17.0, 12.05), (17.2, 11.95), (17.5, 11.7), (17.85, 11.5), (18.15, 11.35), (18.45, 11.25), (18.85, 11.1), (19.15, 11.05), (19.55, 11.0)]
========================= WIN L END ===================
========================= WIN G ===================
[(21.9, 11.1), (21.45, 11.05), (21.1, 11.0), (20.7, 10.95), (20.35, 10.95), (19.95, 11.0)]
========================= WIN G END ===================
========================= OBJS first half ===================
[(17.0, 12.05), (17.2, 11.95), (17.5, 11.7), (17.85, 11.5), (18.15, 11.35), (18.45, 11.25), (18.85, 11.1), (19.15, 11.05)]
========================= OBJS first half END ===================
========================= OBJS last half ===================
[(19.55, 11.0), (19.95, 11.0), (20.35, 10.95), (20.7, 10.95), (21.1, 11.0), (21.45, 11.05), (21.9, 11.1)]
========================= OBJS last half END ===================
Intra in win
win len(objs), len(objs1), len(objs2), constSmallNumber 15 | [(17.0, 12.05), (17.2, 11.95), (17.5, 11.7), (17.85, 11.5), (18.15, 11.35), (18.45, 11.25), (18.85, 11.1), (19.15, 11.05), (19.55, 11.0)] | [(21.9, 11.1), (21.45, 11.05), (21.1, 11.0), (20.7, 10.95), (20.35, 10.95), (19.95, 11.0)] | 10
p1 = (21.45, 11.05) len objs = 9
r is 1.18
new r is 1.18
p1 = (21.45, 11.05)
startIdx = 0 obj (17.0, 12.05)
endIdx = 8 obj (19.55, 11.0)
startDIST = 4.560975772792484 obj (17.0, 12.05)
endDIST = 1.9006577808748197 obj (19.55, 11.0)
PRIMUL WHILE endIdx = 8 obj (19.55, 11.0) endDist 1.9006577808748197
endDist Il apendeaza pe (19.55, 11.0) endDist 1.9006577808748197
PRIMUL WHILE endIdx = 7 obj (19.15, 11.05) endDist 2.3000000000000007
endDist Il apendeaza pe (19.15, 11.05) endDist 2.3000000000000007
PRIMUL WHILE endIdx = 6 obj (18.85, 11.1) endDist 2.6004807247891666
endDist Il apendeaza pe (18.85, 11.1) endDist 2.6004807247891666
PRIMUL WHILE endIdx = 5 obj (18.45, 11.25) endDist 3.0066592756745814
endDist Il apendeaza pe (18.45, 11.25) endDist 3.0066592756745814
PRIMUL WHILE endIdx = 4 obj (18.15, 11.35) endDist 3.313608305156179
endDist Il apendeaza pe (18.15, 11.35) endDist 3.313608305156179
PRIMUL WHILE endIdx = 3 obj (17.85, 11.5) endDist 3.628015986734345
endDist Il apendeaza pe (17.85, 11.5) endDist 3.628015986734345
PRIMUL WHILE endIdx = 2 obj (17.5, 11.7) endDist 4.003123780249618
PRIMUL WHILE endIdx = 1 obj (17.2, 11.95) endDist 4.344249072049161
sunt egale 0 0
========================= WIN L ===================
[]
========================= WIN L END ===================
========================= WIN G ===================
[(19.55, 11.0), (19.15, 11.05), (18.85, 11.1), (18.45, 11.25), (18.15, 11.35), (17.85, 11.5)]
========================= WIN G END ===================
========================= OBJS first half ===================
[(17.0, 12.05), (17.2, 11.95), (17.5, 11.7), (17.85, 11.5), (18.15, 11.35), (18.45, 11.25), (18.85, 11.1), (19.15, 11.05)]
========================= OBJS first half END ===================
========================= OBJS last half ===================
[(19.55, 11.0)]
========================= OBJS last half END ===================
p1 = (21.45, 11.05) len objs = 6
r is 0.9
new r is 0.9
p1 = (21.45, 11.05)
startIdx = 0 obj (21.9, 11.1)
endIdx = 5 obj (19.95, 11.0)
startDIST = 0.45276925690687 obj (21.9, 11.1)
endDIST = 1.5008331019803633 obj (19.95, 11.0)
PRIMUL WHILE endIdx = 5 obj (19.95, 11.0) endDist 1.5008331019803633
endDist Il apendeaza pe (19.95, 11.0) endDist 1.5008331019803633
PRIMUL WHILE endIdx = 4 obj (20.35, 10.95) endDist 1.104536101718724
endDist Il apendeaza pe (20.35, 10.95) endDist 1.104536101718724
AL DOILEA WHILE startIdx = 0 obj (21.9, 11.1) start 0.45276925690687
startDist Il apendeaza pe (21.9, 11.1) endDist 0.45276925690687
AL DOILEA WHILE startIdx = 1 obj (21.45, 11.05) start 0.0
startDist Il apendeaza pe (21.45, 11.05) endDist 0.0
AL DOILEA WHILE startIdx = 2 obj (21.1, 11.0) start 0.3535533905932718
startDist Il apendeaza pe (21.1, 11.0) endDist 0.3535533905932718
sunt egale 3 3
========================= WIN L ===================
[(21.9, 11.1), (21.45, 11.05), (21.1, 11.0), (20.7, 10.95)]
========================= WIN L END ===================
========================= WIN G ===================
[(19.95, 11.0), (20.35, 10.95)]
========================= WIN G END ===================
========================= OBJS first half ===================
[(21.9, 11.1), (21.45, 11.05), (21.1, 11.0)]
========================= OBJS first half END ===================
========================= OBJS last half ===================
[(20.7, 10.95), (20.35, 10.95), (19.95, 11.0)]
========================= OBJS last half END ===================
nested loop vine din 
nested loop objs1, objs2 [][(19.95, 11.0), (20.35, 10.95)]
nested loop vine din 
nested loop objs1, objs2 [(19.55, 11.0), (19.15, 11.05), (18.85, 11.1), (18.45, 11.25), (18.15, 11.35), (17.85, 11.5)][(21.9, 11.1), (21.45, 11.05), (21.1, 11.0), (20.7, 10.95)]
nested loop vine din 
nested loop objs1, objs2 [][(21.9, 11.1), (21.45, 11.05), (21.1, 11.0), (20.7, 10.95)]
nested loop vine din 
nested loop objs1, objs2 [(17.0, 12.05), (17.2, 11.95), (17.5, 11.7), (17.85, 11.5), (18.15, 11.35), (18.45, 11.25), (18.85, 11.1), (19.15, 11.05), (19.55, 11.0)][(20.35, 10.95), (19.95, 11.0)]
quick len(objs), constSmallNumber 9 10
quick len(objs), constSmallNumber 6 10
quick len(objs), constSmallNumber 31 10
p1 = (25.75, 13.7) len objs = 31
r is 3.19
new r is 3.19
p1 = (25.75, 13.7)
startIdx = 0 obj (22.3, 11.3)
endIdx = 30 obj (21.5, 14.9)
startDIST = 4.202677717836568 obj (22.3, 11.3)
endDIST = 4.416163493350308 obj (21.5, 14.9)
PRIMUL WHILE endIdx = 30 obj (21.5, 14.9) endDist 4.416163493350308
endDist Il apendeaza pe (21.5, 14.9) endDist 4.416163493350308
PRIMUL WHILE endIdx = 29 obj (21.55, 15.0) endDist 4.396589587396121
endDist Il apendeaza pe (21.55, 15.0) endDist 4.396589587396121
PRIMUL WHILE endIdx = 28 obj (21.65, 15.05) endDist 4.316537964619333
endDist Il apendeaza pe (21.65, 15.05) endDist 4.316537964619333
PRIMUL WHILE endIdx = 27 obj (21.75, 15.15) endDist 4.254703279900962
endDist Il apendeaza pe (21.75, 15.15) endDist 4.254703279900962
PRIMUL WHILE endIdx = 26 obj (21.85, 15.25) endDist 4.196724913548658
endDist Il apendeaza pe (21.85, 15.25) endDist 4.196724913548658
PRIMUL WHILE endIdx = 25 obj (21.9, 15.3) endDist 4.169232543286595
endDist Il apendeaza pe (21.9, 15.3) endDist 4.169232543286595
PRIMUL WHILE endIdx = 24 obj (22.0, 15.4) endDist 4.117341375208037
endDist Il apendeaza pe (22.0, 15.4) endDist 4.117341375208037
PRIMUL WHILE endIdx = 23 obj (22.7, 16.4) endDist 4.073389252207552
endDist Il apendeaza pe (22.7, 16.4) endDist 4.073389252207552
PRIMUL WHILE endIdx = 22 obj (22.6, 16.2) endDist 4.021504693519578
endDist Il apendeaza pe (22.6, 16.2) endDist 4.021504693519578
PRIMUL WHILE endIdx = 21 obj (22.55, 16.05) endDist 3.9702015062210636
endDist Il apendeaza pe (22.55, 16.05) endDist 3.9702015062210636
PRIMUL WHILE endIdx = 20 obj (22.4, 15.95) endDist 4.0354677547962154
endDist Il apendeaza pe (22.4, 15.95) endDist 4.0354677547962154
PRIMUL WHILE endIdx = 19 obj (22.35, 15.8) endDist 3.9962482405376165
endDist Il apendeaza pe (22.35, 15.8) endDist 3.9962482405376165
PRIMUL WHILE endIdx = 18 obj (22.2, 15.65) endDist 4.050308630215728
endDist Il apendeaza pe (22.2, 15.65) endDist 4.050308630215728
PRIMUL WHILE endIdx = 17 obj (22.15, 15.55) endDist 4.047530111067738
endDist Il apendeaza pe (22.15, 15.55) endDist 4.047530111067738
PRIMUL WHILE endIdx = 16 obj (27.15, 16.9) endDist 3.492849839314595
endDist Il apendeaza pe (27.15, 16.9) endDist 3.492849839314595
Pentru (27.0, 16.4) endDist este 2.9753151093623673 iar r-eps este 0.3900000000000001
endDist Il apendeaza pe (27.0, 16.4) endDist 2.9753151093623673
startDist Il apendeaza pe (22.3, 11.3) startDist 4.202677717836568
Before swap start end (22.3, 11.3) (27.0, 16.4) 0 15
After swap start end (27.0, 16.4) (22.3, 11.3) 0 15
p1 = (25.75, 13.7)
startIdx = 1 obj (22.75, 11.4)
endIdx = 14 obj (27.0, 15.9)
startDIST = 3.7802116342871592 obj (22.75, 11.4)
endDIST = 2.530316185776 obj (27.0, 15.9)
Pentru (27.0, 15.9) endDist este 2.530316185776 iar r-eps este 0.3900000000000001
endDist Il apendeaza pe (27.0, 15.9) endDist 2.530316185776
startDist Il apendeaza pe (22.75, 11.4) startDist 3.7802116342871592
Before swap start end (22.75, 11.4) (27.0, 15.9) 1 14
After swap start end (27.0, 15.9) (22.75, 11.4) 1 14
p1 = (25.75, 13.7)
startIdx = 2 obj (23.2, 11.65)
endIdx = 13 obj (26.75, 15.35)
startDIST = 3.271849629796577 obj (23.2, 11.65)
endDIST = 1.929378138157474 obj (26.75, 15.35)
Pentru (26.75, 15.35) endDist este 1.929378138157474 iar r-eps este 0.3900000000000001
endDist Il apendeaza pe (26.75, 15.35) endDist 1.929378138157474
startDist Il apendeaza pe (23.2, 11.65) startDist 3.271849629796577
Before swap start end (23.2, 11.65) (26.75, 15.35) 2 13
After swap start end (26.75, 15.35) (23.2, 11.65) 2 13
p1 = (25.75, 13.7)
startIdx = 3 obj (23.55, 11.85)
endIdx = 12 obj (26.55, 14.85)
startDIST = 2.874456470360961 obj (23.55, 11.85)
endDIST = 1.4008925726121908 obj (26.55, 14.85)
AL DOILEA WHILE startIdx = 3 obj (23.55, 11.85) start 2.874456470360961
startDist Il apendeaza pe (23.55, 11.85) endDist 2.874456470360961
AL DOILEA WHILE startIdx = 4 obj (24.05, 12.2) start 2.2671568097509263
startDist Il apendeaza pe (24.05, 12.2) endDist 2.2671568097509263
AL DOILEA WHILE startIdx = 5 obj (24.4, 12.45) start 1.839836949297411
startDist Il apendeaza pe (24.4, 12.45) endDist 1.839836949297411
AL DOILEA WHILE startIdx = 6 obj (24.8, 12.7) start 1.3793114224133716
startDist Il apendeaza pe (24.8, 12.7) endDist 1.3793114224133716
AL DOILEA WHILE startIdx = 7 obj (25.05, 12.95) start 1.025914226434159
startDist Il apendeaza pe (25.05, 12.95) endDist 1.025914226434159
AL DOILEA WHILE startIdx = 8 obj (25.35, 13.3) start 0.565685424949236
startDist Il apendeaza pe (25.35, 13.3) endDist 0.565685424949236
AL DOILEA WHILE startIdx = 9 obj (25.75, 13.7) start 0.0
AL DOILEA WHILE startIdx = 10 obj (25.95, 14.1) start 0.4472135954999579
startDist Il apendeaza pe (25.95, 14.1) endDist 0.4472135954999579
AL DOILEA WHILE startIdx = 11 obj (26.3, 14.45) start 0.9300537618869141
startDist Il apendeaza pe (26.3, 14.45) endDist 0.9300537618869141
sunt egale 12 12
========================= WIN L ===================
[(27.0, 16.4), (27.0, 15.9), (26.75, 15.35), (23.55, 11.85), (24.05, 12.2), (24.4, 12.45), (24.8, 12.7), (25.05, 12.95), (25.35, 13.3), (25.95, 14.1), (26.3, 14.45), (26.55, 14.85)]
========================= WIN L END ===================
========================= WIN G ===================
[(21.5, 14.9), (21.55, 15.0), (21.65, 15.05), (21.75, 15.15), (21.85, 15.25), (21.9, 15.3), (22.0, 15.4), (22.7, 16.4), (22.6, 16.2), (22.55, 16.05), (22.4, 15.95), (22.35, 15.8), (22.2, 15.65), (22.15, 15.55), (27.15, 16.9), (22.3, 11.3), (22.75, 11.4), (23.2, 11.65)]
========================= WIN G END ===================
========================= OBJS first half ===================
[(27.0, 16.4), (27.0, 15.9), (26.75, 15.35), (23.55, 11.85), (24.05, 12.2), (24.4, 12.45), (24.8, 12.7), (25.05, 12.95), (25.35, 13.3), (25.75, 13.7), (25.95, 14.1), (26.3, 14.45)]
========================= OBJS first half END ===================
========================= OBJS last half ===================
[(26.55, 14.85), (23.2, 11.65), (22.75, 11.4), (22.3, 11.3), (27.15, 16.9), (22.15, 15.55), (22.2, 15.65), (22.35, 15.8), (22.4, 15.95), (22.55, 16.05), (22.6, 16.2), (22.7, 16.4), (22.0, 15.4), (21.9, 15.3), (21.85, 15.25), (21.75, 15.15), (21.65, 15.05), (21.55, 15.0), (21.5, 14.9)]
========================= OBJS last half END ===================
Intra in win
win len(objs), len(objs1), len(objs2), constSmallNumber 30 | [(27.0, 16.4), (27.0, 15.9), (26.75, 15.35), (23.55, 11.85), (24.05, 12.2), (24.4, 12.45), (24.8, 12.7), (25.05, 12.95), (25.35, 13.3), (25.95, 14.1), (26.3, 14.45), (26.55, 14.85)] | [(21.5, 14.9), (21.55, 15.0), (21.65, 15.05), (21.75, 15.15), (21.85, 15.25), (21.9, 15.3), (22.0, 15.4), (22.7, 16.4), (22.6, 16.2), (22.55, 16.05), (22.4, 15.95), (22.35, 15.8), (22.2, 15.65), (22.15, 15.55), (27.15, 16.9), (22.3, 11.3), (22.75, 11.4), (23.2, 11.65)] | 10
p1 = (25.95, 14.1) len objs = 12
r is 2.33
new r is 2.33
p1 = (25.95, 14.1)
startIdx = 0 obj (27.0, 16.4)
endIdx = 11 obj (26.55, 14.85)
startDIST = 2.5283393759541055 obj (27.0, 16.4)
endDIST = 0.9604686356149281 obj (26.55, 14.85)
Pentru (26.55, 14.85) endDist este 0.9604686356149281 iar r-eps este -0.46999999999999975
endDist Il apendeaza pe (26.55, 14.85) endDist 0.9604686356149281
startDist Il apendeaza pe (27.0, 16.4) startDist 2.5283393759541055
Before swap start end (27.0, 16.4) (26.55, 14.85) 0 11
After swap start end (26.55, 14.85) (27.0, 16.4) 0 11
p1 = (25.95, 14.1)
startIdx = 1 obj (27.0, 15.9)
endIdx = 10 obj (26.3, 14.45)
startDIST = 2.0838665984174716 obj (27.0, 15.9)
endDIST = 0.494974746830584 obj (26.3, 14.45)
AL DOILEA WHILE startIdx = 1 obj (27.0, 15.9) start 2.0838665984174716
startDist Il apendeaza pe (27.0, 15.9) endDist 2.0838665984174716
AL DOILEA WHILE startIdx = 2 obj (26.75, 15.35) start 1.4840822079655833
startDist Il apendeaza pe (26.75, 15.35) endDist 1.4840822079655833
Pentru (26.3, 14.45) endDist este 0.494974746830584 iar r-eps este -0.46999999999999975
endDist Il apendeaza pe (26.3, 14.45) endDist 0.494974746830584
startDist Il apendeaza pe (23.55, 11.85) startDist 3.2897568299191953
Before swap start end (23.55, 11.85) (26.3, 14.45) 3 10
After swap start end (26.3, 14.45) (23.55, 11.85) 3 10
p1 = (25.95, 14.1)
startIdx = 4 obj (24.05, 12.2)
endIdx = 9 obj (25.95, 14.1)
startDIST = 2.6870057685088797 obj (24.05, 12.2)
endDIST = 0.0 obj (25.95, 14.1)
Pentru (25.95, 14.1) endDist este 0.0 iar r-eps este -0.46999999999999975
endDist Il apendeaza pe (25.95, 14.1) endDist 0.0
startDist Il apendeaza pe (24.05, 12.2) startDist 2.6870057685088797
Before swap start end (24.05, 12.2) (25.95, 14.1) 4 9
After swap start end (25.95, 14.1) (24.05, 12.2) 4 9
p1 = (25.95, 14.1)
startIdx = 5 obj (24.4, 12.45)
endIdx = 8 obj (25.35, 13.3)
startDIST = 2.2638462845343548 obj (24.4, 12.45)
endDIST = 0.9999999999999979 obj (25.35, 13.3)
AL DOILEA WHILE startIdx = 5 obj (24.4, 12.45) start 2.2638462845343548
startDist Il apendeaza pe (24.4, 12.45) endDist 2.2638462845343548
AL DOILEA WHILE startIdx = 6 obj (24.8, 12.7) start 1.8117670931993433
startDist Il apendeaza pe (24.8, 12.7) endDist 1.8117670931993433
AL DOILEA WHILE startIdx = 7 obj (25.05, 12.95) start 1.4603081866510228
startDist Il apendeaza pe (25.05, 12.95) endDist 1.4603081866510228
sunt egale 8 8
========================= WIN L ===================
[(26.55, 14.85), (27.0, 15.9), (26.75, 15.35), (26.3, 14.45), (25.95, 14.1), (24.4, 12.45), (24.8, 12.7), (25.05, 12.95), (25.35, 13.3)]
========================= WIN L END ===================
========================= WIN G ===================
[(27.0, 16.4), (23.55, 11.85), (24.05, 12.2)]
========================= WIN G END ===================
========================= OBJS first half ===================
[(26.55, 14.85), (27.0, 15.9), (26.75, 15.35), (26.3, 14.45), (25.95, 14.1), (24.4, 12.45), (24.8, 12.7), (25.05, 12.95)]
========================= OBJS first half END ===================
========================= OBJS last half ===================
[(25.35, 13.3), (24.05, 12.2), (23.55, 11.85), (27.0, 16.4)]
========================= OBJS last half END ===================
p1 = (25.95, 14.1) len objs = 18
r is 2.22
new r is 2.22
p1 = (25.95, 14.1)
startIdx = 0 obj (21.5, 14.9)
endIdx = 17 obj (23.2, 11.65)
startDIST = 4.52133829745132 obj (21.5, 14.9)
endDIST = 3.683069372140579 obj (23.2, 11.65)
PRIMUL WHILE endIdx = 17 obj (23.2, 11.65) endDist 3.683069372140579
endDist Il apendeaza pe (23.2, 11.65) endDist 3.683069372140579
PRIMUL WHILE endIdx = 16 obj (22.75, 11.4) endDist 4.186884283091663
endDist Il apendeaza pe (22.75, 11.4) endDist 4.186884283091663
PRIMUL WHILE endIdx = 15 obj (22.3, 11.3) endDist 4.600271731104586
endDist Il apendeaza pe (22.3, 11.3) endDist 4.600271731104586
PRIMUL WHILE endIdx = 14 obj (27.15, 16.9) endDist 3.046309242345562
endDist Il apendeaza pe (27.15, 16.9) endDist 3.046309242345562
PRIMUL WHILE endIdx = 13 obj (22.15, 15.55) endDist 4.067247226319051
endDist Il apendeaza pe (22.15, 15.55) endDist 4.067247226319051
PRIMUL WHILE endIdx = 12 obj (22.2, 15.65) endDist 4.057708713054697
endDist Il apendeaza pe (22.2, 15.65) endDist 4.057708713054697
PRIMUL WHILE endIdx = 11 obj (22.35, 15.8) endDist 3.981205847478875
endDist Il apendeaza pe (22.35, 15.8) endDist 3.981205847478875
PRIMUL WHILE endIdx = 10 obj (22.4, 15.95) endDist 4.003123780249619
endDist Il apendeaza pe (22.4, 15.95) endDist 4.003123780249619
PRIMUL WHILE endIdx = 9 obj (22.55, 16.05) endDist 3.9195025194532014
endDist Il apendeaza pe (22.55, 16.05) endDist 3.9195025194532014
PRIMUL WHILE endIdx = 8 obj (22.6, 16.2) endDist 3.953795644693841
endDist Il apendeaza pe (22.6, 16.2) endDist 3.953795644693841
PRIMUL WHILE endIdx = 7 obj (22.7, 16.4) endDist 3.9815198103236904
endDist Il apendeaza pe (22.7, 16.4) endDist 3.9815198103236904
PRIMUL WHILE endIdx = 6 obj (22.0, 15.4) endDist 4.158425182686349
endDist Il apendeaza pe (22.0, 15.4) endDist 4.158425182686349
PRIMUL WHILE endIdx = 5 obj (21.9, 15.3) endDist 4.224038352098618
endDist Il apendeaza pe (21.9, 15.3) endDist 4.224038352098618
PRIMUL WHILE endIdx = 4 obj (21.85, 15.25) endDist 4.258227330709339
endDist Il apendeaza pe (21.85, 15.25) endDist 4.258227330709339
PRIMUL WHILE endIdx = 3 obj (21.75, 15.15) endDist 4.3292609068985435
endDist Il apendeaza pe (21.75, 15.15) endDist 4.3292609068985435
PRIMUL WHILE endIdx = 2 obj (21.65, 15.05) endDist 4.403691633164158
endDist Il apendeaza pe (21.65, 15.05) endDist 4.403691633164158
PRIMUL WHILE endIdx = 1 obj (21.55, 15.0) endDist 4.491102314577123
endDist Il apendeaza pe (21.55, 15.0) endDist 4.491102314577123
sunt egale 0 0
========================= WIN L ===================
[]
========================= WIN L END ===================
========================= WIN G ===================
[(23.2, 11.65), (22.75, 11.4), (22.3, 11.3), (27.15, 16.9), (22.15, 15.55), (22.2, 15.65), (22.35, 15.8), (22.4, 15.95), (22.55, 16.05), (22.6, 16.2), (22.7, 16.4), (22.0, 15.4), (21.9, 15.3), (21.85, 15.25), (21.75, 15.15), (21.65, 15.05), (21.55, 15.0), (21.5, 14.9)]
========================= WIN G END ===================
========================= OBJS first half ===================
[(21.5, 14.9), (21.55, 15.0), (21.65, 15.05), (21.75, 15.15), (21.85, 15.25), (21.9, 15.3), (22.0, 15.4), (22.7, 16.4), (22.6, 16.2), (22.55, 16.05), (22.4, 15.95), (22.35, 15.8), (22.2, 15.65), (22.15, 15.55), (27.15, 16.9), (22.3, 11.3), (22.75, 11.4)]
========================= OBJS first half END ===================
========================= OBJS last half ===================
[(23.2, 11.65)]
========================= OBJS last half END ===================
nested loop vine din 
nested loop objs1, objs2 [(26.55, 14.85), (27.0, 15.9), (26.75, 15.35), (26.3, 14.45), (25.95, 14.1), (24.4, 12.45), (24.8, 12.7), (25.05, 12.95), (25.35, 13.3)][(23.2, 11.65), (22.75, 11.4), (22.3, 11.3), (27.15, 16.9), (22.15, 15.55), (22.2, 15.65), (22.35, 15.8), (22.4, 15.95), (22.55, 16.05), (22.6, 16.2), (22.7, 16.4), (22.0, 15.4), (21.9, 15.3), (21.85, 15.25), (21.75, 15.15), (21.65, 15.05), (21.55, 15.0), (21.5, 14.9)]
nested loop vine din 
nested loop objs1, objs2 [(27.0, 16.4), (23.55, 11.85), (24.05, 12.2)][]
nested loop vine din 
nested loop objs1, objs2 [(26.55, 14.85), (27.0, 15.9), (26.75, 15.35), (26.3, 14.45), (25.95, 14.1), (24.4, 12.45), (24.8, 12.7), (25.05, 12.95), (25.35, 13.3)][]
nested loop vine din 
nested loop objs1, objs2 [(24.05, 12.2), (23.55, 11.85), (27.0, 16.4)][(21.5, 14.9), (21.55, 15.0), (21.65, 15.05), (21.75, 15.15), (21.85, 15.25), (21.9, 15.3), (22.0, 15.4), (22.7, 16.4), (22.6, 16.2), (22.55, 16.05), (22.4, 15.95), (22.35, 15.8), (22.2, 15.65), (22.15, 15.55), (27.15, 16.9), (22.3, 11.3), (22.75, 11.4), (23.2, 11.65)]
quick len(objs), constSmallNumber 13 10
p1 = (26.3, 14.45) len objs = 13
r is 2.23
new r is 2.23
p1 = (26.3, 14.45)
startIdx = 0 obj (27.0, 16.4)
endIdx = 12 obj (26.55, 14.85)
startDIST = 2.0718349355100654 obj (27.0, 16.4)
endDIST = 0.4716990566028305 obj (26.55, 14.85)
AL DOILEA WHILE startIdx = 0 obj (27.0, 16.4) start 2.0718349355100654
startDist Il apendeaza pe (27.0, 16.4) endDist 2.0718349355100654
AL DOILEA WHILE startIdx = 1 obj (27.0, 15.9) start 1.6101242188104625
startDist Il apendeaza pe (27.0, 15.9) endDist 1.6101242188104625
AL DOILEA WHILE startIdx = 2 obj (26.75, 15.35) start 1.0062305898749053
startDist Il apendeaza pe (26.75, 15.35) endDist 1.0062305898749053
Pentru (26.55, 14.85) endDist este 0.4716990566028305 iar r-eps este -0.5699999999999998
endDist Il apendeaza pe (26.55, 14.85) endDist 0.4716990566028305
startDist Il apendeaza pe (23.55, 11.85) startDist 3.7845078940332515
Before swap start end (23.55, 11.85) (26.55, 14.85) 3 12
After swap start end (26.55, 14.85) (23.55, 11.85) 3 12
p1 = (26.3, 14.45)
startIdx = 4 obj (24.05, 12.2)
endIdx = 11 obj (26.3, 14.45)
startDIST = 3.181980515339464 obj (24.05, 12.2)
endDIST = 0.0 obj (26.3, 14.45)
Pentru (26.3, 14.45) endDist este 0.0 iar r-eps este -0.5699999999999998
endDist Il apendeaza pe (26.3, 14.45) endDist 0.0
startDist Il apendeaza pe (24.05, 12.2) startDist 3.181980515339464
Before swap start end (24.05, 12.2) (26.3, 14.45) 4 11
After swap start end (26.3, 14.45) (24.05, 12.2) 4 11
p1 = (26.3, 14.45)
startIdx = 5 obj (24.4, 12.45)
endIdx = 10 obj (25.95, 14.1)
startDIST = 2.758622844826746 obj (24.4, 12.45)
endDIST = 0.494974746830584 obj (25.95, 14.1)
Pentru (25.95, 14.1) endDist este 0.494974746830584 iar r-eps este -0.5699999999999998
endDist Il apendeaza pe (25.95, 14.1) endDist 0.494974746830584
startDist Il apendeaza pe (24.4, 12.45) startDist 2.758622844826746
Before swap start end (24.4, 12.45) (25.95, 14.1) 5 10
After swap start end (25.95, 14.1) (24.4, 12.45) 5 10
p1 = (26.3, 14.45)
startIdx = 6 obj (24.8, 12.7)
endIdx = 9 obj (25.75, 13.7)
startDIST = 2.3048861143232218 obj (24.8, 12.7)
endDIST = 0.9300537618869141 obj (25.75, 13.7)
Pentru (25.75, 13.7) endDist este 0.9300537618869141 iar r-eps este -0.5699999999999998
endDist Il apendeaza pe (25.75, 13.7) endDist 0.9300537618869141
startDist Il apendeaza pe (24.8, 12.7) startDist 2.3048861143232218
Before swap start end (24.8, 12.7) (25.75, 13.7) 6 9
After swap start end (25.75, 13.7) (24.8, 12.7) 6 9
p1 = (26.3, 14.45)
startIdx = 7 obj (25.05, 12.95)
endIdx = 8 obj (25.35, 13.3)
startDIST = 1.9525624189766635 obj (25.05, 12.95)
endDIST = 1.4916433890176282 obj (25.35, 13.3)
AL DOILEA WHILE startIdx = 7 obj (25.05, 12.95) start 1.9525624189766635
startDist Il apendeaza pe (25.05, 12.95) endDist 1.9525624189766635
sunt egale 8 8
========================= WIN L ===================
[(27.0, 16.4), (27.0, 15.9), (26.75, 15.35), (26.55, 14.85), (26.3, 14.45), (25.95, 14.1), (25.75, 13.7), (25.05, 12.95), (25.35, 13.3)]
========================= WIN L END ===================
========================= WIN G ===================
[(23.55, 11.85), (24.05, 12.2), (24.4, 12.45), (24.8, 12.7)]
========================= WIN G END ===================
========================= OBJS first half ===================
[(27.0, 16.4), (27.0, 15.9), (26.75, 15.35), (26.55, 14.85), (26.3, 14.45), (25.95, 14.1), (25.75, 13.7), (25.05, 12.95)]
========================= OBJS first half END ===================
========================= OBJS last half ===================
[(25.35, 13.3), (24.8, 12.7), (24.4, 12.45), (24.05, 12.2), (23.55, 11.85)]
========================= OBJS last half END ===================
Intra in win
win len(objs), len(objs1), len(objs2), constSmallNumber 13 | [(27.0, 16.4), (27.0, 15.9), (26.75, 15.35), (26.55, 14.85), (26.3, 14.45), (25.95, 14.1), (25.75, 13.7), (25.05, 12.95), (25.35, 13.3)] | [(23.55, 11.85), (24.05, 12.2), (24.4, 12.45), (24.8, 12.7)] | 10
p1 = (23.55, 11.85) len objs = 9
r is 1.67
new r is 1.67
p1 = (23.55, 11.85)
startIdx = 0 obj (27.0, 16.4)
endIdx = 8 obj (25.35, 13.3)
startDIST = 5.710078808562977 obj (27.0, 16.4)
endDIST = 2.311384866265245 obj (25.35, 13.3)
PRIMUL WHILE endIdx = 8 obj (25.35, 13.3) endDist 2.311384866265245
endDist Il apendeaza pe (25.35, 13.3) endDist 2.311384866265245
PRIMUL WHILE endIdx = 7 obj (25.05, 12.95) endDist 1.8601075237738272
endDist Il apendeaza pe (25.05, 12.95) endDist 1.8601075237738272
PRIMUL WHILE endIdx = 6 obj (25.75, 13.7) endDist 2.874456470360961
endDist Il apendeaza pe (25.75, 13.7) endDist 2.874456470360961
PRIMUL WHILE endIdx = 5 obj (25.95, 14.1) endDist 3.2897568299191953
endDist Il apendeaza pe (25.95, 14.1) endDist 3.2897568299191953
PRIMUL WHILE endIdx = 4 obj (26.3, 14.45) endDist 3.7845078940332515
endDist Il apendeaza pe (26.3, 14.45) endDist 3.7845078940332515
PRIMUL WHILE endIdx = 3 obj (26.55, 14.85) endDist 4.242640687119285
endDist Il apendeaza pe (26.55, 14.85) endDist 4.242640687119285
PRIMUL WHILE endIdx = 2 obj (26.75, 15.35) endDist 4.74236228055175
PRIMUL WHILE endIdx = 1 obj (27.0, 15.9) endDist 5.32024435529046
sunt egale 0 0
========================= WIN L ===================
[]
========================= WIN L END ===================
========================= WIN G ===================
[(25.35, 13.3), (25.05, 12.95), (25.75, 13.7), (25.95, 14.1), (26.3, 14.45), (26.55, 14.85)]
========================= WIN G END ===================
========================= OBJS first half ===================
[(27.0, 16.4), (27.0, 15.9), (26.75, 15.35), (26.55, 14.85), (26.3, 14.45), (25.95, 14.1), (25.75, 13.7), (25.05, 12.95)]
========================= OBJS first half END ===================
========================= OBJS last half ===================
[(25.35, 13.3)]
========================= OBJS last half END ===================
p1 = (23.55, 11.85) len objs = 4
r is 0.83
new r is 0.83
p1 = (23.55, 11.85)
startIdx = 0 obj (23.55, 11.85)
endIdx = 3 obj (24.8, 12.7)
startDIST = 0.0 obj (23.55, 11.85)
endDIST = 1.511621645783097 obj (24.8, 12.7)
PRIMUL WHILE endIdx = 3 obj (24.8, 12.7) endDist 1.511621645783097
endDist Il apendeaza pe (24.8, 12.7) endDist 1.511621645783097
PRIMUL WHILE endIdx = 2 obj (24.4, 12.45) endDist 1.0404326023342387
endDist Il apendeaza pe (24.4, 12.45) endDist 1.0404326023342387
AL DOILEA WHILE startIdx = 0 obj (23.55, 11.85) start 0.0
startDist Il apendeaza pe (23.55, 11.85) endDist 0.0
sunt egale 1 1
========================= WIN L ===================
[(23.55, 11.85), (24.05, 12.2)]
========================= WIN L END ===================
========================= WIN G ===================
[(24.8, 12.7), (24.4, 12.45)]
========================= WIN G END ===================
========================= OBJS first half ===================
[(23.55, 11.85)]
========================= OBJS first half END ===================
========================= OBJS last half ===================
[(24.05, 12.2), (24.4, 12.45), (24.8, 12.7)]
========================= OBJS last half END ===================
nested loop vine din 
nested loop objs1, objs2 [][(24.8, 12.7), (24.4, 12.45)]
nested loop vine din 
nested loop objs1, objs2 [(25.35, 13.3), (25.05, 12.95), (25.75, 13.7), (25.95, 14.1), (26.3, 14.45), (26.55, 14.85)][(23.55, 11.85), (24.05, 12.2)]
nested loop vine din 
nested loop objs1, objs2 [][(23.55, 11.85), (24.05, 12.2)]
nested loop vine din 
nested loop objs1, objs2 [(27.0, 16.4), (27.0, 15.9), (26.75, 15.35), (26.55, 14.85), (26.3, 14.45), (25.95, 14.1), (25.75, 13.7), (25.05, 12.95), (25.35, 13.3)][(24.4, 12.45), (24.8, 12.7)]
quick len(objs), constSmallNumber 9 10
